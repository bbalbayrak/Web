[{"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\index.js":"1","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\App.js":"2","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\reportWebVitals.js":"3","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Login\\Login.js":"4","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\Vendors.js":"5","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\CreateVendor.js":"6","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\Customers.js":"7","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\CreateCustomer.js":"8","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\FormsPage.js":"9","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\Home.js":"10","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\createForm.js":"11","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\editForm.js":"12","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Gallery\\gallery.js":"13","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\WorkOrders.js":"14","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\FormsPage\\UploadForm.js":"15","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\Certificate.js":"16","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\CreateWorkOrder.js":"17","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QualityControl.js":"18","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QRCertificate.js":"19","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\NewWork.js":"20","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Users.js":"21","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\CreateUser.js":"22","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PageNotFound\\PageNotFound.js":"23","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Transfers\\Transfers.js":"24","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\RouteGuard\\RouteGuard.js":"25","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Transfers\\TransfersDetail.js":"26","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\closedInspection.js":"27","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\Inspection.js":"28","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\openInspection.js":"29","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\TopBar.js":"30","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\LandingPage.js":"31","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\CustomersApi.js":"32","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\FormsPage\\UploadFormApi.js":"33","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\WorldMapApi.js":"34","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Login\\useAuth.js":"35","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\inspection_utils.js":"36","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\enumerated_inspection.js":"37","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\inspectionapi.js":"38","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\InspectionUI.js":"39","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PageNotFound\\ErrorPage.js":"40","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\formapi.js":"41","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\renderSegmentContent.js":"42","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\rowDetail.js":"43","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\pqc_utils.js":"44","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\MenuItems.js":"45","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\SubMenuItem.js":"46","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Transfers\\TransfersApi.js":"47","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Userapi.js":"48","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\useVendors.js":"49","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\ProductSegment.js":"50","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\worksapi.js":"51","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\DropDownMenu.js":"52","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\functions\\Filter.js":"53","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\functions\\MultipleFilter.js":"54","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\EngineeringSolutionSection.js":"55","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\Chart\\Chart.js":"56","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\Cards.js":"57","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\NewsLetter.js":"58","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\Hero.js":"59","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderFinalPartMeasurement.js":"60","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\Footer.js":"61","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderPaintReport.js":"62","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderQoatingReport.js":"63","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderSubPartDimensiol.js":"64","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderProductPackingStandart.js":"65","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopup.js":"66","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopupApi.js":"67","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\draftInspection.js":"68","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\waitingInspection.js":"69","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\ButtonPopup.js":"70","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\turkishHelpers.js":"71"},{"size":337,"mtime":1688541530513,"results":"72","hashOfConfig":"73"},{"size":5437,"mtime":1689777175302,"results":"74","hashOfConfig":"73"},{"size":375,"mtime":1688541530513,"results":"75","hashOfConfig":"73"},{"size":2886,"mtime":1688715140216,"results":"76","hashOfConfig":"73"},{"size":834,"mtime":1688541530506,"results":"77","hashOfConfig":"73"},{"size":1442,"mtime":1690453762413,"results":"78","hashOfConfig":"73"},{"size":1399,"mtime":1688541530482,"results":"79","hashOfConfig":"73"},{"size":1470,"mtime":1688541530482,"results":"80","hashOfConfig":"73"},{"size":1691,"mtime":1688972702530,"results":"81","hashOfConfig":"73"},{"size":5643,"mtime":1688541530485,"results":"82","hashOfConfig":"73"},{"size":4137,"mtime":1689000285365,"results":"83","hashOfConfig":"73"},{"size":3925,"mtime":1689000474619,"results":"84","hashOfConfig":"73"},{"size":1741,"mtime":1688541530484,"results":"85","hashOfConfig":"73"},{"size":6918,"mtime":1690454383875,"results":"86","hashOfConfig":"73"},{"size":5524,"mtime":1688541530483,"results":"87","hashOfConfig":"73"},{"size":3908,"mtime":1690454341786,"results":"88","hashOfConfig":"73"},{"size":9113,"mtime":1688541530508,"results":"89","hashOfConfig":"73"},{"size":3590,"mtime":1688541530510,"results":"90","hashOfConfig":"73"},{"size":6092,"mtime":1689172873994,"results":"91","hashOfConfig":"73"},{"size":4488,"mtime":1688541530508,"results":"92","hashOfConfig":"73"},{"size":1357,"mtime":1688541530505,"results":"93","hashOfConfig":"73"},{"size":4713,"mtime":1688541530504,"results":"94","hashOfConfig":"73"},{"size":311,"mtime":1688541530500,"results":"95","hashOfConfig":"73"},{"size":878,"mtime":1688541530502,"results":"96","hashOfConfig":"73"},{"size":832,"mtime":1688541530500,"results":"97","hashOfConfig":"73"},{"size":2484,"mtime":1688541530503,"results":"98","hashOfConfig":"73"},{"size":4557,"mtime":1689859320730,"results":"99","hashOfConfig":"73"},{"size":1840,"mtime":1689003445472,"results":"100","hashOfConfig":"73"},{"size":9167,"mtime":1689172575614,"results":"101","hashOfConfig":"73"},{"size":1101,"mtime":1688716636145,"results":"102","hashOfConfig":"73"},{"size":497,"mtime":1688541530488,"results":"103","hashOfConfig":"73"},{"size":572,"mtime":1690453108780,"results":"104","hashOfConfig":"73"},{"size":1831,"mtime":1690455395396,"results":"105","hashOfConfig":"73"},{"size":731,"mtime":1690453241500,"results":"106","hashOfConfig":"73"},{"size":1333,"mtime":1690453275939,"results":"107","hashOfConfig":"73"},{"size":4757,"mtime":1689775387727,"results":"108","hashOfConfig":"73"},{"size":1018,"mtime":1689002106388,"results":"109","hashOfConfig":"73"},{"size":3818,"mtime":1690453251786,"results":"110","hashOfConfig":"73"},{"size":10484,"mtime":1690444188104,"results":"111","hashOfConfig":"73"},{"size":343,"mtime":1688541530499,"results":"112","hashOfConfig":"73"},{"size":2755,"mtime":1690453410327,"results":"113","hashOfConfig":"73"},{"size":1984,"mtime":1689000305687,"results":"114","hashOfConfig":"73"},{"size":1997,"mtime":1688736145036,"results":"115","hashOfConfig":"73"},{"size":2044,"mtime":1689000038099,"results":"116","hashOfConfig":"73"},{"size":2202,"mtime":1689776500609,"results":"117","hashOfConfig":"73"},{"size":3148,"mtime":1688723617449,"results":"118","hashOfConfig":"73"},{"size":913,"mtime":1690453686202,"results":"119","hashOfConfig":"73"},{"size":951,"mtime":1690453694132,"results":"120","hashOfConfig":"73"},{"size":764,"mtime":1690454528870,"results":"121","hashOfConfig":"73"},{"size":9310,"mtime":1689172363222,"results":"122","hashOfConfig":"73"},{"size":7481,"mtime":1690454395624,"results":"123","hashOfConfig":"73"},{"size":1803,"mtime":1688541530500,"results":"124","hashOfConfig":"73"},{"size":839,"mtime":1688541530512,"results":"125","hashOfConfig":"73"},{"size":1354,"mtime":1689000891241,"results":"126","hashOfConfig":"73"},{"size":1036,"mtime":1688541530492,"results":"127","hashOfConfig":"73"},{"size":4220,"mtime":1688541530485,"results":"128","hashOfConfig":"73"},{"size":2720,"mtime":1688541530491,"results":"129","hashOfConfig":"73"},{"size":1241,"mtime":1688541530492,"results":"130","hashOfConfig":"73"},{"size":1015,"mtime":1688541530492,"results":"131","hashOfConfig":"73"},{"size":4674,"mtime":1689000328563,"results":"132","hashOfConfig":"73"},{"size":1211,"mtime":1688541530492,"results":"133","hashOfConfig":"73"},{"size":528,"mtime":1688541530496,"results":"134","hashOfConfig":"73"},{"size":530,"mtime":1688541530496,"results":"135","hashOfConfig":"73"},{"size":4672,"mtime":1689000312717,"results":"136","hashOfConfig":"73"},{"size":539,"mtime":1688541530496,"results":"137","hashOfConfig":"73"},{"size":2579,"mtime":1688541530511,"results":"138","hashOfConfig":"73"},{"size":602,"mtime":1690453677293,"results":"139","hashOfConfig":"73"},{"size":11166,"mtime":1689859700591,"results":"140","hashOfConfig":"73"},{"size":11170,"mtime":1689859485938,"results":"141","hashOfConfig":"73"},{"size":1837,"mtime":1689773323081,"results":"142","hashOfConfig":"73"},{"size":952,"mtime":1689858346203,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"1ofgmv0",{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"147"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"147"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"147"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"147"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"147"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"147"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"147"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"147"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"147"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"147"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"147"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"147"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"147"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"147"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\index.js",[],[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\App.js",["375","376"],[],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Vendors from \"./components/Vendors/Vendors\";\r\nimport Customers from \"./components/Customers/Customers\";\r\nimport { BrowserRouter as Router, Route, Link, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport FormsPage from \"./components/PQC/FormsPage\";\r\nimport FormEdit from \"./components/PQC/editForm\";\r\nimport UploadForm from './components/FormsPage/UploadForm';\r\nimport Gallery from \"./components/Gallery/gallery\";\r\nimport WorkOrders from \"./components/Works/WorkOrders\";\r\nimport CreateWorkOrder from \"./components/Works/CreateWorkOrder\";\r\nimport Certificate from \"./components/Works/Certificate\";\r\nimport QRCertificate from \"./components/Works/QRCertificate\";\r\nimport QualityControl from \"./components/Works/QualityControl\";\r\nimport RouteGuard from './components/RouteGuard/RouteGuard';\r\nimport Users from './components/Users/Users';\r\nimport CreateUser from \"./components/Users/CreateUser\";\r\nimport NewWork from \"./components/Works/NewWork\";\r\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\r\nimport CreateVendor from \"./components/Vendors/CreateVendor\";\r\nimport CreateCustomer from \"./components/Customers/CreateCustomer\";\r\nimport FormCreate from \"./components/PQC/createForm\";\r\nimport Transfers from \"./components/Transfers/Transfers\";\r\nimport TransfersDetail from \"./components/Transfers/TransfersDetail\";\r\nimport Inspection from \"./components/InspectionPlan/Inspection\";\r\nimport DraftInspection from \"./components/InspectionPlan/draftInspection\"\r\nimport WaitingInspection from \"./components/InspectionPlan/waitingInspection\"\r\nimport ClosedInspection from \"./components/InspectionPlan/closedInspection\"\r\nimport { TopBar } from \"./components/TopBarMenu/TopBar\";\r\nimport LandingPage from \"./components/LandingPage/LandingPage\";\r\n\r\nfunction App() {\r\n  const [showMenu, setShowMenu] = useState(true);\r\n \r\n  return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n        <TopBar showMenu={showMenu} />\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<LandingPage setShowMenu={setShowMenu} />} /> \r\n            <Route path=\"/customers\" element={<RouteGuard setShowMenu={setShowMenu}><Customers /></RouteGuard>}/>\r\n            <Route path=\"/login\" element={<Login setShowMenu={setShowMenu} />}/>\r\n            <Route path=\"/home\" element={<RouteGuard setShowMenu={setShowMenu}><Home /></RouteGuard>}/>\r\n            <Route path=\"/vendors\" element={<RouteGuard setShowMenu={setShowMenu}><Vendors /></RouteGuard>}/>\r\n            <Route path=\"/products\" element={<RouteGuard setShowMenu={setShowMenu}><UploadForm /></RouteGuard>}/>\r\n            <Route path=\"/pqc\" element={<RouteGuard setShowMenu={setShowMenu}><FormsPage /></RouteGuard>}/>\r\n            <Route path=\"/pqc/:id\" element={<RouteGuard setShowMenu={setShowMenu}><FormEdit /></RouteGuard>}/>\r\n            <Route path='/gallery' element={<RouteGuard setShowMenu={setShowMenu}><Gallery /></RouteGuard>}/>\r\n            <Route path='/workorders' element={<RouteGuard setShowMenu={setShowMenu}><WorkOrders /></RouteGuard>}/>\r\n            <Route path='/newworks' element={<RouteGuard setShowMenu={setShowMenu}><NewWork /></RouteGuard>}/>\r\n            <Route path='/create-work-order' element={<RouteGuard setShowMenu={setShowMenu}><CreateWorkOrder /></RouteGuard>}/>\r\n            <Route path='/certificate' element={<RouteGuard setShowMenu={setShowMenu}><Certificate /></RouteGuard>}/>\r\n            <Route path='/qr-certificate' element={<RouteGuard setShowMenu={setShowMenu}><QRCertificate /></RouteGuard>}/>\r\n            <Route path='/quality-control' element={<RouteGuard setShowMenu={setShowMenu}><QualityControl /></RouteGuard>}/>\r\n            <Route path=\"/users\" element={<RouteGuard setShowMenu={setShowMenu}><Users /></RouteGuard>}/>\r\n            <Route path=\"/create-user\" element={<RouteGuard setShowMenu={setShowMenu}><CreateUser /></RouteGuard>}/>\r\n            <Route path=\"/*\" element={<RouteGuard setShowMenu={setShowMenu}><PageNotFound /></RouteGuard>}/>\r\n            <Route path=\"/create-vendor\" element={<RouteGuard setShowMenu={setShowMenu}><CreateVendor /></RouteGuard>}/>\r\n            <Route path=\"/create-customer\" element={<RouteGuard setShowMenu={setShowMenu}><CreateCustomer /></RouteGuard>}/>\r\n            <Route path=\"/create-form\" element={<RouteGuard setShowMenu={setShowMenu}><FormCreate /></RouteGuard>}/>\r\n            <Route path=\"/transfers\" element={<RouteGuard setShowMenu={setShowMenu}><Transfers /></RouteGuard>}/>\r\n            <Route path=\"/transfers/:name\" element={<RouteGuard setShowMenu={setShowMenu}><TransfersDetail /></RouteGuard>}/>\r\n            <Route path=\"/inspection-plan\" element={<RouteGuard setShowMenu={setShowMenu}><Inspection /></RouteGuard>}/>\r\n            <Route path=\"/draft-inspection\" element={<RouteGuard setShowMenu={setShowMenu}><DraftInspection /></RouteGuard>}/>\r\n            <Route path=\"/waiting-inspection\" element={<RouteGuard setShowMenu={setShowMenu}><WaitingInspection /></RouteGuard>}/>\r\n            <Route path=\"/closed-inspection\" element={<RouteGuard setShowMenu={setShowMenu}><ClosedInspection /></RouteGuard>}/>\r\n            <Route path=\"/landing-page\" element={<LandingPage setShowMenu={setShowMenu} />} /> \r\n          </Routes>\r\n        </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Login\\Login.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\Vendors.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\CreateVendor.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\Customers.js",["377"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchCustomers } from './CustomersApi';\r\nimport \"./Customers.css\";\r\n\r\nconst Customers = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const getCustomers = async () => {\r\n      const customers = await fetchCustomers();\r\n      setCustomers(customers);\r\n    };\r\n  \r\n    getCustomers();\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    navigate(\"/create-customer\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"customers-container\">\r\n      <div className=\"header-container\">\r\n        <h1>Müşteriler</h1>\r\n        <button className=\"add-customer-button\" onClick={handleClick}>\r\n          + Müşteri Ekle\r\n        </button>\r\n      </div>\r\n      <table className=\"customers-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"customers-th\">ID</th>\r\n            <th>İsim</th>\r\n            <th>Odooid</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer) => (\r\n            <tr key={customer.id}>\r\n              <td>{customer.id}</td>\r\n              <td>{customer.name}</td>\r\n              <td>{customer.odooid}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\CreateCustomer.js",["378"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { createCustomer } from './CustomersApi';\r\nimport \"./CreateCustomer.css\";\r\n\r\nconst CreateCustomer = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [odooid, setOdooid] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      await createCustomer(name, odooid);\r\n      setName(\"\");\r\n      setOdooid(\"\");\r\n    } catch (error) {\r\n      // console.error(\"There was a bloody error while adding the customer:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-customer-container\">\r\n      <h1 className=\"create-customer-title\">Müşteri Ekle</h1>\r\n      <form onSubmit={handleSubmit} className=\"create-customer-form\">\r\n        <label htmlFor=\"name\" className=\"create-customer-label\">İsim:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          className=\"create-customer-input\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"odooid\" className=\"create-customer-label\">Odooid:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"odooid\"\r\n          className=\"create-customer-input\"\r\n          value={odooid}\r\n          onChange={(e) => setOdooid(e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"create-customer-button\">Kaydet</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCustomer;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\FormsPage.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\Home.js",["379","380"],[],"import React from 'react';\r\nimport './Home.css';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { LatLngBounds } from 'leaflet';\r\nimport Chart from './Chart/Chart';\r\nimport { useState, useEffect } from 'react';\r\nimport { getLatestLocations, getAllLocations, createLocation } from './WorldMapApi';\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getLatestLocations()\r\n      .then(response => {\r\n        console.log(response.data.locations); // Gelen veriyi kontrol edelim.\r\n        setMarkers(response.data);\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, []); // Bu useEffect hooku bileşen yüklendiğinde bir kez çalışır.\r\n  \r\n  const maxBounds = new LatLngBounds(\r\n    [-90, -180], // Güneybatı köşe koordinatları\r\n    [90, 180]    // Kuzeydoğu köşe koordinatları\r\n    \r\n  );\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Filtreleme */}\r\n      <div className=\"filters\">\r\n        <input type=\"date\" className=\"start-date\" />\r\n        <input type=\"date\" className=\"end-date\" />\r\n        <button className=\"filter-button\">Filtrele</button>\r\n      </div>\r\n\r\n      {/* Kartlar */}\r\n      <div className=\"cards\">\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">150</span>\r\n            <p className=\"title\">Toplam İş Sayısı</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">75</span>\r\n            <p className=\"title\">Açık İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">30</span>\r\n            <p className=\"title\">XXX İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">40</span>\r\n            <p className=\"title\">Bitirilen İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">5</span>\r\n            <p className=\"title\">İptal Edilen İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">20</span>\r\n            <p className=\"title\">Zamanı Geçen İşler</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"world-map\">\r\n      <MapContainer\r\n          center={[51.505, -0.09]} // Başlangıç koordinatları\r\n          zoom={1} // Başlangıç yakınlaştırma seviyesi\r\n          minZoom={2} // Minimum yakınlaştırma seviyesi\r\n          maxZoom={17} // Maksimum yakınlaştırma seviyesi\r\n          maxBounds={maxBounds} // Harita sınırlarını ayarlayın\r\n          maxBoundsViscosity={1} // Harita sınırlarına yapışkanlık (1: tam sınırlama)\r\n      >\r\n        <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {markers.map((marker, index) => (\r\n  <Marker key={index} position={[marker.atitude, marker.longitude]}>\r\n    <Popup>\r\n      <div>\r\n        <strong>{marker.name}</strong> <br />\r\n        <small>{new Date(parseInt(marker.latesttimestamp)).toLocaleString()}</small>\r\n      </div>\r\n    </Popup>\r\n  </Marker>\r\n))}\r\n\r\n\r\n      </MapContainer>\r\n    </div>\r\n      {/* İstatistikler */}\r\n      <div className=\"statistics\">\r\n        <div className=\"weekly-statistics\">\r\n      <Chart />\r\n       </div>\r\n        <div className=\"general-statistics\">\r\n          <h3>Genel İstatistik</h3>\r\n          {/* İstatistik bileşeni buraya eklenecek */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* İş Üzerinde Çalışan Kullanıcılar Tablosu */}\r\n      <div className=\"users-working\">\r\n        <table className=\"users-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Kullanıcı</th>\r\n              <th>Çalıştığı İş</th>\r\n              <th>Açılış Zamanı</th>\r\n              <th>Başlama Zamanı</th>\r\n              <th>Son Düzenlenme Tarihi</th>\r\n              <th>Durumu</th>\r\n              <th>#</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Ahmet Yılmaz</td>\r\n              <td>Proje X</td>\r\n              <td>2023-04-01</td>\r\n              <td>2023-04-02</td>\r\n              <td>2023-04-08</td>\r\n              <td>Aktif</td>\r\n              <td>1</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Fatma Demir</td>\r\n              <td>Proje Y</td>\r\n              <td>2023-04-03</td>\r\n              <td>2023-04-04</td>\r\n              <td>2023-04-09</td>\r\n              <td>Aktif</td>\r\n              <td>2</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\createForm.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\editForm.js",["381","382"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ErrorPage from '../PageNotFound/ErrorPage';\r\nimport { getFormById } from './formapi';\r\nimport { segments } from './renderSegmentContent';\r\nimport { renderSegmentContent } from './renderSegmentContent';\r\nimport { initialFormState, handleFormChange, saveForm, handleDragOver } from './pqc_utils';\r\nimport { addRow, handleInputChange, handleDrop, handleFileSelect } from './rowDetail';\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [form, setForm] = useState(null);\r\n  const [activeSegment, setActiveSegment] = useState(1);\r\n  const [finalRows, setFinalRows] = useState([]);\r\n  const [subpartRows, setSubpartRows] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const addFinalRow = addRow(finalRows, setFinalRows);\r\n  const handleFinalInputChange = handleInputChange(finalRows, setFinalRows);\r\n  const handleFinalDrop = handleDrop(finalRows, setFinalRows);\r\n  const handleFinalFileSelect = handleFileSelect(finalRows, setFinalRows);\r\n\r\n  const addSubpartRow = addRow(subpartRows, setSubpartRows);\r\n  const handleSubpartInputChange = handleInputChange(subpartRows, setSubpartRows);\r\n  const handleSubpartDrop = handleDrop(subpartRows, setSubpartRows);\r\n  const handleSubpartFileSelect = handleFileSelect(subpartRows, setSubpartRows);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const formData = await getFormById(id);\r\n        console.log(\"Fetched form data: \", formData);  // Log the fetched form data\r\n        setForm(formData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching form: \", error);  // Log the error if there is one\r\n        setError(true);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (form) {\r\n      const activeStep = form.steps.find(\r\n        (step) => step.name === segments[activeSegment - 1].name\r\n      );\r\n      console.log(\"Active step: \", activeStep);  // Log the active step\r\n      if (activeStep && activeStep.substeps) {\r\n        // Here you should separate rows into finalRows and subpartRows based on some condition\r\n        console.log(\"Active step substeps: \", activeStep.substeps);  // Log substeps before setting\r\n        setFinalRows(activeStep.substeps || []);\r\n        setSubpartRows(activeStep.substeps || []);\r\n      }\r\n    }\r\n}, [form, activeSegment]);\r\n\r\n\r\n  const handleSegmentClick = (order) => {\r\n    setActiveSegment(order);\r\n  };\r\n\r\n  if (error) {\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  return (\r\n    <div className='form-edit-main'>\r\n      <h1>ITP Formu</h1>\r\n      {form ? (\r\n        <div>\r\n          <h2>Product Name: {form.product_name || form.product?.name}</h2>\r\n          <h2>Vendor Name: {form.vendor_name || form.vendor?.name}</h2>\r\n          <div className=\"segments\">\r\n            {segments.map((segment) => (\r\n              <button key={segment.order} onClick={() => handleSegmentClick(segment.order)} className={activeSegment === segment.order ? 'active' : ''} >\r\n                {segment.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"segment-content\">\r\n            {renderSegmentContent({\r\n              activeSegment,\r\n              form,\r\n              finalRows,\r\n              subpartRows,\r\n              handleFinalInputChange,\r\n              handleSubpartInputChange,\r\n              handleDragOver,\r\n              handleFinalDrop,\r\n              handleSubpartDrop,\r\n              handleFinalFileSelect,\r\n              handleSubpartFileSelect,\r\n              addFinalRow,\r\n              addSubpartRow,\r\n              saveSubForm: saveForm(form, subpartRows, 0),\r\n              saveFinalForm: saveForm(form, finalRows, 1),\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Form yükleniyor...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormEdit;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Gallery\\gallery.js",["383","384"],[],"import React, { useState } from 'react';\r\nimport './gallery.css';\r\n\r\nconst images = [\r\n  'https://picsum.photos/id/10/800/600',\r\n  'https://picsum.photos/id/20/800/600',\r\n  'https://picsum.photos/id/30/800/600'\r\n];\r\n\r\nconst Gallery = () => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handlePrev = () => {\r\n    setCurrentImage(currentImage === 0 ? images.length - 1 : currentImage - 1);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentImage(currentImage === images.length - 1 ? 0 : currentImage + 1);\r\n  };\r\n\r\n  const toggleModal = (index) => {\r\n    setCurrentImage(index);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const closeModal = (event) => {\r\n    if (event.target.classList.contains('gallery-modal')) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      {images.map((image, index) => (\r\n        <img\r\n          key={index}\r\n          className=\"gallery-image\"\r\n          src={image}\r\n          alt={`Image ${index}`}\r\n          onClick={() => toggleModal(index)}\r\n        />\r\n      ))}\r\n      {showModal && (\r\n        <div className=\"gallery-modal\" onClick={closeModal}>\r\n          <img\r\n            className=\"modal-image\"\r\n            src={images[currentImage]}\r\n            alt={`Image ${currentImage}`}\r\n          />\r\n          <div className=\"modal-arrows\">\r\n            <div className=\"modal-arrow modal-arrow-left\" onClick={handlePrev}>\r\n              &lt;\r\n            </div>\r\n            <div className=\"modal-arrow modal-arrow-right\" onClick={handleNext}>\r\n              &gt;\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\WorkOrders.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\FormsPage\\UploadForm.js",["385","386"],[],"import React, { useState, useEffect } from 'react';\r\nimport \"./UploadForm.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons'\r\nimport { useApi } from './UploadFormApi';\r\n\r\nconst UploadForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [odooid, setOdooid] = useState('');\r\n  const [customerId, setCustomerId] = useState('');\r\n  const [technicalDrawingFile, setTechnicalDrawingFile] = useState(null);\r\n  const [guideFile, setGuideFile] = useState(null);\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const {\r\n    response,\r\n    customers,\r\n    products,\r\n    errorMessage,\r\n    successMessage,\r\n    fetchCustomers,\r\n    fetchProducts,\r\n    submitProduct,\r\n    getCustomerNameById\r\n  } = useApi();\r\n\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // <FontAwesomeIcon icon={faFilePdf} size=\"2x\" /> {getFileNameFromUrl(product.guideurl) || 'Kılavuz'}\r\n  const getFileNameFromUrl = (url) => {\r\n    return url.substring(url.lastIndexOf('/') + 1);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !odooid || !customerId) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n\r\n    setIsValid(true);\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('odooid', odooid);\r\n    formData.append('customerid', customerId);\r\n    formData.append('technicaldrawingurl', technicalDrawingFile);\r\n    formData.append('guideurl', guideFile);\r\n\r\n    submitProduct(formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-form-container\">\r\n      {!isValid && (\r\n        <div className=\"error-message\">\r\n          Lütfen tüm alanları doldurunuz!\r\n        </div>\r\n      )}\r\n      <form className='products-form' onSubmit={handleSubmit}>\r\n        <table className=\"form-table\">\r\n            <tbody>\r\n              <tr>\r\n                <td>İsim:</td>\r\n                <td>\r\n                  <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Odooid:</td>\r\n                <td>\r\n                  <input type=\"number\" value={odooid} onChange={(e) => setOdooid(e.target.value)} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Müşteri İsimleri:</td>\r\n                <td>\r\n                  <select value={customerId} onChange={(e) => setCustomerId(e.target.value)}>\r\n                    <option value=\"\">Müşteri seçin</option>\r\n                    {customers.map((customer) => (\r\n                      <option key={customer.id} value={customer.id}>\r\n                        {customer.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Teknik Çizim (PDF):</td>\r\n                <td>\r\n                  <input type=\"file\" accept=\".pdf\" onChange={(e) => setTechnicalDrawingFile(e.target.files[0])} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Kılavuz (PDF, JPG):</td>\r\n                <td>\r\n                  <input type=\"file\" accept=\".pdf,.jpg,.jpeg\" onChange={(e) => setGuideFile(e.target.files[0])} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <button type=\"submit\">Kaydet</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n        {response && (\r\n          <div>\r\n            <h3>İsim: {response.data.name}</h3>\r\n            <h3>Odooid: {getCustomerNameById(response.data.customerid)}</h3>\r\n            <h3>Teknik Çizim: {response.data.technicaldrawingurl}</h3>\r\n            <h3>Kılavuz: {response.data.guideurl}</h3>\r\n          </div>\r\n        )}\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n        <h2>Ürün Listesi</h2>\r\n        <table className=\"product-list\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>İsim</th>\r\n              <th>Odooid</th>\r\n              <th>Müşteri İsim</th>\r\n              <th>Teknik Çizim URL</th>\r\n              <th>Kılavuz URL</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.id}>\r\n                <td>{product.id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.odooid}</td>\r\n                <td>{getCustomerNameById(product.customerid)}</td>\r\n                <td>\r\n                  <a href={`https://drive.google.com/viewerng/viewer?embedded=true&url=${product.technicaldrawingurl}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faFilePdf} size=\"2x\" /> {product.name || 'Teknik Çizim'}\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  <a href={`https://drive.google.com/viewerng/viewer?embedded=true&url=${product.guideurl}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faFilePdf} size=\"2x\" /> {product.guideurl || 'Kılavuz'}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\Certificate.js",["387","388","389","390"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {  getWorkById, createWorkStep,  updateWorkStepStatus,  getQRQuestionsByWorkId, getProductByOdooId, getWorkProducts } from './worksapi';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './Certificate.css';\r\n\r\nconst API_URL = process.env.API_URL;\r\n\r\nconst Certificate = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState(null);\r\n  const [work, setWork] = useState(null);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles([...files, ...Array.from(e.target.files)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const work_id = searchParams.get('work_id');\r\n  \r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n\r\n            return product.data;\r\n          })\r\n        );\r\n\r\n        setProducts(fetchedProducts);\r\n        console.log(fetchedProducts)\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n  \r\n\r\n\r\n  const handleSend = async () => {\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const formData = new FormData();\r\n        formData.append('certificate_file', file);\r\n        formData.append('work_id', work_id);\r\n        // formData.append('product_id', product.data.id);\r\n        formData.append('step_id', step_id);\r\n  \r\n        try {\r\n          await axios.post(`${API_URL}/certificates`, formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n          });\r\n        } catch (error) {\r\n          // console.error(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n    } catch (error) {\r\n      // console.error(`Error updating work step status: ${error.message}`);\r\n    }\r\n  \r\n    try {\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'QR Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'QR Certificate',\r\n        status: 'Open',\r\n      };\r\n       await createWorkStep(workStepData);\r\n    } catch (error) {\r\n      // console.error(`Error creating new work step: ${error.message}`);\r\n    }\r\n  \r\n    navigate('/workorders');\r\n  };\r\n\r\n  const handleContinueWithoutSending = () => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2>Certificate</h2>\r\n      {work && (\r\n        <div>\r\n          <h3>Work Details</h3>\r\n          <p>Order Number: {work.data.order_number}</p>\r\n          <p>Project Number: {work.data.project_number}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"file-thumbnails\">\r\n        {files.map((file, index) => (\r\n          <div key={index} className=\"file-thumbnail\">\r\n            <img\r\n              src={URL.createObjectURL(file)}\r\n              alt={file.name}\r\n              className=\"file-thumbnail-img\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input type=\"file\" multiple onChange={handleFileChange} />\r\n      <br></br>\r\n      <button onClick={handleSend} className=\"btn btn-primary\">\r\n        Gönder\r\n      </button>\r\n      <button onClick={handleContinueWithoutSending} className=\"btn btn-secondary\">\r\n        Göndermeden Devam Et\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificate;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\CreateWorkOrder.js",["391"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  createWork,\r\n  createWorkStep,\r\n  getVendors,\r\n  getCustomers,\r\n  getUsers,\r\n  getProducts,\r\n  createWorkProduct,\r\n} from './worksapi';\r\nimport './CreateWorkOrder.css';\r\nimport Select from 'react-select';\r\n\r\nconst CreateWorkOrder = () => {\r\n  const navigate = useNavigate();\r\n  const [workData, setWorkData] = useState({\r\n    order_number: '',\r\n    project_number: '',\r\n    vendor_id: '',\r\n    customer_id: '',\r\n    quality_responsible_id: '',\r\n    inspector_id: null,\r\n    foreman_id: null,\r\n    work_type: 'Order',\r\n    state: '',\r\n    status: '',\r\n    creator_name: null,\r\n    creation_date: new Date().toISOString(),\r\n  });\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [vendors, setVendors] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [qualityResponsibles, setQualityResponsibles] = useState([]);\r\n  const [inspectors, setInspectors] = useState([]);\r\n  const [foremen, setForemen] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n    fetchCustomers();\r\n    fetchUsers();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await getVendors(); // Adjust this with your API call\r\n      setVendors(response.data);\r\n    } catch (error) {\r\n      // console.error('Error fetching vendors:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await getCustomers(); // Adjust this with your API call\r\n      setCustomers(response.data);\r\n    } catch (error) {\r\n      // console.error('Error fetching customers:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers(); // Adjust this with your API call\r\n      const qualityRes = response.data.filter(\r\n        user => user.role === 'Quality Responsible'\r\n      );\r\n      const inspectorRes = response.data.filter(\r\n        user => user.role === 'Inspector'\r\n      );\r\n      const foremanRes = response.data.filter(user => user.role === 'Foreman');\r\n      setQualityResponsibles(qualityRes);\r\n      setInspectors(inspectorRes);\r\n      setForemen(foremanRes);\r\n    } catch (error) {\r\n      // console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await getProducts(); // Adjust this with your API call\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      // console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const handleProductChange = selectedOptions => {\r\n    if (selectedOptions) {\r\n      const selectedProducts = selectedOptions.map(option => {\r\n        const productId = Number(option.value); // Geçerli bir sayıya dönüştürme\r\n        return productId;\r\n      });\r\n      setSelectedProducts(selectedProducts);\r\n    } else {\r\n      setSelectedProducts([]);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setWorkData({ ...workData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const createdWork = await createWork(workData);\r\n      const workStepData = {\r\n        work_id: createdWork.work.id,\r\n        step_name: 'New Work',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'New Work',\r\n        status: 'Open',\r\n      };\r\n      const createdWorkStep = await createWorkStep(workStepData);\r\n\r\n      for (const productId of selectedProducts) {\r\n        await createWorkProduct({\r\n          work_id: createdWork.work.id,\r\n          product_id: productId,\r\n        });\r\n      }\r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      // console.error('Error creating work and workstep:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-work-order\">\r\n      <h1>Create Work Order</h1>\r\n      <form onSubmit={handleSave}>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"order_number\">Order Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"order_number\"\r\n            id=\"order_number\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.order_number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"project_number\">Project Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"project_number\"\r\n            id=\"project_number\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.project_number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"vendor_id\">Vendor</label>\r\n          <select\r\n            name=\"vendor_id\"\r\n            id=\"vendor_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.vendor_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Vendor</option>\r\n            {vendors.map(vendor => (\r\n              <option key={vendor.odooid} value={vendor.odooid}>\r\n                {vendor.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"customer_id\">Customer</label>\r\n          <select\r\n            name=\"customer_id\"\r\n            id=\"customer_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.customer_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Customer</option>\r\n            {customers.map(customer => (\r\n              <option key={customer.odooid} value={customer.odooid}>\r\n                {customer.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"quality_responsible_id\">Quality Responsible</label>\r\n          <select\r\n            name=\"quality_responsible_id\"\r\n            id=\"quality_responsible_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.quality_responsible_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Quality Responsible</option>\r\n            {qualityResponsibles.map(qr => (\r\n              <option key={qr.id} value={qr.id}>\r\n                {qr.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"inspector_id\">Inspector</label>\r\n          <select\r\n            name=\"inspector_id\"\r\n            id=\"inspector_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.inspector_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Inspector</option>\r\n            {inspectors.map(inspector => (\r\n              <option key={inspector.id} value={inspector.id}>\r\n                {inspector.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"foreman_id\">Foreman</label>\r\n          <select\r\n            name=\"foreman_id\"\r\n            id=\"foreman_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.foreman_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Foreman</option>\r\n            {foremen.map(foreman => (\r\n              <option key={foreman.id} value={foreman.id}>\r\n                {foreman.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"product_id\">Product</label>\r\n\r\n          <Select\r\n            name=\"product_id\"\r\n            id=\"product_id\"\r\n            className=\"cwo-form-control\"\r\n            onChange={handleProductChange}\r\n            options={products.map(product => ({\r\n              value: product.odooid,\r\n              label: product.name,\r\n            }))}\r\n            isMulti\r\n            isSearchable\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"state\">State</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"state\"\r\n            id=\"state\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.state}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"status\">Status</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"status\"\r\n            id=\"status\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.status}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"cwo-btn cwo-btn-primary\">\r\n          Save Work Order\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateWorkOrder;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QualityControl.js",["392","393","394"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport ProductSegment from './ProductSegment';\r\nimport {\r\n  getWorkById,\r\n  getProductByOdooId,\r\n  getWorkProducts,\r\n  updateWorkStepStatus,\r\n} from './worksapi';\r\nimport \"./QualityControl.css\"\r\nimport \"./WorkDetails.css\"\r\n\r\nconst QualityControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [activeProductIndex, setActiveProductIndex] = useState(0);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n            return product.data;\r\n          })\r\n        );\r\n        setProducts(fetchedProducts);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const handleComplete = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleProductClick = (index) => {\r\n    setActiveProductIndex(index);\r\n  };\r\n\r\n  const renderProductContent = () => {\r\n    if (!products.length) return null;\r\n    const activeProduct = products[activeProductIndex];\r\n    return (\r\n      <ProductSegment key={activeProduct.id} product={activeProduct} vendorId={work.data.vendor_id} work_id={work_id}/>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2 className=\"qc-heading\">Quality Control</h2>\r\n      {work && (\r\n        <div className=\"work-details\">\r\n          <table>\r\n              <tbody>\r\n                  <tr>\r\n                    <h3>Work Details</h3>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Order Number: {work.data.order_number}</td>\r\n                      <td>Inspector: {work.data.inspector_id}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Project Number: {work.data.project_number}</td>\r\n                      <td>Foreman: {work.data.foreman_id}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Vendor: {work.data.vendor_id}</td>\r\n                      <td>Work Type: {work.data.work_type}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Customer: {work.data.customer_id}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Status: {work.data.status}</td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n      )}\r\n      <div className=\"product-segments\">\r\n        <div className=\"work-detail-row\">\r\n        </div>\r\n        {products.map((product, index) => (\r\n          <button\r\n            key={product.id}\r\n            onClick={() => handleProductClick(index)}\r\n            className={activeProductIndex === index ? 'active' : ''}\r\n          >\r\n            {product.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"product-content\">{renderProductContent()}</div>\r\n      <button onClick={handleComplete} className=\"qc-btn qc-btn-primary\">\r\n        Complete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QualityControl;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QRCertificate.js",["395","396"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { getWorkById, createWorkStep, updateWorkStepStatus, getProductByOdooId, getCertificatesByWorkId, getWorkProducts, getFormByVendorIdAndProductId, getFormByFormId, createQualityControlEntry } from './worksapi';\r\nimport \"./QRCertificate.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst QRCertificate = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [formInfo, setFormInfo] = useState([]);\r\n  const [formDetail, setFormDetail] = useState([]);\r\n  const [certificates, setCertificates] = useState([]);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  const [hasNoFormInfo, setHasNoFormInfo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n  \r\n      const productsData = await getWorkProducts(work_id);\r\n  \r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n            const form = await getFormByVendorIdAndProductId(workData.data.vendor_id, product.data.odooid);\r\n      \r\n            if (!form ) {\r\n              setHasNoFormInfo(true);\r\n              return product.data;\r\n            }\r\n            \r\n            console.log(\"products\",product);\r\n            console.log(\"forms\", form);\r\n            setFormInfo(oldFormInfo => [...oldFormInfo, form]);\r\n      \r\n            const formDetails = await getFormByFormId(form.form.id);\r\n            setFormDetail(oldFormDetail => [...oldFormDetail, formDetails]);\r\n            console.log(\"formDetails\", formDetails);\r\n                  \r\n            return product.data;\r\n          })\r\n        );\r\n              \r\n        setProducts(fetchedProducts);\r\n        console.log(\"fetchedProducts\", fetchedProducts);\r\n      }\r\n      \r\n\r\n      const certificatesData = await getCertificatesByWorkId(work_id);\r\n      if (certificatesData) {\r\n        setCertificates(certificatesData.data);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const sendSubstepData = async (substep) => {\r\n    const qualityControlData = {\r\n      form_id: substep.form_id,\r\n      substep_id: substep.id,\r\n      step_name: substep.step_name, \r\n      name: substep.name, \r\n      technical_drawing_numbering: substep.technical_drawing_numbering, \r\n      tools: substep.tools, \r\n      description: substep.description, \r\n      actual_dimension: substep.actual_dimension, \r\n      lower_tolerance: substep.lower_tolerance, \r\n      upper_tolerance: substep.upper_tolerance, \r\n      example_visual_url: substep.example_visual_url, \r\n      status: substep.status, \r\n      type: substep.type,\r\n      image_id: substep.id,\r\n      measured_value_1: null,\r\n      measured_value_2: null,\r\n      measured_value_3: null,\r\n      work_id: substep.work_id,\r\n      sample_quantity: substep.sample_quantity,\r\n      row_number: substep.row_number\r\n    };\r\n  \r\n    console.log('qualityControlData:', qualityControlData);  // eklediğimiz log\r\n  \r\n    await createQualityControlEntry(qualityControlData);\r\n};\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Quality Control',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Quality Control',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n\r\n      formDetail.forEach((form, index) => {\r\n          form.steps.forEach(step => {\r\n              step.substeps.forEach(async substep => {\r\n                  if (formInfo[index] && formInfo[index].form) {\r\n                      console.log('form_id:', formInfo[index].form.id);  // eklediğimiz log\r\n                      await sendSubstepData({\r\n                          ...substep,\r\n                          form_id: formInfo[index].form.id,\r\n                          work_id: work.data.id\r\n                      });\r\n                  }\r\n              });\r\n          });\r\n      });\r\n    \r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      // console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n  \r\n  const getCertificateName = (url) => {\r\n    const urlParts = url.split('/');\r\n    const nameWithExtension = urlParts[urlParts.length - 1];\r\n    const name = nameWithExtension.split('.pdf')[0];\r\n    return name;\r\n  };\r\n\r\n  return (\r\n    <div className=\"qr-form-page-container\">\r\n      <h2 className=\"qr-heading\">QR Certificate</h2>\r\n      {hasNoFormInfo && (\r\n        <div className=\"alert alert-warning\">\r\n          No ITP form has been prepared yet.\r\n        </div>\r\n      )}\r\n      <div className=\"qr-certificates-container\">\r\n        <h3 className=\"qr-subheading\">Sertifikalar</h3>\r\n        <ul className=\"qr-certificates-list\">\r\n          {certificates.map((certificate, index) => (\r\n            <li key={index} className=\"qr-certificate-item\">\r\n              <div className=\"qr-certificate-div\">\r\n                <a href={certificate.certificate_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"qr-certificate-link\">\r\n                  <FontAwesomeIcon icon={faFilePdf} className=\"qr-certificate-icon\"/>\r\n                </a>\r\n                <p className=\"qr-certificate-name\">{getCertificateName(certificate.certificate_url)}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <button onClick={handleSend} className=\"qr-btn qr-btn-primary\" disabled={hasNoFormInfo}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCertificate;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\NewWork.js",["397","398"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  getWorkById,\r\n  getProductByOdooId,\r\n  getWorkProducts,\r\n  createWorkStep,\r\n  updateWorkStepStatus,\r\n} from './worksapi';\r\nimport \"./NewWork.css\";\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst NewWork = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n            console.log(product)\r\n            return product.data;\r\n          })\r\n        );\r\n\r\n        setProducts(fetchedProducts);\r\n        console.log(fetchedProducts)\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      // Yeni bir work step oluşturun\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Certificate',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      // console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n\r\n  const handleRevise = () => {\r\n    // Revize işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2 className=\"form-page-title\">New Work</h2>\r\n      {work && (\r\n        <div className=\"work-details\">\r\n          <h3>Work Details</h3>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Order Number: {work.data.order_number}</p>\r\n            <p className=\"work-detail\">Project Number: {work.data.project_number}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Vendor: {work.data.vendor_id}</p>\r\n            <p className=\"work-detail\">Customer: {work.data.customer_id}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Inspector: {work.data.inspector_id}</p>\r\n            <p className=\"work-detail\">Foreman: {work.data.foreman_id}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Work Type: {work.data.work_type}</p>\r\n            <p className=\"work-detail\">State: {work.data.state}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Status: {work.data.status}</p>\r\n            <p className=\"work-detail\">Creator: {work.data.creator_name}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n <div className=\"products-container\">\r\n        {products &&\r\n          products.map((product, productIndex) => (\r\n            <div\r\n              key={productIndex}\r\n              className={`product`}\r\n            >\r\n              <h3>\r\n                <FontAwesomeIcon icon={faFilePdf} className=\"info-icon\" />\r\n                <a href={`https://drive.google.com/viewerng/viewer?embedded=true&url=${product.technicaldrawingurl}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {product.name}\r\n                </a>\r\n              </h3>\r\n              <div className=\"product-details\">\r\n              </div>\r\n            </div>\r\n\r\n          ))}\r\n      </div>\r\n\r\n  \r\n      <div className=\"button-container\">\r\n        <button type=\"button\" onClick={handleSend} className=\"btn btn-success send-btn\">\r\n          Send\r\n        </button>\r\n        <button type=\"button\" onClick={handleRevise} className=\"btn btn-warning revise-btn\">\r\n          Revize\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewWork;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Users.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\CreateUser.js",["399","400"],[],"import React, { useState, useEffect } from 'react';\r\nimport { createUser } from './Userapi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CreateUser.css';\r\n\r\nlet foremanId = 1;\r\n\r\nconst CreateUser = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [relatedCompany, setRelatedCompany] = useState('');\r\n  const [userType, setUserType] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (role === 'Foreman') {\r\n      setEmail(`foreman${Math.floor(Math.random() * 100000)}@yenaengineering.nl`);\r\n    }\r\n  }, [role]);\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const userData = {\r\n      email,\r\n      password,\r\n      phone,\r\n      role,\r\n      name,\r\n      username,\r\n      related_company: relatedCompany,\r\n    };\r\n    try {\r\n      const userEmail = userType === \"Foreman\" ? `foreman${Math.floor(Math.random() * 10000)}@yenaengineering.nl` : email;\r\n      userData.email = userEmail;\r\n      const newUser = await createUser(userData);\r\n      navigate(`/users`);\r\n    } catch (error) {\r\n      console.error('Kullanıcı oluşturulamadı:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleUserTypeChange = (event) => {\r\n    setUserType(event.target.value);\r\n    if (event.target.value === 'Inspector' || event.target.value === 'YENA') {\r\n      setRole('Inspector');\r\n      setRelatedCompany('YENA');\r\n    }\r\n  };\r\n\r\n  const rolesBasedOnUserType = () => {\r\n    switch (userType) {\r\n      case 'YENA':\r\n        return ['Quality Manager', 'Quality Responsible', 'Project Manager'];\r\n      case 'Vendor':\r\n        return ['Vendor Responsible', 'Foreman'];\r\n      case 'Inspector':\r\n        return ['Inspector'];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-user-container\">\r\n      <form className=\"create-user-form\" onSubmit={handleSubmit}>\r\n        <h2>Kullanıcı Oluştur</h2>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">İsim:</label>\r\n          <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Kullanıcı Adı:</label>\r\n          <input type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            readOnly={role === \"Foreman\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Şifre:</label>\r\n          <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phone\">Telefon:</label>\r\n          <input type=\"tel\" id=\"phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Kullanıcı Tipi:</label>\r\n          <div>\r\n  <input type=\"radio\" id=\"YENA\" name=\"userType\"\r\n    value=\"YENA\"\r\n    onChange={handleUserTypeChange}\r\n  />\r\n  <label htmlFor=\"YENA\">YENA</label>\r\n</div>\r\n<div>\r\n  <input\r\n    type=\"radio\"\r\n    id=\"Vendor\"\r\n    name=\"userType\"\r\n    value=\"Vendor\"\r\n    onChange={handleUserTypeChange}\r\n  />\r\n  <label htmlFor=\"Vendor\">Vendor</label>\r\n</div>\r\n\r\n<div>\r\n  <input\r\n    type=\"radio\"\r\n    id=\"Inspector\"\r\n    name=\"userType\"\r\n    value=\"Inspector\"\r\n    onChange={handleUserTypeChange}\r\n  />\r\n  <label htmlFor=\"Inspector\">Inspector</label>\r\n</div>\r\n</div>\r\n{userType && (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"role\">Rol:</label>\r\n    <select id=\"role\" value={role} onChange={(e) => setRole(e.target.value)}>\r\n      {rolesBasedOnUserType().map((roleOption) => (\r\n        <option key={roleOption} value={roleOption}>\r\n          {roleOption}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n)}\r\n<div className=\"form-group\">\r\n  <label htmlFor=\"relatedCompany\">İlgili Şirket:</label>\r\n  <input\r\n    type=\"text\"\r\n    id=\"relatedCompany\"\r\n    value={relatedCompany}\r\n    onChange={(e) => setRelatedCompany(e.target.value)}\r\n    readOnly={userType === 'Inspector' || userType === 'YENA'}\r\n  />\r\n</div>\r\n<button type=\"submit\">Kullanıcı Oluştur</button>\r\n</form>\r\n</div>\r\n);\r\n};\r\n\r\nexport default CreateUser;\r\n\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PageNotFound\\PageNotFound.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Transfers\\Transfers.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\RouteGuard\\RouteGuard.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Transfers\\TransfersDetail.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\closedInspection.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\Inspection.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\openInspection.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\TopBar.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\LandingPage.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\CustomersApi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\FormsPage\\UploadFormApi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\WorldMapApi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Login\\useAuth.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\inspection_utils.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\enumerated_inspection.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\inspectionapi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\InspectionUI.js",["401"],[],"import React, { useState } from 'react';\r\nimport { toLowerTurkish, toUpperTurkish } from './turkishHelpers';\r\nimport { columns, control_type, control_method } from './enumerated_inspection';\r\nimport {\r\n  handleControlResponsibleChange,\r\n  handleDateChange,\r\n  handleControlMethod,\r\n  handleControlTypeChange,\r\n  handleDescriptionChange,\r\n  handleUpdateClick,\r\n  handleApproveClick,\r\n  handleRejectClick,\r\n  handleDeleteClick,\r\n  getStateStyle,\r\n  getStatusStyle\r\n} from './inspection_utils';\r\nimport MultipleFilter from '../../functions/MultipleFilter';\r\nimport ButtonPopup from './ButtonPopup';\r\n\r\n\r\n\r\nconst InspectionUI = ({\r\n  inspectionPlans,\r\n  setInspectionPlans,\r\n  users,\r\n  currentUserRole,\r\n  currentUserId,\r\n  updateTrigger,\r\n  setUpdateTrigger,\r\n  descriptionControls,\r\n  setDescriptionControls,\r\n}) => {\r\n  const [filters, setFilters] = useState([]);\r\n\r\n  const addNewFilter = () => {\r\n    setFilters(prevFilters => [\r\n      ...prevFilters,\r\n      { id: Math.random().toString() },\r\n    ]);\r\n  };\r\n\r\n  const handleFilterChange = (filterId, updatedFilter) => {\r\n    setFilters(prevFilters =>\r\n      prevFilters.map(filter =>\r\n        filter.id === filterId ? { id: filterId, ...updatedFilter } : filter\r\n      )\r\n    );\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    return inspectionPlans.filter(plan => {\r\n      for (let i = 0; i < filters.length; i++) {\r\n        const { column, query } = filters[i];\r\n  \r\n        if (!column || !query) continue;\r\n  \r\n        const columnValue = plan[column];\r\n        if (!columnValue) return false;\r\n  \r\n        if (!toLowerTurkish(columnValue.toString()).includes(toLowerTurkish(query)))\r\n          return false;\r\n      }\r\n  \r\n      return true;\r\n    });\r\n  };\r\n\r\n  const filteredPlans = applyFilters();\r\n\r\n  return (\r\n    <div className=\"inspection-container\">\r\n      <h1 className=\"inspection-title\">Inspection Plan</h1>\r\n\r\n      {filters.map(filter => (\r\n        <MultipleFilter\r\n          key={filter.id}\r\n          id={filter.id}\r\n          columns={columns}\r\n          onFilterChange={handleFilterChange}\r\n        />\r\n      ))}\r\n      <button onClick={addNewFilter}>Add filter</button>\r\n\r\n      <div className=\"inspection-table-container\">\r\n        <table className=\"inspection-table\">\r\n          <thead>\r\n            <tr>\r\n              {columns.map(column => (\r\n                <th key={column}>{column}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredPlans.map(plan => (\r\n              <tr key={plan.id}>\r\n                <td>{plan.vendor_name.substring(0, 12)}</td>\r\n                <td>{plan.customer_name.substring(0, 12)}</td>\r\n                <td>{plan.product_name}</td>\r\n                <td>{plan.order_number}</td>\r\n                <td>{plan.project_number}</td>\r\n                <td>{plan.quantity}</td>\r\n                <td>\r\n                  <select\r\n                    value={plan.control_method || ''}\r\n                    onChange={event =>\r\n                      handleControlMethod(\r\n                        event,\r\n                        plan.id,\r\n                        setInspectionPlans\r\n                      )\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select Control Method</option>\r\n                    {control_method.map((method, index) => (\r\n                      <option key={index} value={method}>\r\n                        {method}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={plan.control_type || ''}\r\n                    onChange={event =>\r\n                      handleControlTypeChange(\r\n                        event,\r\n                        plan.id,\r\n                        setInspectionPlans\r\n                      )\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select Control Type</option>\r\n                    {control_type.map((type, index) => (\r\n                      <option key={index} value={type}>\r\n                        {type}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={plan.control_responsible || 'unselected'}\r\n                    onChange={event =>\r\n                      handleControlResponsibleChange(\r\n                        event,\r\n                        plan.id,\r\n                        setInspectionPlans\r\n                      )\r\n                    }\r\n                  >\r\n                    <option value=\"unselected\">\r\n                      Select Control Responsible\r\n                    </option>\r\n                    {users.map((user, index) => (\r\n                      <option key={index} value={user.id}>\r\n                        {user.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={\r\n                      plan.control_date\r\n                        ? new Date(plan.control_date)\r\n                            .toISOString()\r\n                            .split('T')[0]\r\n                        : ''\r\n                    }\r\n                    onChange={date =>\r\n                      handleDateChange(date, plan.id, setInspectionPlans)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>{plan.note}</td>\r\n                <td>\r\n                  <textarea\r\n                    placeholder=\"Description\"\r\n                    style={{ resize: 'vertical' }}\r\n                    value={descriptionControls[plan.id] || ''}\r\n                    onChange={e =>\r\n                      handleDescriptionChange(\r\n                        e,\r\n                        plan.id,\r\n                        descriptionControls,\r\n                        setDescriptionControls\r\n                      )\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  {plan.delivery_date\r\n                    ? new Date(plan.delivery_date).toLocaleDateString('tr-TR')\r\n                    : ''}\r\n                </td>\r\n                <td>\r\n                  <div className=\"flex items-center justify-center h-full\">\r\n                    <span className={getStatusStyle(plan.status)}>\r\n                      {plan.status}\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"flex items-center justify-center h-full\">\r\n                    <span className={getStateStyle(plan.state)}>\r\n                      {plan.state}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className={\"w-20 bg-blue-500 hover:bg-green-700 text-white font-bold py-1 px-2 rounded text-sm\"}\r\n                    onClick={() => {\r\n                      handleUpdateClick(\r\n                        plan.id,\r\n                        inspectionPlans,\r\n                        descriptionControls[plan.id],\r\n                        currentUserId,\r\n                        setUpdateTrigger\r\n                      );\r\n                      setUpdateTrigger(prev => !prev);\r\n                    }}\r\n                    // butonun görünürlüğünü kontrol et\r\n                    style={{visibility: plan.state === 'Closed' ? 'hidden' : 'visible'}}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                    {currentUserRole === 'Quality Manager' && plan.state !== 'Closed' &&(\r\n                        <>\r\n                        <ButtonPopup\r\n                          triggerText=\"Approve\"\r\n                          triggerButtonStyle=\"w-20 bg-green-500 hover:bg-green-700 text-white font-bold py-1 px-2 rounded text-sm\"\r\n                          title=\"Choose one of the actions below.\"\r\n                          buttons={[\r\n                            {\r\n                              label: \"Close Inspection\",\r\n                              action: () => handleApproveClick(plan.id, inspectionPlans, descriptionControls[plan.id], currentUserId, setUpdateTrigger)(false)()\r\n                            },\r\n                            {\r\n                              label: \"Continue Inspection\",\r\n                              action: () => handleApproveClick(plan.id, inspectionPlans, descriptionControls[plan.id], currentUserId, setUpdateTrigger)(true)()\r\n                            },\r\n                          ]}\r\n                        />\r\n                        <ButtonPopup\r\n                          triggerText=\"Reject\"\r\n                          triggerButtonStyle=\"w-20 bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded text-sm\"\r\n                          title=\"Choose one of the actions below.\"\r\n                          buttons={[\r\n                            {\r\n                              label: \"Close Inspection\",\r\n                              action: handleRejectClick(plan.id, inspectionPlans, descriptionControls[plan.id], currentUserId, setUpdateTrigger)(false)\r\n                            },\r\n                            {\r\n                              label: \"Continue Inspection\",\r\n                              action: handleRejectClick(plan.id, inspectionPlans, descriptionControls[plan.id], currentUserId, setUpdateTrigger)(true)\r\n                            },\r\n                          ]}\r\n                        />\r\n                        <ButtonPopup\r\n                          triggerText=\"Delete\"\r\n                          triggerButtonStyle=\"w-20 bg-red-600 hover:bg-red-800 text-white font-bold py-1 px-2 rounded text-sm\"\r\n                          title=\"Are you sure you want to delete?\"\r\n                          buttons={[\r\n                            {\r\n                              label: \"Delete\",\r\n                              action: () => handleDeleteClick(plan.id, setInspectionPlans)\r\n                            }\r\n                          ]}\r\n                        />\r\n                      </>\r\n                    )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InspectionUI;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PageNotFound\\ErrorPage.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\formapi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\renderSegmentContent.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\rowDetail.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\pqc_utils.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\MenuItems.js",["402"],[],"import { \r\n  ChartPieIcon, \r\n  CursorArrowRaysIcon, \r\n  FingerPrintIcon, \r\n  ArrowPathIcon, \r\n  SquaresPlusIcon,\r\n  ArrowLeftOnRectangleIcon,\r\n  ArrowRightOnRectangleIcon,\r\n} from '@heroicons/react/24/outline'\r\nimport { logout, isLoggedIn } from '../Login/useAuth';\r\n\r\nconst menuItems = [\r\n  { \r\n    name: 'Logo', \r\n    href: '/home',\r\n    imgSrc: './yenaengineering.jpeg',\r\n    imgAlt: 'Logo',\r\n    imgClass: 'h-10 w-15 mr-4',\r\n    isLogo: true\r\n  },\r\n  { \r\n    name: 'Quality', \r\n    isAuthRequired: true,\r\n    subItems: [\r\n      { name: 'Products', href: '/products', icon: ChartPieIcon },\r\n      { name: 'PQC', href: '/pqc', icon: CursorArrowRaysIcon },\r\n      { \r\n        name: 'WorkOrders',\r\n        subItems: [\r\n          { name: 'Açık İşler', href: '/workorders', icon: ChartPieIcon },\r\n          { name: 'Kapalı İşler', href: '/closed-workorders', icon: CursorArrowRaysIcon },\r\n        ],\r\n        icon: FingerPrintIcon,\r\n      },\r\n      { \r\n        name: 'Inspection Plan', \r\n        subItems: [\r\n          { name: 'All Inspection', href: '/inspection-plan', icon: ChartPieIcon },\r\n          { name: 'Draft Inspection', href: '/draft-inspection', icon: CursorArrowRaysIcon },\r\n          { name: 'Waiting Inspection', href: '/waiting-inspection', icon: CursorArrowRaysIcon },\r\n          { name: 'Close Inspection', href: '/closed-inspection', icon: FingerPrintIcon },\r\n        ],\r\n        icon: ArrowPathIcon\r\n      },\r\n    ] \r\n  },\r\n  { \r\n    name: 'Logistics', \r\n    isAuthRequired: true,\r\n    subItems: [\r\n      { name: 'Transfers', href: '/transfers', icon: SquaresPlusIcon },\r\n    ] \r\n  },\r\n  { \r\n    name: 'Parameters', \r\n    isAuthRequired: true,\r\n    subItems: [\r\n      { name: 'Vendors', href: '/vendors', icon: ChartPieIcon },\r\n      { name: 'Customers', href: '/customers', icon: CursorArrowRaysIcon },\r\n      { name: 'Users', href: '/users', icon: FingerPrintIcon },\r\n    ] \r\n  },\r\n  {\r\n    name: 'Auth',\r\n    type: 'auth',\r\n    login: {\r\n      name: 'Login',\r\n      href: '/login',\r\n      icon: ArrowRightOnRectangleIcon\r\n    },\r\n    logout: {\r\n      name: 'Logout',\r\n      action: logout,\r\n      icon: ArrowLeftOnRectangleIcon\r\n    }\r\n  }\r\n]\r\n\r\nexport default menuItems;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\SubMenuItem.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Transfers\\TransfersApi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Userapi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\useVendors.js",[],[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\ProductSegment.js",["403","404","405","406"],[],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes, faImage } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { getFormByVendorIdAndProductId, getQualityControlEntriesByFormId, updateQualityControlEntry, getImagesByQualityControlId } from '././worksapi';\r\nimport ImagePopup from \"../shared/Popup/ImagePopup\";\r\nimport './ProductSegment.css';\r\n\r\nconst ProductSegment = ({ product, vendorId, work_id }) => {\r\n  const [formInfo, setFormInfo] = useState(null);\r\n  const [formDetail, setFormDetail] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(null);\r\n  const [measuredValues, setMeasuredValues] = useState({});\r\n  const [imagePopup, setImagePopup] = useState(false);\r\n  const [imagePopupUrl, setImagePopupUrl] = useState(\"\");\r\n  const [imageList, setImageList] = useState([]);\r\n\r\n  const openImagePopup = async (substepId) => {\r\n    const images = await fetchImages(substepId);\r\n    if (images && images.data.length > 0) {\r\n      const imageList = images.data.map(imgData => ({\r\n        url: imgData.image_url,\r\n        id: imgData.id,\r\n        status: imgData.status\r\n      }));\r\n\r\n      setImageList(imageList);\r\n      setImagePopup(true);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const fetchImages = async (substepId) => {\r\n    try {\r\n      const images = await getImagesByQualityControlId(substepId);\r\n      // console.log(\"Fetched Images:\", images); // Eklendi\r\n      return images;\r\n    } catch (error) {\r\n      // console.error(`Error fetching images by substep ID: ${error.message}`);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleStepClick = (stepOrder) => {\r\n    setActiveStep(stepOrder);\r\n  };\r\n\r\n  const fetchForm = useCallback(async () => {\r\n    const form = await getFormByVendorIdAndProductId(vendorId, product.odooid);\r\n    setFormInfo(form);\r\n\r\n    if (form) {\r\n      const formDetails = await getQualityControlEntriesByFormId(form.form.id, work_id);\r\n      setFormDetail(formDetails);\r\n    }\r\n  }, [vendorId, product.odooid]);\r\n\r\n  useEffect(() => {\r\n    fetchForm();\r\n  }, [fetchForm]);\r\n\r\n  const handleMeasuredValueChange = (substepId, field, value) => {\r\n    setMeasuredValues({\r\n      ...measuredValues,\r\n      [substepId]: {\r\n        ...measuredValues[substepId],\r\n        [field]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    const entriesToUpdate = Object.entries(measuredValues)\r\n      .filter(([id, values]) => Object.values(values).some((value) => value !== null && value !== ''))\r\n      .map(([id, values]) => ({\r\n        id,\r\n        ...values,\r\n      }));\r\n\r\n    try {\r\n      await updateQualityControlEntry(entriesToUpdate);\r\n      fetchForm();\r\n    } catch (error) {\r\n      // console.error('Ölçülen değerler güncellenirken hata:', error);\r\n    }\r\n  };\r\n\r\nconst checkTolerance = (substep, measuredValueKey) => {\r\n  const measuredValue = measuredValues[substep.id]?.[measuredValueKey] || substep[measuredValueKey];\r\n  if (!measuredValue) {\r\n    return true;\r\n  }\r\n\r\n  const lowerTolerance = substep.lower_tolerance;\r\n  const upperTolerance = substep.upper_tolerance;\r\n  return measuredValue >= lowerTolerance && measuredValue <= upperTolerance;\r\n};\r\n\r\n  const checkAllTolerances = (substep) => {\r\n    return (\r\n      checkTolerance(substep, 'measured_value_1') &&\r\n      checkTolerance(substep, 'measured_value_2') &&\r\n      checkTolerance(substep, 'measured_value_3')\r\n    );\r\n  };\r\n\r\n  const renderToleranceIcon = (substep, measuredValueKey) => {\r\n    if (checkTolerance(substep, measuredValueKey)) {\r\n      return <i className=\"fas fa-check\"></i>;\r\n    } else {\r\n      return <i className=\"fas fa-times\"></i>;\r\n    }\r\n  };\r\n\r\n  const renderCellClass = (substep, measuredValueKey) => {\r\n    if (!checkTolerance(substep, measuredValueKey)) {\r\n      return 'cell-error';\r\n    }\r\n    return '';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"product-segment\">\r\n      {imagePopup && <ImagePopup onClose={() => setImagePopup(false)} imageList={imageList} />}\r\n      <p>{product.description}</p>\r\n      <div>\r\n        <div className=\"segment-buttons\">\r\n          {formDetail &&\r\n            formDetail.steps.map((step) => (\r\n              <button \r\n                className={`product-segment-btn ${activeStep === step.order ? 'active' : ''}`}\r\n                key={step.order} \r\n                onClick={() => handleStepClick(step.order)}\r\n              >\r\n                {step.name}\r\n              </button>\r\n            ))}\r\n        </div>\r\n        {formDetail &&\r\n          formDetail.steps.map(\r\n            (step) =>\r\n              activeStep === step.order && (\r\n                <div key={step.order} className=\"segment-content\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"column-5\">Image</th>\r\n                        <th className=\"column-9\">Number</th>\r\n                        <th className=\"column-9\">Tools</th>\r\n                        <th className=\"column-9\">Description</th>\r\n                        <th className=\"column-9\">Actual Dimension</th>\r\n                        <th className=\"column-9\">Lower Tolerance</th>\r\n                        <th className=\"column-9\">Upper Tolerance</th>\r\n                        <th className=\"column-9\">Sample Quantity</th>\r\n                        <th className=\"column-9\">Measured Value 1</th>\r\n                        <th className=\"column-9\">Measured Value 2</th>\r\n                        <th className=\"column-9\">Measured Value 3</th>\r\n                        <th className=\"column-25\">OK</th>\r\n                        <th className=\"column-25\">NOK</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      \r\n                      {step.substeps.map((substep) => (\r\n                        <tr key={substep.id}>\r\n                          <td>\r\n                            <button onClick={() => openImagePopup(substep.id)}>\r\n                              <FontAwesomeIcon icon={faImage} />\r\n                            </button>\r\n                          </td>\r\n                          <td>{substep.technical_drawing_numbering}</td>\r\n                          <td>{substep.tools}</td>\r\n                          <td>{substep.description}</td>\r\n                          <td>{substep.actual_dimension}</td>\r\n                          <td>{substep.lower_tolerance}</td>\r\n                          <td>{substep.upper_tolerance}</td>\r\n                          <td>{substep.sample_quantity}</td>\r\n                          <td className={renderCellClass(substep, 'measured_value_1')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_1 || substep.measured_value_1}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_1', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_1')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_2')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_2 || substep.measured_value_2}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_2', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_2')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_3')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_3 || substep.measured_value_3}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_3', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_3')}\r\n                          </td>\r\n                          <td>\r\n                            {checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faCheck} style={{ color: \"green\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                          <td>\r\n                            {!checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faTimes} style={{ color: \"red\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <button onClick={handleSaveClick}>Save</button>\r\n                </div>\r\n              ),\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\n  export default ProductSegment;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\worksapi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\TopBarMenu\\DropDownMenu.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\functions\\Filter.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\functions\\MultipleFilter.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\EngineeringSolutionSection.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\Chart\\Chart.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\Cards.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\NewsLetter.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\Hero.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderFinalPartMeasurement.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\LandingPage\\components\\Footer.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderPaintReport.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderQoatingReport.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderSubPartDimensiol.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PQC\\Segments\\renderProductPackingStandart.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopup.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopupApi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\draftInspection.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\waitingInspection.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\ButtonPopup.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\InspectionPlan\\turkishHelpers.js",[],[],{"ruleId":"407","severity":1,"message":"408","line":6,"column":27,"nodeType":"409","messageId":"410","endLine":6,"endColumn":33},{"ruleId":"407","severity":1,"message":"411","line":6,"column":42,"nodeType":"409","messageId":"410","endLine":6,"endColumn":46},{"ruleId":"407","severity":1,"message":"412","line":2,"column":8,"nodeType":"409","messageId":"410","endLine":2,"endColumn":13},{"ruleId":"407","severity":1,"message":"412","line":2,"column":8,"nodeType":"409","messageId":"410","endLine":2,"endColumn":13},{"ruleId":"407","severity":1,"message":"413","line":7,"column":30,"nodeType":"409","messageId":"410","endLine":7,"endColumn":45},{"ruleId":"407","severity":1,"message":"414","line":7,"column":47,"nodeType":"409","messageId":"410","endLine":7,"endColumn":61},{"ruleId":"407","severity":1,"message":"415","line":7,"column":10,"nodeType":"409","messageId":"410","endLine":7,"endColumn":26},{"ruleId":"407","severity":1,"message":"416","line":7,"column":28,"nodeType":"409","messageId":"410","endLine":7,"endColumn":44},{"ruleId":"417","severity":1,"message":"418","line":36,"column":9,"nodeType":"419","endLine":42,"endColumn":11},{"ruleId":"417","severity":1,"message":"418","line":46,"column":11,"nodeType":"419","endLine":50,"endColumn":13},{"ruleId":"420","severity":1,"message":"421","line":30,"column":6,"nodeType":"422","endLine":30,"endColumn":8,"suggestions":"423"},{"ruleId":"407","severity":1,"message":"424","line":33,"column":9,"nodeType":"409","messageId":"410","endLine":33,"endColumn":27},{"ruleId":"407","severity":1,"message":"425","line":3,"column":64,"nodeType":"409","messageId":"410","endLine":3,"endColumn":86},{"ruleId":"407","severity":1,"message":"426","line":11,"column":10,"nodeType":"409","messageId":"410","endLine":11,"endColumn":18},{"ruleId":"407","severity":1,"message":"427","line":14,"column":10,"nodeType":"409","messageId":"410","endLine":14,"endColumn":17},{"ruleId":"407","severity":1,"message":"428","line":14,"column":19,"nodeType":"409","messageId":"410","endLine":14,"endColumn":29},{"ruleId":"407","severity":1,"message":"429","line":118,"column":13,"nodeType":"409","messageId":"410","endLine":118,"endColumn":28},{"ruleId":"407","severity":1,"message":"430","line":8,"column":3,"nodeType":"409","messageId":"410","endLine":8,"endColumn":23},{"ruleId":"407","severity":1,"message":"431","line":15,"column":9,"nodeType":"409","messageId":"410","endLine":15,"endColumn":17},{"ruleId":"407","severity":1,"message":"432","line":21,"column":9,"nodeType":"409","messageId":"410","endLine":21,"endColumn":16},{"ruleId":"407","severity":1,"message":"426","line":12,"column":10,"nodeType":"409","messageId":"410","endLine":12,"endColumn":18},{"ruleId":"407","severity":1,"message":"433","line":105,"column":13,"nodeType":"409","messageId":"410","endLine":105,"endColumn":24},{"ruleId":"407","severity":1,"message":"434","line":47,"column":9,"nodeType":"409","messageId":"410","endLine":47,"endColumn":19},{"ruleId":"407","severity":1,"message":"433","line":62,"column":13,"nodeType":"409","messageId":"410","endLine":62,"endColumn":24},{"ruleId":"407","severity":1,"message":"435","line":6,"column":5,"nodeType":"409","messageId":"410","endLine":6,"endColumn":14},{"ruleId":"407","severity":1,"message":"436","line":41,"column":13,"nodeType":"409","messageId":"410","endLine":41,"endColumn":20},{"ruleId":"407","severity":1,"message":"437","line":2,"column":26,"nodeType":"409","messageId":"410","endLine":2,"endColumn":40},{"ruleId":"407","severity":1,"message":"438","line":10,"column":18,"nodeType":"409","messageId":"410","endLine":10,"endColumn":28},{"ruleId":"407","severity":1,"message":"439","line":9,"column":10,"nodeType":"409","messageId":"410","endLine":9,"endColumn":18},{"ruleId":"407","severity":1,"message":"440","line":14,"column":10,"nodeType":"409","messageId":"410","endLine":14,"endColumn":23},{"ruleId":"407","severity":1,"message":"441","line":14,"column":25,"nodeType":"409","messageId":"410","endLine":14,"endColumn":41},{"ruleId":"420","severity":1,"message":"442","line":56,"column":6,"nodeType":"422","endLine":56,"endColumn":32,"suggestions":"443"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'axios' is defined but never used.","'getAllLocations' is defined but never used.","'createLocation' is defined but never used.","'initialFormState' is defined but never used.","'handleFormChange' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCustomers' and 'fetchProducts'. Either include them or remove the dependency array.","ArrayExpression",["444"],"'getFileNameFromUrl' is assigned a value but never used.","'getQRQuestionsByWorkId' is defined but never used.","'products' is assigned a value but never used.","'product' is assigned a value but never used.","'setProduct' is assigned a value but never used.","'createdWorkStep' is assigned a value but never used.","'updateWorkStepStatus' is defined but never used.","'navigate' is assigned a value but never used.","'step_id' is assigned a value but never used.","'newWorkStep' is assigned a value but never used.","'handleSave' is assigned a value but never used.","'foremanId' is assigned a value but never used.","'newUser' is assigned a value but never used.","'toUpperTurkish' is defined but never used.","'isLoggedIn' is defined but never used.","'formInfo' is assigned a value but never used.","'imagePopupUrl' is assigned a value but never used.","'setImagePopupUrl' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'work_id'. Either include it or remove the dependency array.",["445"],{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},"Update the dependencies array to be: [fetchCustomers, fetchProducts]",{"range":"450","text":"451"},"Update the dependencies array to be: [vendorId, product.odooid, work_id]",{"range":"452","text":"453"},[873,875],"[fetchCustomers, fetchProducts]",[2031,2057],"[vendorId, product.odooid, work_id]"]