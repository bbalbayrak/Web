[{"C:\\Users\\mtrce\\portal-test\\client\\src\\index.js":"1","C:\\Users\\mtrce\\portal-test\\client\\src\\reportWebVitals.js":"2","C:\\Users\\mtrce\\portal-test\\client\\src\\App.js":"3","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Vendors\\Vendors.js":"4","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Customers\\CreateCustomer.js":"5","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Vendors\\CreateVendor.js":"6","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Login\\Login.js":"7","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Customers\\Customers.js":"8","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Home\\Home.js":"9","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Gallery\\gallery.js":"10","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\editForm.js":"11","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\createForm.js":"12","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\FormsPage\\UploadForm.js":"13","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\FormsPage.js":"14","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\WorkOrders.js":"15","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\CreateWorkOrder.js":"16","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\Certificate.js":"17","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\QualityControl.js":"18","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\QRCertificate.js":"19","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\NewWork.js":"20","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PageNotFound\\PageNotFound.js":"21","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\RouteGuard\\RouteGuard.js":"22","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Transfers\\Transfers.js":"23","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Users\\CreateUser.js":"24","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Transfers\\TransfersDetail.js":"25","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Users\\Users.js":"26","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\Inspection.js":"27","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\openInspection.js":"28","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\closedInspection.js":"29","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\TopBar.js":"30","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Customers\\CustomersApi.js":"31","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Vendors\\useVendors.js":"32","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Home\\WorldMapApi.js":"33","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Login\\useAuth.js":"34","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\FormsPage\\UploadFormApi.js":"35","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\pqc_utils.js":"36","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PageNotFound\\ErrorPage.js":"37","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\formapi.js":"38","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\renderSegmentContent.js":"39","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\rowDetail.js":"40","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\worksapi.js":"41","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Transfers\\TransfersApi.js":"42","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Users\\Userapi.js":"43","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\ProductSegment.js":"44","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Home\\Chart\\Chart.js":"45","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\inspectionapi.js":"46","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\MenuItems.js":"47","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\SubMenuItem.js":"48","C:\\Users\\mtrce\\portal-test\\client\\src\\functions\\Filter.js":"49","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\DropDownMenu.js":"50","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderSubPartDimensiol.js":"51","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderFinalPartMeasurement.js":"52","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderQoatingReport.js":"53","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderProductPackingStandart.js":"54","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderPaintReport.js":"55","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopup.js":"56","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopupApi.js":"57","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\LandingPage.js":"58","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\enumerated_inspection.js":"59","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\inspection_utils.js":"60","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\Cards.js":"61","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\Hero.js":"62","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\NewsLetter.js":"63","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\EngineeringSolutionSection.js":"64","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\Footer.js":"65"},{"size":337,"mtime":1688406147482,"results":"66","hashOfConfig":"67"},{"size":375,"mtime":1688406147482,"results":"68","hashOfConfig":"67"},{"size":5239,"mtime":1688406535877,"results":"69","hashOfConfig":"67"},{"size":834,"mtime":1688406147470,"results":"70","hashOfConfig":"67"},{"size":1470,"mtime":1688406147429,"results":"71","hashOfConfig":"67"},{"size":1435,"mtime":1688406147470,"results":"72","hashOfConfig":"67"},{"size":2882,"mtime":1688406147434,"results":"73","hashOfConfig":"67"},{"size":1399,"mtime":1688406147430,"results":"74","hashOfConfig":"67"},{"size":5643,"mtime":1688406147432,"results":"75","hashOfConfig":"67"},{"size":1741,"mtime":1688406147431,"results":"76","hashOfConfig":"67"},{"size":3146,"mtime":1688474887376,"results":"77","hashOfConfig":"67"},{"size":3350,"mtime":1688406147436,"results":"78","hashOfConfig":"67"},{"size":5524,"mtime":1688406147430,"results":"79","hashOfConfig":"67"},{"size":1691,"mtime":1688406147436,"results":"80","hashOfConfig":"67"},{"size":6910,"mtime":1688406147482,"results":"81","hashOfConfig":"67"},{"size":9113,"mtime":1688406147482,"results":"82","hashOfConfig":"67"},{"size":3902,"mtime":1688406147482,"results":"83","hashOfConfig":"67"},{"size":3590,"mtime":1688406147482,"results":"84","hashOfConfig":"67"},{"size":6101,"mtime":1688406147482,"results":"85","hashOfConfig":"67"},{"size":4488,"mtime":1688406147482,"results":"86","hashOfConfig":"67"},{"size":311,"mtime":1688406147466,"results":"87","hashOfConfig":"67"},{"size":832,"mtime":1688406147466,"results":"88","hashOfConfig":"67"},{"size":878,"mtime":1688406147470,"results":"89","hashOfConfig":"67"},{"size":4713,"mtime":1688406147470,"results":"90","hashOfConfig":"67"},{"size":2484,"mtime":1688406147470,"results":"91","hashOfConfig":"67"},{"size":1357,"mtime":1688406147470,"results":"92","hashOfConfig":"67"},{"size":5123,"mtime":1688406147433,"results":"93","hashOfConfig":"67"},{"size":253,"mtime":1688406147433,"results":"94","hashOfConfig":"67"},{"size":259,"mtime":1688406147433,"results":"95","hashOfConfig":"67"},{"size":1101,"mtime":1688406147470,"results":"96","hashOfConfig":"67"},{"size":596,"mtime":1688406147430,"results":"97","hashOfConfig":"67"},{"size":757,"mtime":1688406147470,"results":"98","hashOfConfig":"67"},{"size":757,"mtime":1688406147432,"results":"99","hashOfConfig":"67"},{"size":1043,"mtime":1688406147434,"results":"100","hashOfConfig":"67"},{"size":1808,"mtime":1688406147430,"results":"101","hashOfConfig":"67"},{"size":2096,"mtime":1688406147436,"results":"102","hashOfConfig":"67"},{"size":343,"mtime":1688406147436,"results":"103","hashOfConfig":"67"},{"size":3211,"mtime":1688406147436,"results":"104","hashOfConfig":"67"},{"size":1434,"mtime":1688406147436,"results":"105","hashOfConfig":"67"},{"size":1991,"mtime":1688472724420,"results":"106","hashOfConfig":"67"},{"size":7504,"mtime":1688406147482,"results":"107","hashOfConfig":"67"},{"size":939,"mtime":1688406147470,"results":"108","hashOfConfig":"67"},{"size":977,"mtime":1688406147470,"results":"109","hashOfConfig":"67"},{"size":9302,"mtime":1688406147482,"results":"110","hashOfConfig":"67"},{"size":4220,"mtime":1688406147432,"results":"111","hashOfConfig":"67"},{"size":1453,"mtime":1688406147433,"results":"112","hashOfConfig":"67"},{"size":1645,"mtime":1688406147470,"results":"113","hashOfConfig":"67"},{"size":2241,"mtime":1688406147470,"results":"114","hashOfConfig":"67"},{"size":839,"mtime":1688406147482,"results":"115","hashOfConfig":"67"},{"size":1803,"mtime":1688406147466,"results":"116","hashOfConfig":"67"},{"size":533,"mtime":1688406147436,"results":"117","hashOfConfig":"67"},{"size":4734,"mtime":1688471380432,"results":"118","hashOfConfig":"67"},{"size":530,"mtime":1688406147436,"results":"119","hashOfConfig":"67"},{"size":539,"mtime":1688406147436,"results":"120","hashOfConfig":"67"},{"size":528,"mtime":1688406147436,"results":"121","hashOfConfig":"67"},{"size":2579,"mtime":1688406147482,"results":"122","hashOfConfig":"67"},{"size":627,"mtime":1688406147482,"results":"123","hashOfConfig":"67"},{"size":497,"mtime":1688406515069,"results":"124","hashOfConfig":"67"},{"size":350,"mtime":1688406147433,"results":"125","hashOfConfig":"67"},{"size":1207,"mtime":1688406147433,"results":"126","hashOfConfig":"67"},{"size":2720,"mtime":1688396843727,"results":"127","hashOfConfig":"67"},{"size":1015,"mtime":1688396964764,"results":"128","hashOfConfig":"67"},{"size":1241,"mtime":1688390777564,"results":"129","hashOfConfig":"67"},{"size":1036,"mtime":1688397473913,"results":"130","hashOfConfig":"67"},{"size":1211,"mtime":1688394692570,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rhn9qv",{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mtrce\\portal-test\\client\\src\\index.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\App.js",["343","344"],[],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Vendors from \"./components/Vendors/Vendors\";\r\nimport Customers from \"./components/Customers/Customers\";\r\nimport { BrowserRouter as Router, Route, Link, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport FormsPage from \"./components/PQC/FormsPage\";\r\nimport FormEdit from \"./components/PQC/editForm\";\r\nimport UploadForm from './components/FormsPage/UploadForm';\r\nimport Gallery from \"./components/Gallery/gallery\";\r\nimport WorkOrders from \"./components/Works/WorkOrders\";\r\nimport CreateWorkOrder from \"./components/Works/CreateWorkOrder\";\r\nimport Certificate from \"./components/Works/Certificate\";\r\nimport QRCertificate from \"./components/Works/QRCertificate\";\r\nimport QualityControl from \"./components/Works/QualityControl\";\r\nimport RouteGuard from './components/RouteGuard/RouteGuard';\r\nimport Users from './components/Users/Users';\r\nimport CreateUser from \"./components/Users/CreateUser\";\r\nimport NewWork from \"./components/Works/NewWork\";\r\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\r\nimport CreateVendor from \"./components/Vendors/CreateVendor\";\r\nimport CreateCustomer from \"./components/Customers/CreateCustomer\";\r\nimport FormCreate from \"./components/PQC/createForm\";\r\nimport Transfers from \"./components/Transfers/Transfers\";\r\nimport TransfersDetail from \"./components/Transfers/TransfersDetail\";\r\nimport Inspection from \"./components/InspectionPlan/Inspection\";\r\nimport OpenInspection from \"./components/InspectionPlan/openInspection\"\r\nimport ClosedInspection from \"./components/InspectionPlan/closedInspection\"\r\nimport { TopBar } from \"./components/TopBarMenu/TopBar\";\r\nimport LandingPage from \"./components/LandingPage/LandingPage\";\r\n\r\nfunction App() {\r\n  const [showMenu, setShowMenu] = useState(true);\r\n \r\n  return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n        <TopBar showMenu={showMenu} />\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Login setShowMenu={setShowMenu} />}/>\r\n            <Route path=\"/customers\" element={<RouteGuard setShowMenu={setShowMenu}><Customers /></RouteGuard>}/>\r\n            <Route path=\"/login\" element={<Login setShowMenu={setShowMenu} />}/>\r\n            <Route path=\"/home\" element={<RouteGuard setShowMenu={setShowMenu}><Home /></RouteGuard>}/>\r\n            <Route path=\"/vendors\" element={<RouteGuard setShowMenu={setShowMenu}><Vendors /></RouteGuard>}/>\r\n            <Route path=\"/products\" element={<RouteGuard setShowMenu={setShowMenu}><UploadForm /></RouteGuard>}/>\r\n            <Route path=\"/pqc\" element={<RouteGuard setShowMenu={setShowMenu}><FormsPage /></RouteGuard>}/>\r\n            <Route path=\"/pqc/:id\" element={<RouteGuard setShowMenu={setShowMenu}><FormEdit /></RouteGuard>}/>\r\n            <Route path='/gallery' element={<RouteGuard setShowMenu={setShowMenu}><Gallery /></RouteGuard>}/>\r\n            <Route path='/workorders' element={<RouteGuard setShowMenu={setShowMenu}><WorkOrders /></RouteGuard>}/>\r\n            <Route path='/newworks' element={<RouteGuard setShowMenu={setShowMenu}><NewWork /></RouteGuard>}/>\r\n            <Route path='/create-work-order' element={<RouteGuard setShowMenu={setShowMenu}><CreateWorkOrder /></RouteGuard>}/>\r\n            <Route path='/certificate' element={<RouteGuard setShowMenu={setShowMenu}><Certificate /></RouteGuard>}/>\r\n            <Route path='/qr-certificate' element={<RouteGuard setShowMenu={setShowMenu}><QRCertificate /></RouteGuard>}/>\r\n            <Route path='/quality-control' element={<RouteGuard setShowMenu={setShowMenu}><QualityControl /></RouteGuard>}/>\r\n            <Route path=\"/users\" element={<RouteGuard setShowMenu={setShowMenu}><Users /></RouteGuard>}/>\r\n            <Route path=\"/create-user\" element={<RouteGuard setShowMenu={setShowMenu}><CreateUser /></RouteGuard>}/>\r\n            <Route path=\"/*\" element={<RouteGuard setShowMenu={setShowMenu}><PageNotFound /></RouteGuard>}/>\r\n            <Route path=\"/create-vendor\" element={<RouteGuard setShowMenu={setShowMenu}><CreateVendor /></RouteGuard>}/>\r\n            <Route path=\"/create-customer\" element={<RouteGuard setShowMenu={setShowMenu}><CreateCustomer /></RouteGuard>}/>\r\n            <Route path=\"/create-form\" element={<RouteGuard setShowMenu={setShowMenu}><FormCreate /></RouteGuard>}/>\r\n            <Route path=\"/transfers\" element={<RouteGuard setShowMenu={setShowMenu}><Transfers /></RouteGuard>}/>\r\n            <Route path=\"/transfers/:name\" element={<RouteGuard setShowMenu={setShowMenu}><TransfersDetail /></RouteGuard>}/>\r\n            <Route path=\"/inspection-plan\" element={<RouteGuard setShowMenu={setShowMenu}><Inspection /></RouteGuard>}/>\r\n            <Route path=\"/open-inspection\" element={<RouteGuard setShowMenu={setShowMenu}><OpenInspection /></RouteGuard>}/>\r\n            <Route path=\"/closed-inspection\" element={<RouteGuard setShowMenu={setShowMenu}><ClosedInspection /></RouteGuard>}/>\r\n            <Route path=\"/landing-page\" element={<RouteGuard setShowMenu={setShowMenu}><LandingPage /></RouteGuard>}/>\r\n\r\n          </Routes>\r\n        </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Vendors\\Vendors.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Customers\\CreateCustomer.js",["345"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { createCustomer } from './CustomersApi';\r\nimport \"./CreateCustomer.css\";\r\n\r\nconst CreateCustomer = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [odooid, setOdooid] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      await createCustomer(name, odooid);\r\n      setName(\"\");\r\n      setOdooid(\"\");\r\n    } catch (error) {\r\n      // console.error(\"There was a bloody error while adding the customer:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-customer-container\">\r\n      <h1 className=\"create-customer-title\">Müşteri Ekle</h1>\r\n      <form onSubmit={handleSubmit} className=\"create-customer-form\">\r\n        <label htmlFor=\"name\" className=\"create-customer-label\">İsim:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          className=\"create-customer-input\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"odooid\" className=\"create-customer-label\">Odooid:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"odooid\"\r\n          className=\"create-customer-input\"\r\n          value={odooid}\r\n          onChange={(e) => setOdooid(e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"create-customer-button\">Kaydet</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCustomer;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Vendors\\CreateVendor.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Login\\Login.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Customers\\Customers.js",["346"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchCustomers } from './CustomersApi';\r\nimport \"./Customers.css\";\r\n\r\nconst Customers = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const getCustomers = async () => {\r\n      const customers = await fetchCustomers();\r\n      setCustomers(customers);\r\n    };\r\n  \r\n    getCustomers();\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    navigate(\"/create-customer\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"customers-container\">\r\n      <div className=\"header-container\">\r\n        <h1>Müşteriler</h1>\r\n        <button className=\"add-customer-button\" onClick={handleClick}>\r\n          + Müşteri Ekle\r\n        </button>\r\n      </div>\r\n      <table className=\"customers-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"customers-th\">ID</th>\r\n            <th>İsim</th>\r\n            <th>Odooid</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer) => (\r\n            <tr key={customer.id}>\r\n              <td>{customer.id}</td>\r\n              <td>{customer.name}</td>\r\n              <td>{customer.odooid}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Home\\Home.js",["347","348"],[],"import React from 'react';\r\nimport './Home.css';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { LatLngBounds } from 'leaflet';\r\nimport Chart from './Chart/Chart';\r\nimport { useState, useEffect } from 'react';\r\nimport { getLatestLocations, getAllLocations, createLocation } from './WorldMapApi';\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getLatestLocations()\r\n      .then(response => {\r\n        console.log(response.data.locations); // Gelen veriyi kontrol edelim.\r\n        setMarkers(response.data);\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, []); // Bu useEffect hooku bileşen yüklendiğinde bir kez çalışır.\r\n  \r\n  const maxBounds = new LatLngBounds(\r\n    [-90, -180], // Güneybatı köşe koordinatları\r\n    [90, 180]    // Kuzeydoğu köşe koordinatları\r\n    \r\n  );\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Filtreleme */}\r\n      <div className=\"filters\">\r\n        <input type=\"date\" className=\"start-date\" />\r\n        <input type=\"date\" className=\"end-date\" />\r\n        <button className=\"filter-button\">Filtrele</button>\r\n      </div>\r\n\r\n      {/* Kartlar */}\r\n      <div className=\"cards\">\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">150</span>\r\n            <p className=\"title\">Toplam İş Sayısı</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">75</span>\r\n            <p className=\"title\">Açık İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">30</span>\r\n            <p className=\"title\">XXX İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">40</span>\r\n            <p className=\"title\">Bitirilen İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">5</span>\r\n            <p className=\"title\">İptal Edilen İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">20</span>\r\n            <p className=\"title\">Zamanı Geçen İşler</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"world-map\">\r\n      <MapContainer\r\n          center={[51.505, -0.09]} // Başlangıç koordinatları\r\n          zoom={1} // Başlangıç yakınlaştırma seviyesi\r\n          minZoom={2} // Minimum yakınlaştırma seviyesi\r\n          maxZoom={17} // Maksimum yakınlaştırma seviyesi\r\n          maxBounds={maxBounds} // Harita sınırlarını ayarlayın\r\n          maxBoundsViscosity={1} // Harita sınırlarına yapışkanlık (1: tam sınırlama)\r\n      >\r\n        <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {markers.map((marker, index) => (\r\n  <Marker key={index} position={[marker.atitude, marker.longitude]}>\r\n    <Popup>\r\n      <div>\r\n        <strong>{marker.name}</strong> <br />\r\n        <small>{new Date(parseInt(marker.latesttimestamp)).toLocaleString()}</small>\r\n      </div>\r\n    </Popup>\r\n  </Marker>\r\n))}\r\n\r\n\r\n      </MapContainer>\r\n    </div>\r\n      {/* İstatistikler */}\r\n      <div className=\"statistics\">\r\n        <div className=\"weekly-statistics\">\r\n      <Chart />\r\n       </div>\r\n        <div className=\"general-statistics\">\r\n          <h3>Genel İstatistik</h3>\r\n          {/* İstatistik bileşeni buraya eklenecek */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* İş Üzerinde Çalışan Kullanıcılar Tablosu */}\r\n      <div className=\"users-working\">\r\n        <table className=\"users-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Kullanıcı</th>\r\n              <th>Çalıştığı İş</th>\r\n              <th>Açılış Zamanı</th>\r\n              <th>Başlama Zamanı</th>\r\n              <th>Son Düzenlenme Tarihi</th>\r\n              <th>Durumu</th>\r\n              <th>#</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Ahmet Yılmaz</td>\r\n              <td>Proje X</td>\r\n              <td>2023-04-01</td>\r\n              <td>2023-04-02</td>\r\n              <td>2023-04-08</td>\r\n              <td>Aktif</td>\r\n              <td>1</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Fatma Demir</td>\r\n              <td>Proje Y</td>\r\n              <td>2023-04-03</td>\r\n              <td>2023-04-04</td>\r\n              <td>2023-04-09</td>\r\n              <td>Aktif</td>\r\n              <td>2</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Gallery\\gallery.js",["349","350"],[],"import React, { useState } from 'react';\r\nimport './gallery.css';\r\n\r\nconst images = [\r\n  'https://picsum.photos/id/10/800/600',\r\n  'https://picsum.photos/id/20/800/600',\r\n  'https://picsum.photos/id/30/800/600'\r\n];\r\n\r\nconst Gallery = () => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handlePrev = () => {\r\n    setCurrentImage(currentImage === 0 ? images.length - 1 : currentImage - 1);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentImage(currentImage === images.length - 1 ? 0 : currentImage + 1);\r\n  };\r\n\r\n  const toggleModal = (index) => {\r\n    setCurrentImage(index);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const closeModal = (event) => {\r\n    if (event.target.classList.contains('gallery-modal')) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      {images.map((image, index) => (\r\n        <img\r\n          key={index}\r\n          className=\"gallery-image\"\r\n          src={image}\r\n          alt={`Image ${index}`}\r\n          onClick={() => toggleModal(index)}\r\n        />\r\n      ))}\r\n      {showModal && (\r\n        <div className=\"gallery-modal\" onClick={closeModal}>\r\n          <img\r\n            className=\"modal-image\"\r\n            src={images[currentImage]}\r\n            alt={`Image ${currentImage}`}\r\n          />\r\n          <div className=\"modal-arrows\">\r\n            <div className=\"modal-arrow modal-arrow-left\" onClick={handlePrev}>\r\n              &lt;\r\n            </div>\r\n            <div className=\"modal-arrow modal-arrow-right\" onClick={handleNext}>\r\n              &gt;\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\editForm.js",["351","352","353"],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\createForm.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\FormsPage\\UploadForm.js",["354","355"],[],"import React, { useState, useEffect } from 'react';\r\nimport \"./UploadForm.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons'\r\nimport { useApi } from './UploadFormApi';\r\n\r\nconst UploadForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [odooid, setOdooid] = useState('');\r\n  const [customerId, setCustomerId] = useState('');\r\n  const [technicalDrawingFile, setTechnicalDrawingFile] = useState(null);\r\n  const [guideFile, setGuideFile] = useState(null);\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const {\r\n    response,\r\n    customers,\r\n    products,\r\n    errorMessage,\r\n    successMessage,\r\n    fetchCustomers,\r\n    fetchProducts,\r\n    submitProduct,\r\n    getCustomerNameById\r\n  } = useApi();\r\n\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // <FontAwesomeIcon icon={faFilePdf} size=\"2x\" /> {getFileNameFromUrl(product.guideurl) || 'Kılavuz'}\r\n  const getFileNameFromUrl = (url) => {\r\n    return url.substring(url.lastIndexOf('/') + 1);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !odooid || !customerId) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n\r\n    setIsValid(true);\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('odooid', odooid);\r\n    formData.append('customerid', customerId);\r\n    formData.append('technicaldrawingurl', technicalDrawingFile);\r\n    formData.append('guideurl', guideFile);\r\n\r\n    submitProduct(formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-form-container\">\r\n      {!isValid && (\r\n        <div className=\"error-message\">\r\n          Lütfen tüm alanları doldurunuz!\r\n        </div>\r\n      )}\r\n      <form className='products-form' onSubmit={handleSubmit}>\r\n        <table className=\"form-table\">\r\n            <tbody>\r\n              <tr>\r\n                <td>İsim:</td>\r\n                <td>\r\n                  <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Odooid:</td>\r\n                <td>\r\n                  <input type=\"number\" value={odooid} onChange={(e) => setOdooid(e.target.value)} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Müşteri İsimleri:</td>\r\n                <td>\r\n                  <select value={customerId} onChange={(e) => setCustomerId(e.target.value)}>\r\n                    <option value=\"\">Müşteri seçin</option>\r\n                    {customers.map((customer) => (\r\n                      <option key={customer.id} value={customer.id}>\r\n                        {customer.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Teknik Çizim (PDF):</td>\r\n                <td>\r\n                  <input type=\"file\" accept=\".pdf\" onChange={(e) => setTechnicalDrawingFile(e.target.files[0])} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Kılavuz (PDF, JPG):</td>\r\n                <td>\r\n                  <input type=\"file\" accept=\".pdf,.jpg,.jpeg\" onChange={(e) => setGuideFile(e.target.files[0])} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <button type=\"submit\">Kaydet</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n        {response && (\r\n          <div>\r\n            <h3>İsim: {response.data.name}</h3>\r\n            <h3>Odooid: {getCustomerNameById(response.data.customerid)}</h3>\r\n            <h3>Teknik Çizim: {response.data.technicaldrawingurl}</h3>\r\n            <h3>Kılavuz: {response.data.guideurl}</h3>\r\n          </div>\r\n        )}\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n        <h2>Ürün Listesi</h2>\r\n        <table className=\"product-list\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>İsim</th>\r\n              <th>Odooid</th>\r\n              <th>Müşteri İsim</th>\r\n              <th>Teknik Çizim URL</th>\r\n              <th>Kılavuz URL</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.id}>\r\n                <td>{product.id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.odooid}</td>\r\n                <td>{getCustomerNameById(product.customerid)}</td>\r\n                <td>\r\n                  <a href={`https://drive.google.com/viewerng/viewer?embedded=true&url=${product.technicaldrawingurl}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faFilePdf} size=\"2x\" /> {product.name || 'Teknik Çizim'}\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  <a href={`https://drive.google.com/viewerng/viewer?embedded=true&url=${product.guideurl}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faFilePdf} size=\"2x\" /> {product.guideurl || 'Kılavuz'}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\FormsPage.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\WorkOrders.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\CreateWorkOrder.js",["356"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  createWork,\r\n  createWorkStep,\r\n  getVendors,\r\n  getCustomers,\r\n  getUsers,\r\n  getProducts,\r\n  createWorkProduct,\r\n} from './worksapi';\r\nimport './CreateWorkOrder.css';\r\nimport Select from 'react-select';\r\n\r\nconst CreateWorkOrder = () => {\r\n  const navigate = useNavigate();\r\n  const [workData, setWorkData] = useState({\r\n    order_number: '',\r\n    project_number: '',\r\n    vendor_id: '',\r\n    customer_id: '',\r\n    quality_responsible_id: '',\r\n    inspector_id: null,\r\n    foreman_id: null,\r\n    work_type: 'Order',\r\n    state: '',\r\n    status: '',\r\n    creator_name: null,\r\n    creation_date: new Date().toISOString(),\r\n  });\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [vendors, setVendors] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [qualityResponsibles, setQualityResponsibles] = useState([]);\r\n  const [inspectors, setInspectors] = useState([]);\r\n  const [foremen, setForemen] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n    fetchCustomers();\r\n    fetchUsers();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await getVendors(); // Adjust this with your API call\r\n      setVendors(response.data);\r\n    } catch (error) {\r\n      // console.error('Error fetching vendors:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await getCustomers(); // Adjust this with your API call\r\n      setCustomers(response.data);\r\n    } catch (error) {\r\n      // console.error('Error fetching customers:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers(); // Adjust this with your API call\r\n      const qualityRes = response.data.filter(\r\n        user => user.role === 'Quality Responsible'\r\n      );\r\n      const inspectorRes = response.data.filter(\r\n        user => user.role === 'Inspector'\r\n      );\r\n      const foremanRes = response.data.filter(user => user.role === 'Foreman');\r\n      setQualityResponsibles(qualityRes);\r\n      setInspectors(inspectorRes);\r\n      setForemen(foremanRes);\r\n    } catch (error) {\r\n      // console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await getProducts(); // Adjust this with your API call\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      // console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const handleProductChange = selectedOptions => {\r\n    if (selectedOptions) {\r\n      const selectedProducts = selectedOptions.map(option => {\r\n        const productId = Number(option.value); // Geçerli bir sayıya dönüştürme\r\n        return productId;\r\n      });\r\n      setSelectedProducts(selectedProducts);\r\n    } else {\r\n      setSelectedProducts([]);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setWorkData({ ...workData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const createdWork = await createWork(workData);\r\n      const workStepData = {\r\n        work_id: createdWork.work.id,\r\n        step_name: 'New Work',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'New Work',\r\n        status: 'Open',\r\n      };\r\n      const createdWorkStep = await createWorkStep(workStepData);\r\n\r\n      for (const productId of selectedProducts) {\r\n        await createWorkProduct({\r\n          work_id: createdWork.work.id,\r\n          product_id: productId,\r\n        });\r\n      }\r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      // console.error('Error creating work and workstep:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-work-order\">\r\n      <h1>Create Work Order</h1>\r\n      <form onSubmit={handleSave}>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"order_number\">Order Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"order_number\"\r\n            id=\"order_number\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.order_number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"project_number\">Project Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"project_number\"\r\n            id=\"project_number\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.project_number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"vendor_id\">Vendor</label>\r\n          <select\r\n            name=\"vendor_id\"\r\n            id=\"vendor_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.vendor_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Vendor</option>\r\n            {vendors.map(vendor => (\r\n              <option key={vendor.odooid} value={vendor.odooid}>\r\n                {vendor.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"customer_id\">Customer</label>\r\n          <select\r\n            name=\"customer_id\"\r\n            id=\"customer_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.customer_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Customer</option>\r\n            {customers.map(customer => (\r\n              <option key={customer.odooid} value={customer.odooid}>\r\n                {customer.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"quality_responsible_id\">Quality Responsible</label>\r\n          <select\r\n            name=\"quality_responsible_id\"\r\n            id=\"quality_responsible_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.quality_responsible_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Quality Responsible</option>\r\n            {qualityResponsibles.map(qr => (\r\n              <option key={qr.id} value={qr.id}>\r\n                {qr.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"inspector_id\">Inspector</label>\r\n          <select\r\n            name=\"inspector_id\"\r\n            id=\"inspector_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.inspector_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Inspector</option>\r\n            {inspectors.map(inspector => (\r\n              <option key={inspector.id} value={inspector.id}>\r\n                {inspector.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"foreman_id\">Foreman</label>\r\n          <select\r\n            name=\"foreman_id\"\r\n            id=\"foreman_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.foreman_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Foreman</option>\r\n            {foremen.map(foreman => (\r\n              <option key={foreman.id} value={foreman.id}>\r\n                {foreman.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"product_id\">Product</label>\r\n\r\n          <Select\r\n            name=\"product_id\"\r\n            id=\"product_id\"\r\n            className=\"cwo-form-control\"\r\n            onChange={handleProductChange}\r\n            options={products.map(product => ({\r\n              value: product.odooid,\r\n              label: product.name,\r\n            }))}\r\n            isMulti\r\n            isSearchable\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"state\">State</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"state\"\r\n            id=\"state\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.state}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"status\">Status</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"status\"\r\n            id=\"status\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.status}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"cwo-btn cwo-btn-primary\">\r\n          Save Work Order\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateWorkOrder;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\Certificate.js",["357","358","359","360"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {  getWorkById, createWorkStep,  updateWorkStepStatus,  getQRQuestionsByWorkId, getProductByOdooId, getWorkProducts } from './worksapi';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './Certificate.css';\r\n\r\n\r\nconst Certificate = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState(null);\r\n  const [work, setWork] = useState(null);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles([...files, ...Array.from(e.target.files)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const work_id = searchParams.get('work_id');\r\n  \r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n\r\n            return product.data;\r\n          })\r\n        );\r\n\r\n        setProducts(fetchedProducts);\r\n        console.log(fetchedProducts)\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n  \r\n\r\n\r\n  const handleSend = async () => {\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const formData = new FormData();\r\n        formData.append('certificate_file', file);\r\n        formData.append('work_id', work_id);\r\n        // formData.append('product_id', product.data.id);\r\n        formData.append('step_id', step_id);\r\n  \r\n        try {\r\n          await axios.post('https://portal-test.yenaengineering.nl/api/certificates', formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n          });\r\n        } catch (error) {\r\n          // console.error(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n    } catch (error) {\r\n      // console.error(`Error updating work step status: ${error.message}`);\r\n    }\r\n  \r\n    try {\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'QR Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'QR Certificate',\r\n        status: 'Open',\r\n      };\r\n       await createWorkStep(workStepData);\r\n    } catch (error) {\r\n      // console.error(`Error creating new work step: ${error.message}`);\r\n    }\r\n  \r\n    navigate('/workorders');\r\n  };\r\n\r\n  const handleContinueWithoutSending = () => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2>Certificate</h2>\r\n      {work && (\r\n        <div>\r\n          <h3>Work Details</h3>\r\n          <p>Order Number: {work.data.order_number}</p>\r\n          <p>Project Number: {work.data.project_number}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"file-thumbnails\">\r\n        {files.map((file, index) => (\r\n          <div key={index} className=\"file-thumbnail\">\r\n            <img\r\n              src={URL.createObjectURL(file)}\r\n              alt={file.name}\r\n              className=\"file-thumbnail-img\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input type=\"file\" multiple onChange={handleFileChange} />\r\n      <br></br>\r\n      <button onClick={handleSend} className=\"btn btn-primary\">\r\n        Gönder\r\n      </button>\r\n      <button onClick={handleContinueWithoutSending} className=\"btn btn-secondary\">\r\n        Göndermeden Devam Et\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificate;","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\QualityControl.js",["361","362","363"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport ProductSegment from './ProductSegment';\r\nimport {\r\n  getWorkById,\r\n  getProductByOdooId,\r\n  getWorkProducts,\r\n  updateWorkStepStatus,\r\n} from './worksapi';\r\nimport \"./QualityControl.css\"\r\nimport \"./WorkDetails.css\"\r\n\r\nconst QualityControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [activeProductIndex, setActiveProductIndex] = useState(0);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n            return product.data;\r\n          })\r\n        );\r\n        setProducts(fetchedProducts);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const handleComplete = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleProductClick = (index) => {\r\n    setActiveProductIndex(index);\r\n  };\r\n\r\n  const renderProductContent = () => {\r\n    if (!products.length) return null;\r\n    const activeProduct = products[activeProductIndex];\r\n    return (\r\n      <ProductSegment key={activeProduct.id} product={activeProduct} vendorId={work.data.vendor_id} work_id={work_id}/>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2 className=\"qc-heading\">Quality Control</h2>\r\n      {work && (\r\n        <div className=\"work-details\">\r\n          <table>\r\n              <tbody>\r\n                  <tr>\r\n                    <h3>Work Details</h3>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Order Number: {work.data.order_number}</td>\r\n                      <td>Inspector: {work.data.inspector_id}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Project Number: {work.data.project_number}</td>\r\n                      <td>Foreman: {work.data.foreman_id}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Vendor: {work.data.vendor_id}</td>\r\n                      <td>Work Type: {work.data.work_type}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Customer: {work.data.customer_id}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Status: {work.data.status}</td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n      )}\r\n      <div className=\"product-segments\">\r\n        <div className=\"work-detail-row\">\r\n        </div>\r\n        {products.map((product, index) => (\r\n          <button\r\n            key={product.id}\r\n            onClick={() => handleProductClick(index)}\r\n            className={activeProductIndex === index ? 'active' : ''}\r\n          >\r\n            {product.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"product-content\">{renderProductContent()}</div>\r\n      <button onClick={handleComplete} className=\"qc-btn qc-btn-primary\">\r\n        Complete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QualityControl;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\QRCertificate.js",["364","365"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { getWorkById, createWorkStep, updateWorkStepStatus, getProductByOdooId, getCertificatesByWorkId, getWorkProducts, getFormByVendorIdAndProductId, getFormByFormId, createQualityControlEntry } from './worksapi';\r\nimport \"./QRCertificate.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst QRCertificate = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [formInfo, setFormInfo] = useState([]);\r\n  const [formDetail, setFormDetail] = useState([]);\r\n  const [certificates, setCertificates] = useState([]);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  const [hasNoFormInfo, setHasNoFormInfo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n  \r\n      const productsData = await getWorkProducts(work_id);\r\n  \r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n            const form = await getFormByVendorIdAndProductId(workData.data.vendor_id, product.data.id);\r\n      \r\n            if (!form || !form.form) {\r\n              setHasNoFormInfo(true);\r\n              return product.data;\r\n            }\r\n            \r\n            console.log(\"products\",product);\r\n            console.log(\"forms\", form);\r\n            setFormInfo(oldFormInfo => [...oldFormInfo, form]);\r\n      \r\n            const formDetails = await getFormByFormId(form.form.id);\r\n            setFormDetail(oldFormDetail => [...oldFormDetail, formDetails]);\r\n            console.log(\"formDetails\", formDetails);\r\n                  \r\n            return product.data;\r\n          })\r\n        );\r\n              \r\n        setProducts(fetchedProducts);\r\n        console.log(\"fetchedProducts\", fetchedProducts);\r\n      }\r\n      \r\n\r\n      const certificatesData = await getCertificatesByWorkId(work_id);\r\n      if (certificatesData) {\r\n        setCertificates(certificatesData.data);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const sendSubstepData = async (substep) => {\r\n    const qualityControlData = {\r\n      form_id: substep.form_id,\r\n      substep_id: substep.id,\r\n      step_name: substep.step_name, \r\n      name: substep.name, \r\n      technical_drawing_numbering: substep.technical_drawing_numbering, \r\n      tools: substep.tools, \r\n      description: substep.description, \r\n      actual_dimension: substep.actual_dimension, \r\n      lower_tolerance: substep.lower_tolerance, \r\n      upper_tolerance: substep.upper_tolerance, \r\n      example_visual_url: substep.example_visual_url, \r\n      status: substep.status, \r\n      type: substep.type,\r\n      image_id: substep.id,\r\n      measured_value_1: null,\r\n      measured_value_2: null,\r\n      measured_value_3: null,\r\n      work_id: substep.work_id,\r\n      sample_quantity: substep.sample_quantity,\r\n      row_number: substep.row_number\r\n    };\r\n  \r\n    console.log('qualityControlData:', qualityControlData);  // eklediğimiz log\r\n  \r\n    await createQualityControlEntry(qualityControlData);\r\n};\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Quality Control',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Quality Control',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n\r\n      formDetail.forEach((form, index) => {\r\n          form.steps.forEach(step => {\r\n              step.substeps.forEach(async substep => {\r\n                  if (formInfo[index] && formInfo[index].form) {\r\n                      console.log('form_id:', formInfo[index].form.id);  // eklediğimiz log\r\n                      await sendSubstepData({\r\n                          ...substep,\r\n                          form_id: formInfo[index].form.id,\r\n                          work_id: work.data.id\r\n                      });\r\n                  }\r\n              });\r\n          });\r\n      });\r\n    \r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      // console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n  \r\n  const getCertificateName = (url) => {\r\n    const urlParts = url.split('/');\r\n    const nameWithExtension = urlParts[urlParts.length - 1];\r\n    const name = nameWithExtension.split('.pdf')[0];\r\n    return name;\r\n  };\r\n\r\n  return (\r\n    <div className=\"qr-form-page-container\">\r\n      <h2 className=\"qr-heading\">QR Certificate</h2>\r\n      {hasNoFormInfo && (\r\n        <div className=\"alert alert-warning\">\r\n          No ITP form has been prepared yet.\r\n        </div>\r\n      )}\r\n      <div className=\"qr-certificates-container\">\r\n        <h3 className=\"qr-subheading\">Sertifikalar</h3>\r\n        <ul className=\"qr-certificates-list\">\r\n          {certificates.map((certificate, index) => (\r\n            <li key={index} className=\"qr-certificate-item\">\r\n              <div className=\"qr-certificate-div\">\r\n                <a href={certificate.certificate_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"qr-certificate-link\">\r\n                  <FontAwesomeIcon icon={faFilePdf} className=\"qr-certificate-icon\"/>\r\n                </a>\r\n                <p className=\"qr-certificate-name\">{getCertificateName(certificate.certificate_url)}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <button onClick={handleSend} className=\"qr-btn qr-btn-primary\" disabled={hasNoFormInfo}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCertificate;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\NewWork.js",["366","367"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  getWorkById,\r\n  getProductByOdooId,\r\n  getWorkProducts,\r\n  createWorkStep,\r\n  updateWorkStepStatus,\r\n} from './worksapi';\r\nimport \"./NewWork.css\";\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst NewWork = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductByOdooId(productData.product_id);\r\n            console.log(product)\r\n            return product.data;\r\n          })\r\n        );\r\n\r\n        setProducts(fetchedProducts);\r\n        console.log(fetchedProducts)\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      // Yeni bir work step oluşturun\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Certificate',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      // console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n\r\n  const handleRevise = () => {\r\n    // Revize işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2 className=\"form-page-title\">New Work</h2>\r\n      {work && (\r\n        <div className=\"work-details\">\r\n          <h3>Work Details</h3>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Order Number: {work.data.order_number}</p>\r\n            <p className=\"work-detail\">Project Number: {work.data.project_number}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Vendor: {work.data.vendor_id}</p>\r\n            <p className=\"work-detail\">Customer: {work.data.customer_id}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Inspector: {work.data.inspector_id}</p>\r\n            <p className=\"work-detail\">Foreman: {work.data.foreman_id}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Work Type: {work.data.work_type}</p>\r\n            <p className=\"work-detail\">State: {work.data.state}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Status: {work.data.status}</p>\r\n            <p className=\"work-detail\">Creator: {work.data.creator_name}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n <div className=\"products-container\">\r\n        {products &&\r\n          products.map((product, productIndex) => (\r\n            <div\r\n              key={productIndex}\r\n              className={`product`}\r\n            >\r\n              <h3>\r\n                <FontAwesomeIcon icon={faFilePdf} className=\"info-icon\" />\r\n                <a href={`https://drive.google.com/viewerng/viewer?embedded=true&url=${product.technicaldrawingurl}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {product.name}\r\n                </a>\r\n              </h3>\r\n              <div className=\"product-details\">\r\n              </div>\r\n            </div>\r\n\r\n          ))}\r\n      </div>\r\n\r\n  \r\n      <div className=\"button-container\">\r\n        <button type=\"button\" onClick={handleSend} className=\"btn btn-success send-btn\">\r\n          Send\r\n        </button>\r\n        <button type=\"button\" onClick={handleRevise} className=\"btn btn-warning revise-btn\">\r\n          Revize\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewWork;","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PageNotFound\\PageNotFound.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\RouteGuard\\RouteGuard.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Transfers\\Transfers.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Users\\CreateUser.js",["368","369"],[],"import React, { useState, useEffect } from 'react';\r\nimport { createUser } from './Userapi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CreateUser.css';\r\n\r\nlet foremanId = 1;\r\n\r\nconst CreateUser = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [relatedCompany, setRelatedCompany] = useState('');\r\n  const [userType, setUserType] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (role === 'Foreman') {\r\n      setEmail(`foreman${Math.floor(Math.random() * 100000)}@yenaengineering.nl`);\r\n    }\r\n  }, [role]);\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const userData = {\r\n      email,\r\n      password,\r\n      phone,\r\n      role,\r\n      name,\r\n      username,\r\n      related_company: relatedCompany,\r\n    };\r\n    try {\r\n      const userEmail = userType === \"Foreman\" ? `foreman${Math.floor(Math.random() * 10000)}@yenaengineering.nl` : email;\r\n      userData.email = userEmail;\r\n      const newUser = await createUser(userData);\r\n      navigate(`/users`);\r\n    } catch (error) {\r\n      console.error('Kullanıcı oluşturulamadı:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleUserTypeChange = (event) => {\r\n    setUserType(event.target.value);\r\n    if (event.target.value === 'Inspector' || event.target.value === 'YENA') {\r\n      setRole('Inspector');\r\n      setRelatedCompany('YENA');\r\n    }\r\n  };\r\n\r\n  const rolesBasedOnUserType = () => {\r\n    switch (userType) {\r\n      case 'YENA':\r\n        return ['Quality Manager', 'Quality Responsible', 'Project Manager'];\r\n      case 'Vendor':\r\n        return ['Vendor Responsible', 'Foreman'];\r\n      case 'Inspector':\r\n        return ['Inspector'];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-user-container\">\r\n      <form className=\"create-user-form\" onSubmit={handleSubmit}>\r\n        <h2>Kullanıcı Oluştur</h2>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">İsim:</label>\r\n          <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Kullanıcı Adı:</label>\r\n          <input type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            readOnly={role === \"Foreman\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Şifre:</label>\r\n          <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phone\">Telefon:</label>\r\n          <input type=\"tel\" id=\"phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Kullanıcı Tipi:</label>\r\n          <div>\r\n  <input type=\"radio\" id=\"YENA\" name=\"userType\"\r\n    value=\"YENA\"\r\n    onChange={handleUserTypeChange}\r\n  />\r\n  <label htmlFor=\"YENA\">YENA</label>\r\n</div>\r\n<div>\r\n  <input\r\n    type=\"radio\"\r\n    id=\"Vendor\"\r\n    name=\"userType\"\r\n    value=\"Vendor\"\r\n    onChange={handleUserTypeChange}\r\n  />\r\n  <label htmlFor=\"Vendor\">Vendor</label>\r\n</div>\r\n\r\n<div>\r\n  <input\r\n    type=\"radio\"\r\n    id=\"Inspector\"\r\n    name=\"userType\"\r\n    value=\"Inspector\"\r\n    onChange={handleUserTypeChange}\r\n  />\r\n  <label htmlFor=\"Inspector\">Inspector</label>\r\n</div>\r\n</div>\r\n{userType && (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"role\">Rol:</label>\r\n    <select id=\"role\" value={role} onChange={(e) => setRole(e.target.value)}>\r\n      {rolesBasedOnUserType().map((roleOption) => (\r\n        <option key={roleOption} value={roleOption}>\r\n          {roleOption}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n)}\r\n<div className=\"form-group\">\r\n  <label htmlFor=\"relatedCompany\">İlgili Şirket:</label>\r\n  <input\r\n    type=\"text\"\r\n    id=\"relatedCompany\"\r\n    value={relatedCompany}\r\n    onChange={(e) => setRelatedCompany(e.target.value)}\r\n    readOnly={userType === 'Inspector' || userType === 'YENA'}\r\n  />\r\n</div>\r\n<button type=\"submit\">Kullanıcı Oluştur</button>\r\n</form>\r\n</div>\r\n);\r\n};\r\n\r\nexport default CreateUser;\r\n\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Transfers\\TransfersDetail.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Users\\Users.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\Inspection.js",["370"],[],"import React, { useState, useEffect } from 'react';\r\nimport './Inspection.css';\r\nimport { columns, control_type } from './enumerated_inspection';\r\nimport {\r\n  fetchItems,\r\n  handleDateChange,\r\n  handleControlTypeChange,\r\n  handleControlResponsibleChange,\r\n  handleDescriptionChange,\r\n} from './inspection_utils';\r\nimport {\r\n  updateInspectionPlan,\r\n  deleteInspectionPlan,\r\n  getAllInspectionPlans,\r\n  getAllUsers,\r\n  getUserRole,\r\n} from './inspectionapi';\r\n\r\nconst Inspection = () => {\r\n  const [inspectionPlans, setInspectionPlans] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [descriptions, setDescriptions] = useState({});\r\n  const [currentUserRole, setCurrentUserRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchItems(getAllInspectionPlans, setInspectionPlans);\r\n    fetchItems(getAllUsers, setUsers);\r\n    const userRole = getUserRole();\r\n    setCurrentUserRole(userRole);\r\n  }, []);\r\n  console.log(currentUserRole);\r\n  const handleTickClick = async id => {\r\n    const plan = inspectionPlans.find(plan => plan.id === id);\r\n    updateInspectionPlan(plan);\r\n  };\r\n\r\n  const handleCrossClick = async id => {\r\n    if (window.confirm('Silmek istediğinize emin misiniz?')) {\r\n      deleteInspectionPlan(id);\r\n      setInspectionPlans(prevPlans => prevPlans.filter(plan => plan.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inspection-container\">\r\n      <h1 className=\"inspection-title\">Inspection Plan</h1>\r\n      <div className=\"inspection-table-container\">\r\n        <table className=\"inspection-table\">\r\n          <thead>\r\n            <tr>\r\n              {columns.map(column => (\r\n                <th key={column}>{column}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inspectionPlans.map(plan => (\r\n              <tr key={plan.id}>\r\n                <td>{plan.vendor_name.substring(0, 12)}</td>\r\n                <td>{plan.customer_name.substring(0, 12)}</td>\r\n                <td>{plan.product_name}</td>\r\n                <td>{plan.order_number}</td>\r\n                <td>{plan.quantity}</td>\r\n                <td>\r\n                  <select\r\n                    value={plan.control_type}\r\n                    onChange={event => handleControlTypeChange(event, plan.id)} // here\r\n                  >\r\n                    {control_type.map((type, index) => (\r\n                      <option key={index} value={type}>\r\n                        {type}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={plan.control_responsible}\r\n                    onChange={event =>\r\n                      handleControlResponsibleChange(event, plan.id)\r\n                    } // and here\r\n                  >\r\n                    {users.map((user, index) => (\r\n                      <option key={index} value={user.id}>\r\n                        {user.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={\r\n                      plan.control_date\r\n                        ? new Date(plan.control_date)\r\n                            .toISOString()\r\n                            .split('T')[0]\r\n                        : ''\r\n                    }\r\n                    onChange={date => handleDateChange(date, plan.id)}\r\n                    dateFormat=\"dd.MM.yyyy\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <textarea\r\n                    placeholder=\"Description\"\r\n                    style={{ resize: 'vertical' }}\r\n                    value={descriptions[plan.id] || ''}\r\n                    onChange={e => handleDescriptionChange(e, plan.id)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  {plan.delivery_date\r\n                    ? new Date(plan.delivery_date).toLocaleDateString('tr-TR')\r\n                    : ''}\r\n                </td>\r\n                <td>{plan.status}</td>\r\n                <td>{plan.state}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"inspection-button\"\r\n                    onClick={() => handleTickClick(plan.id)}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  {currentUserRole === 'Quality Manager' && (\r\n                    <>\r\n                      <button className=\"inspection-button\">Approve</button>\r\n                      <button className=\"inspection-button\">Reject</button>\r\n                      <button\r\n                        className=\"inspection-button\"\r\n                        onClick={() => handleCrossClick(plan.id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inspection;\r\n","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\openInspection.js",["371","372"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nconst openInspection = () => {\r\n\r\n  return (\r\n    <div className=\"transfers-container\">\r\n      <h1 className=\"title\">Open Inspection Plan</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default openInspection;","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\closedInspection.js",["373","374"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nconst closedInspection = () => {\r\n\r\n  return (\r\n    <div className=\"transfers-container\">\r\n      <h1 className=\"title\">Closed Inspection Plan</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default closedInspection;","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\TopBar.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Customers\\CustomersApi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Vendors\\useVendors.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Home\\WorldMapApi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Login\\useAuth.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\FormsPage\\UploadFormApi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\pqc_utils.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PageNotFound\\ErrorPage.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\formapi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\renderSegmentContent.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\rowDetail.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\worksapi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Transfers\\TransfersApi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Users\\Userapi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Works\\ProductSegment.js",["375","376","377","378"],[],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes, faImage } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { getFormByVendorIdAndProductId, getQualityControlEntriesByFormId, updateQualityControlEntry, getImagesByQualityControlId } from '././worksapi';\r\nimport ImagePopup from \"../shared/Popup/ImagePopup\";\r\nimport './ProductSegment.css';\r\n\r\nconst ProductSegment = ({ product, vendorId, work_id }) => {\r\n  const [formInfo, setFormInfo] = useState(null);\r\n  const [formDetail, setFormDetail] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(null);\r\n  const [measuredValues, setMeasuredValues] = useState({});\r\n  const [imagePopup, setImagePopup] = useState(false);\r\n  const [imagePopupUrl, setImagePopupUrl] = useState(\"\");\r\n  const [imageList, setImageList] = useState([]);\r\n\r\n  const openImagePopup = async (substepId) => {\r\n    const images = await fetchImages(substepId);\r\n    if (images && images.data.length > 0) {\r\n      const imageList = images.data.map(imgData => ({\r\n        url: imgData.image_url,\r\n        id: imgData.id,\r\n        status: imgData.status\r\n      }));\r\n\r\n      setImageList(imageList);\r\n      setImagePopup(true);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const fetchImages = async (substepId) => {\r\n    try {\r\n      const images = await getImagesByQualityControlId(substepId);\r\n      // console.log(\"Fetched Images:\", images); // Eklendi\r\n      return images;\r\n    } catch (error) {\r\n      // console.error(`Error fetching images by substep ID: ${error.message}`);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleStepClick = (stepOrder) => {\r\n    setActiveStep(stepOrder);\r\n  };\r\n\r\n  const fetchForm = useCallback(async () => {\r\n    const form = await getFormByVendorIdAndProductId(vendorId, product.id);\r\n    setFormInfo(form);\r\n\r\n    if (form) {\r\n      const formDetails = await getQualityControlEntriesByFormId(form.form.id, work_id);\r\n      setFormDetail(formDetails);\r\n    }\r\n  }, [vendorId, product.id]);\r\n\r\n  useEffect(() => {\r\n    fetchForm();\r\n  }, [fetchForm]);\r\n\r\n  const handleMeasuredValueChange = (substepId, field, value) => {\r\n    setMeasuredValues({\r\n      ...measuredValues,\r\n      [substepId]: {\r\n        ...measuredValues[substepId],\r\n        [field]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    const entriesToUpdate = Object.entries(measuredValues)\r\n      .filter(([id, values]) => Object.values(values).some((value) => value !== null && value !== ''))\r\n      .map(([id, values]) => ({\r\n        id,\r\n        ...values,\r\n      }));\r\n\r\n    try {\r\n      await updateQualityControlEntry(entriesToUpdate);\r\n      fetchForm();\r\n    } catch (error) {\r\n      // console.error('Ölçülen değerler güncellenirken hata:', error);\r\n    }\r\n  };\r\n\r\nconst checkTolerance = (substep, measuredValueKey) => {\r\n  const measuredValue = measuredValues[substep.id]?.[measuredValueKey] || substep[measuredValueKey];\r\n  if (!measuredValue) {\r\n    return true;\r\n  }\r\n\r\n  const lowerTolerance = substep.lower_tolerance;\r\n  const upperTolerance = substep.upper_tolerance;\r\n  return measuredValue >= lowerTolerance && measuredValue <= upperTolerance;\r\n};\r\n\r\n  const checkAllTolerances = (substep) => {\r\n    return (\r\n      checkTolerance(substep, 'measured_value_1') &&\r\n      checkTolerance(substep, 'measured_value_2') &&\r\n      checkTolerance(substep, 'measured_value_3')\r\n    );\r\n  };\r\n\r\n  const renderToleranceIcon = (substep, measuredValueKey) => {\r\n    if (checkTolerance(substep, measuredValueKey)) {\r\n      return <i className=\"fas fa-check\"></i>;\r\n    } else {\r\n      return <i className=\"fas fa-times\"></i>;\r\n    }\r\n  };\r\n\r\n  const renderCellClass = (substep, measuredValueKey) => {\r\n    if (!checkTolerance(substep, measuredValueKey)) {\r\n      return 'cell-error';\r\n    }\r\n    return '';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"product-segment\">\r\n      {imagePopup && <ImagePopup onClose={() => setImagePopup(false)} imageList={imageList} />}\r\n      <p>{product.description}</p>\r\n      <div>\r\n        <div className=\"segment-buttons\">\r\n          {formDetail &&\r\n            formDetail.steps.map((step) => (\r\n              <button \r\n                className={`product-segment-btn ${activeStep === step.order ? 'active' : ''}`}\r\n                key={step.order} \r\n                onClick={() => handleStepClick(step.order)}\r\n              >\r\n                {step.name}\r\n              </button>\r\n            ))}\r\n        </div>\r\n        {formDetail &&\r\n          formDetail.steps.map(\r\n            (step) =>\r\n              activeStep === step.order && (\r\n                <div key={step.order} className=\"segment-content\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"column-5\">Image</th>\r\n                        <th className=\"column-9\">Number</th>\r\n                        <th className=\"column-9\">Tools</th>\r\n                        <th className=\"column-9\">Description</th>\r\n                        <th className=\"column-9\">Actual Dimension</th>\r\n                        <th className=\"column-9\">Lower Tolerance</th>\r\n                        <th className=\"column-9\">Upper Tolerance</th>\r\n                        <th className=\"column-9\">Sample Quantity</th>\r\n                        <th className=\"column-9\">Measured Value 1</th>\r\n                        <th className=\"column-9\">Measured Value 2</th>\r\n                        <th className=\"column-9\">Measured Value 3</th>\r\n                        <th className=\"column-25\">OK</th>\r\n                        <th className=\"column-25\">NOK</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      \r\n                      {step.substeps.map((substep) => (\r\n                        <tr key={substep.id}>\r\n                          <td>\r\n                            <button onClick={() => openImagePopup(substep.id)}>\r\n                              <FontAwesomeIcon icon={faImage} />\r\n                            </button>\r\n                          </td>\r\n                          <td>{substep.technical_drawing_numbering}</td>\r\n                          <td>{substep.tools}</td>\r\n                          <td>{substep.description}</td>\r\n                          <td>{substep.actual_dimension}</td>\r\n                          <td>{substep.lower_tolerance}</td>\r\n                          <td>{substep.upper_tolerance}</td>\r\n                          <td>{substep.sample_quantity}</td>\r\n                          <td className={renderCellClass(substep, 'measured_value_1')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_1 || substep.measured_value_1}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_1', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_1')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_2')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_2 || substep.measured_value_2}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_2', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_2')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_3')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_3 || substep.measured_value_3}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_3', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_3')}\r\n                          </td>\r\n                          <td>\r\n                            {checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faCheck} style={{ color: \"green\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                          <td>\r\n                            {!checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faTimes} style={{ color: \"red\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <button onClick={handleSaveClick}>Save</button>\r\n                </div>\r\n              ),\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\n  export default ProductSegment;","C:\\Users\\mtrce\\portal-test\\client\\src\\components\\Home\\Chart\\Chart.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\inspectionapi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\MenuItems.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\SubMenuItem.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\functions\\Filter.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\TopBarMenu\\DropDownMenu.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderSubPartDimensiol.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderFinalPartMeasurement.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderQoatingReport.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderProductPackingStandart.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\PQC\\Segments\\renderPaintReport.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopup.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopupApi.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\LandingPage.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\enumerated_inspection.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\InspectionPlan\\inspection_utils.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\Cards.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\Hero.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\NewsLetter.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\EngineeringSolutionSection.js",[],[],"C:\\Users\\mtrce\\portal-test\\client\\src\\components\\LandingPage\\components\\Footer.js",[],[],{"ruleId":"379","severity":1,"message":"380","line":6,"column":27,"nodeType":"381","messageId":"382","endLine":6,"endColumn":33},{"ruleId":"379","severity":1,"message":"383","line":6,"column":42,"nodeType":"381","messageId":"382","endLine":6,"endColumn":46},{"ruleId":"379","severity":1,"message":"384","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":13},{"ruleId":"379","severity":1,"message":"384","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":13},{"ruleId":"379","severity":1,"message":"385","line":7,"column":30,"nodeType":"381","messageId":"382","endLine":7,"endColumn":45},{"ruleId":"379","severity":1,"message":"386","line":7,"column":47,"nodeType":"381","messageId":"382","endLine":7,"endColumn":61},{"ruleId":"387","severity":1,"message":"388","line":36,"column":9,"nodeType":"389","endLine":42,"endColumn":11},{"ruleId":"387","severity":1,"message":"388","line":46,"column":11,"nodeType":"389","endLine":50,"endColumn":13},{"ruleId":"379","severity":1,"message":"390","line":7,"column":10,"nodeType":"381","messageId":"382","endLine":7,"endColumn":26},{"ruleId":"379","severity":1,"message":"391","line":7,"column":28,"nodeType":"381","messageId":"382","endLine":7,"endColumn":38},{"ruleId":"379","severity":1,"message":"392","line":7,"column":40,"nodeType":"381","messageId":"382","endLine":7,"endColumn":56},{"ruleId":"393","severity":1,"message":"394","line":30,"column":6,"nodeType":"395","endLine":30,"endColumn":8,"suggestions":"396"},{"ruleId":"379","severity":1,"message":"397","line":33,"column":9,"nodeType":"381","messageId":"382","endLine":33,"endColumn":27},{"ruleId":"379","severity":1,"message":"398","line":118,"column":13,"nodeType":"381","messageId":"382","endLine":118,"endColumn":28},{"ruleId":"379","severity":1,"message":"399","line":3,"column":64,"nodeType":"381","messageId":"382","endLine":3,"endColumn":86},{"ruleId":"379","severity":1,"message":"400","line":10,"column":10,"nodeType":"381","messageId":"382","endLine":10,"endColumn":18},{"ruleId":"379","severity":1,"message":"401","line":13,"column":10,"nodeType":"381","messageId":"382","endLine":13,"endColumn":17},{"ruleId":"379","severity":1,"message":"402","line":13,"column":19,"nodeType":"381","messageId":"382","endLine":13,"endColumn":29},{"ruleId":"379","severity":1,"message":"403","line":8,"column":3,"nodeType":"381","messageId":"382","endLine":8,"endColumn":23},{"ruleId":"379","severity":1,"message":"404","line":15,"column":9,"nodeType":"381","messageId":"382","endLine":15,"endColumn":17},{"ruleId":"379","severity":1,"message":"405","line":21,"column":9,"nodeType":"381","messageId":"382","endLine":21,"endColumn":16},{"ruleId":"379","severity":1,"message":"400","line":12,"column":10,"nodeType":"381","messageId":"382","endLine":12,"endColumn":18},{"ruleId":"379","severity":1,"message":"406","line":105,"column":13,"nodeType":"381","messageId":"382","endLine":105,"endColumn":24},{"ruleId":"379","severity":1,"message":"407","line":47,"column":9,"nodeType":"381","messageId":"382","endLine":47,"endColumn":19},{"ruleId":"379","severity":1,"message":"406","line":62,"column":13,"nodeType":"381","messageId":"382","endLine":62,"endColumn":24},{"ruleId":"379","severity":1,"message":"408","line":6,"column":5,"nodeType":"381","messageId":"382","endLine":6,"endColumn":14},{"ruleId":"379","severity":1,"message":"409","line":41,"column":13,"nodeType":"381","messageId":"382","endLine":41,"endColumn":20},{"ruleId":"379","severity":1,"message":"410","line":22,"column":24,"nodeType":"381","messageId":"382","endLine":22,"endColumn":39},{"ruleId":"379","severity":1,"message":"411","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":25},{"ruleId":"379","severity":1,"message":"412","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"411","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":25},{"ruleId":"379","severity":1,"message":"412","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"413","line":9,"column":10,"nodeType":"381","messageId":"382","endLine":9,"endColumn":18},{"ruleId":"379","severity":1,"message":"414","line":14,"column":10,"nodeType":"381","messageId":"382","endLine":14,"endColumn":23},{"ruleId":"379","severity":1,"message":"415","line":14,"column":25,"nodeType":"381","messageId":"382","endLine":14,"endColumn":41},{"ruleId":"393","severity":1,"message":"416","line":56,"column":6,"nodeType":"395","endLine":56,"endColumn":28,"suggestions":"417"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'axios' is defined but never used.","'getAllLocations' is defined but never used.","'createLocation' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'initialFormState' is defined but never used.","'fetchItems' is defined but never used.","'handleFormChange' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCustomers' and 'fetchProducts'. Either include them or remove the dependency array.","ArrayExpression",["418"],"'getFileNameFromUrl' is assigned a value but never used.","'createdWorkStep' is assigned a value but never used.","'getQRQuestionsByWorkId' is defined but never used.","'products' is assigned a value but never used.","'product' is assigned a value but never used.","'setProduct' is assigned a value but never used.","'updateWorkStepStatus' is defined but never used.","'navigate' is assigned a value but never used.","'step_id' is assigned a value but never used.","'newWorkStep' is assigned a value but never used.","'handleSave' is assigned a value but never used.","'foremanId' is assigned a value but never used.","'newUser' is assigned a value but never used.","'setDescriptions' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'formInfo' is assigned a value but never used.","'imagePopupUrl' is assigned a value but never used.","'setImagePopupUrl' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'work_id'. Either include it or remove the dependency array.",["419"],{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},"Update the dependencies array to be: [fetchCustomers, fetchProducts]",{"range":"424","text":"425"},"Update the dependencies array to be: [vendorId, product.id, work_id]",{"range":"426","text":"427"},[873,875],"[fetchCustomers, fetchProducts]",[2027,2049],"[vendorId, product.id, work_id]"]