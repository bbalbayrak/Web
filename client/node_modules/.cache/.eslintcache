[{"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\index.js":"1","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\reportWebVitals.js":"2","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\App.js":"3","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\Customers.js":"4","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Login\\Login.js":"5","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\Vendors.js":"6","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\CreateCustomer.js":"7","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\Home.js":"8","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\CreateVendor.js":"9","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Maintenance\\Maintenance.js":"10","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Gallery\\gallery.js":"11","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\Certificate.js":"12","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\WorkOrders.js":"13","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QRCertificate.js":"14","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\NewWork.js":"15","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\FormsPage.js":"16","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\FormEdit.js":"17","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\CreateForm.js":"18","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Users.js":"19","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\CreateUser.js":"20","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\FormsPage\\UploadForm.js":"21","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\CreateWorkOrder.js":"22","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QualityControl.js":"23","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PageNotFound\\PageNotFound.js":"24","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\RouteGuard\\RouteGuard.js":"25","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\navbar\\HamburgerMenu.js":"26","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Userapi.js":"27","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\worksapi.js":"28","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\formapi.js":"29","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\ProductSegment.js":"30","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Charts\\Chart\\Chart.js":"31","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopup.js":"32"},{"size":552,"mtime":1681888653563,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1681888653563,"results":"35","hashOfConfig":"34"},{"size":4135,"mtime":1683264154127,"results":"36","hashOfConfig":"34"},{"size":1470,"mtime":1682606692359,"results":"37","hashOfConfig":"34"},{"size":1958,"mtime":1682339383664,"results":"38","hashOfConfig":"34"},{"size":1789,"mtime":1682606692366,"results":"39","hashOfConfig":"34"},{"size":1433,"mtime":1682606692358,"results":"40","hashOfConfig":"34"},{"size":5355,"mtime":1681888653552,"results":"41","hashOfConfig":"34"},{"size":1411,"mtime":1682606692360,"results":"42","hashOfConfig":"34"},{"size":388,"mtime":1681888653555,"results":"43","hashOfConfig":"34"},{"size":1741,"mtime":1681888653489,"results":"44","hashOfConfig":"34"},{"size":3498,"mtime":1683293362562,"results":"45","hashOfConfig":"34"},{"size":2517,"mtime":1682581151442,"results":"46","hashOfConfig":"34"},{"size":4465,"mtime":1683548836153,"results":"47","hashOfConfig":"34"},{"size":4729,"mtime":1682606692371,"results":"48","hashOfConfig":"34"},{"size":1690,"mtime":1683264154138,"results":"49","hashOfConfig":"34"},{"size":11218,"mtime":1683541909520,"results":"50","hashOfConfig":"34"},{"size":11205,"mtime":1683284528722,"results":"51","hashOfConfig":"34"},{"size":1354,"mtime":1682339383667,"results":"52","hashOfConfig":"34"},{"size":1852,"mtime":1682339383666,"results":"53","hashOfConfig":"34"},{"size":4964,"mtime":1682429072462,"results":"54","hashOfConfig":"34"},{"size":8458,"mtime":1683542029600,"results":"55","hashOfConfig":"34"},{"size":3724,"mtime":1683549713555,"results":"56","hashOfConfig":"34"},{"size":311,"mtime":1682581151437,"results":"57","hashOfConfig":"34"},{"size":832,"mtime":1682186049522,"results":"58","hashOfConfig":"34"},{"size":3212,"mtime":1683264154142,"results":"59","hashOfConfig":"34"},{"size":954,"mtime":1682189401866,"results":"60","hashOfConfig":"34"},{"size":7453,"mtime":1683613538228,"results":"61","hashOfConfig":"34"},{"size":2276,"mtime":1683264154139,"results":"62","hashOfConfig":"34"},{"size":8993,"mtime":1683631704748,"results":"63","hashOfConfig":"34"},{"size":3988,"mtime":1681888653484,"results":"64","hashOfConfig":"34"},{"size":911,"mtime":1683614625301,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1ofgmv0",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"69"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"69"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\index.js",[],[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\App.js",["174","175","176"],[],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport HamburgerMenu from \"./components/shared/navbar/HamburgerMenu\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Vendors from \"./components/Vendors/Vendors\";\r\nimport Customers from \"./components/Customers/Customers\";\r\nimport { BrowserRouter as Router, Route, Link, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport Maintenance from \"./components/Maintenance/Maintenance\";\r\nimport Home from \"./components/Home/Home\";\r\nimport FormsPage from \"./components/ITPForms/FormsPage\";\r\nimport FormEdit from \"./components/ITPForms/FormEdit\";\r\nimport UploadForm from './components/FormsPage/UploadForm';\r\nimport Gallery from \"./components/Gallery/gallery\";\r\nimport WorkOrders from \"./components/Works/WorkOrders\";\r\nimport CreateWorkOrder from \"./components/Works/CreateWorkOrder\";\r\nimport Certificate from \"./components/Works/Certificate\";\r\nimport QRCertificate from \"./components/Works/QRCertificate\";\r\nimport QualityControl from \"./components/Works/QualityControl\";\r\nimport RouteGuard from './components/RouteGuard/RouteGuard';\r\nimport Users from './components/Users/Users';\r\nimport CreateUser from \"./components/Users/CreateUser\";\r\nimport NewWork from \"./components/Works/NewWork\";\r\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\r\nimport CreateVendor from \"./components/Vendors/CreateVendor\";\r\nimport CreateCustomer from \"./components/Customers/CreateCustomer\";\r\nimport FormCreate from \"./components/ITPForms/CreateForm\";\r\n\r\nfunction App() {\r\n  const [showMenu, setShowMenu] = useState(true);\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n      <HamburgerMenu showMenu={showMenu} />\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Login setShowMenu={setShowMenu} />}/>\r\n          <Route path=\"/customers\" element={<RouteGuard setShowMenu={setShowMenu}><Customers /></RouteGuard>}/>\r\n          <Route path=\"/login\" element={<Login setShowMenu={setShowMenu} />}/>\r\n          <Route path=\"/home\" element={<RouteGuard setShowMenu={setShowMenu}><Home /></RouteGuard>}/>\r\n          <Route path=\"/vendors\" element={<RouteGuard setShowMenu={setShowMenu}><Vendors /></RouteGuard>}/>\r\n          <Route path=\"/products\" element={<RouteGuard setShowMenu={setShowMenu}><UploadForm /></RouteGuard>}/>\r\n          <Route path=\"/forms\" element={<RouteGuard setShowMenu={setShowMenu}><FormsPage /></RouteGuard>}/>\r\n          <Route path=\"/forms/:id\" element={<RouteGuard setShowMenu={setShowMenu}><FormEdit /></RouteGuard>}/>\r\n          <Route path='/gallery' element={<RouteGuard setShowMenu={setShowMenu}><Gallery /></RouteGuard>}/>\r\n          <Route path='/workorders' element={<RouteGuard setShowMenu={setShowMenu}><WorkOrders /></RouteGuard>}/>\r\n          <Route path='/newworks' element={<RouteGuard setShowMenu={setShowMenu}><NewWork /></RouteGuard>}/>\r\n          <Route path='/create-work-order' element={<RouteGuard setShowMenu={setShowMenu}><CreateWorkOrder /></RouteGuard>}/>\r\n          <Route path='/certificate' element={<RouteGuard setShowMenu={setShowMenu}><Certificate /></RouteGuard>}/>\r\n          <Route path='/qr-certificate' element={<RouteGuard setShowMenu={setShowMenu}><QRCertificate /></RouteGuard>}/>\r\n          <Route path='/quality-control' element={<RouteGuard setShowMenu={setShowMenu}><QualityControl /></RouteGuard>}/>\r\n          <Route path=\"/users\" element={<RouteGuard setShowMenu={setShowMenu}><Users /></RouteGuard>}/>\r\n          <Route path=\"/create-user\" element={<RouteGuard setShowMenu={setShowMenu}><CreateUser /></RouteGuard>}/>\r\n          <Route path=\"/*\" element={<RouteGuard setShowMenu={setShowMenu}><PageNotFound /></RouteGuard>}/>\r\n          <Route path=\"/create-vendor\" element={<RouteGuard setShowMenu={setShowMenu}><CreateVendor /></RouteGuard>}/>\r\n          <Route path=\"/create-customer\" element={<RouteGuard setShowMenu={setShowMenu}><CreateCustomer /></RouteGuard>}/>\r\n          <Route path=\"/create-form\" element={<RouteGuard setShowMenu={setShowMenu}><FormCreate /></RouteGuard>}/>\r\n\r\n\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\Customers.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Login\\Login.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\Vendors.js",["177","178","179"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Vendors.css\";\r\n\r\nconst Vendors = () => {\r\n  const [vendors, setVendors] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [odooid, setOdooid] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n  }, []);\r\n\r\n  let navigate = useNavigate()\r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3001/vendors\");\r\n      setVendors(response.data.data);\r\n    } catch (error) {\r\n      console.error(\"Tedarikçiler alınırken hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    navigate(\"/create-vendor\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      await axios.post(\"http://localhost:3001/vendors\", { name, odooid });\r\n      fetchVendors();\r\n      setName(\"\");\r\n      setOdooid(\"\");\r\n    } catch (error) {\r\n      console.error(\"Tedarikçi eklenirken hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"vendor-table-container\">\r\n      \r\n        <button type=\"submit\" onClick={handleClick}>\r\n          Tedarikçi Ekle\r\n        </button>\r\n\r\n      <table className=\"vendor-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>İsim</th>\r\n            <th>Odooid</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {vendors.map((vendor) => (\r\n            <tr key={vendor.id}>\r\n              <td>{vendor.id}</td>\r\n              <td>{vendor.name}</td>\r\n              <td>{vendor.odooid}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vendors;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Customers\\CreateCustomer.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Home\\Home.js",["180"],[],"import React from 'react';\r\nimport './Home.css';\r\nimport { MapContainer, TileLayer, Marker} from 'react-leaflet';\r\nimport { LatLngBounds } from 'leaflet';\r\nimport Chart from '../Charts/Chart/Chart';\r\n\r\nconst data = [\r\n  { name: 'Pazartesi', iş: 150, iptalEdilenİş: 50 },\r\n  { name: 'Salı', iş: 200, iptalEdilenİş: 50 },\r\n  { name: 'Çarşamba', iş: 100, iptalEdilenİş: 50 },\r\n  { name: 'Perşembe', iş: 250, iptalEdilenİş: 50 },\r\n  { name: 'Cuma', iş: 175, iptalEdilenİş: 50 },\r\n  { name: 'Cumartesi', iş: 50, iptalEdilenİş: 50 },\r\n  { name: 'Pazar', iş: 75, iptalEdilenİş: 50 },\r\n];\r\nconst Home = () => {\r\n  const maxBounds = new LatLngBounds(\r\n    [-90, -180], // Güneybatı köşe koordinatları\r\n    [90, 180]    // Kuzeydoğu köşe koordinatları\r\n  );\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Filtreleme */}\r\n      <div className=\"filters\">\r\n        <input type=\"date\" className=\"start-date\" />\r\n        <input type=\"date\" className=\"end-date\" />\r\n        <button className=\"filter-button\">Filtrele</button>\r\n      </div>\r\n\r\n      {/* Kartlar */}\r\n      <div className=\"cards\">\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">150</span>\r\n            <p className=\"title\">Toplam İş Sayısı</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">75</span>\r\n            <p className=\"title\">Açık İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">30</span>\r\n            <p className=\"title\">XXX İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">40</span>\r\n            <p className=\"title\">Bitirilen İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">5</span>\r\n            <p className=\"title\">İptal Edilen İşler</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"icon-container\">\r\n            {/* İkon buraya eklenecek */}\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <span className=\"number\">20</span>\r\n            <p className=\"title\">Zamanı Geçen İşler</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"world-map\">\r\n          <MapContainer\r\n              center={[51.505, -0.09]} // Başlangıç koordinatları\r\n              zoom={1} // Başlangıç yakınlaştırma seviyesi\r\n              minZoom={2} // Minimum yakınlaştırma seviyesi\r\n              maxZoom={6} // Maksimum yakınlaştırma seviyesi\r\n              maxBounds={maxBounds} // Harita sınırlarını ayarlayın\r\n              maxBoundsViscosity={1} // Harita sınırlarına yapışkanlık (1: tam sınırlama)\r\n              \r\n          >\r\n              <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              />\r\n          </MapContainer>\r\n      </div>\r\n      {/* İstatistikler */}\r\n      <div className=\"statistics\">\r\n        <div className=\"weekly-statistics\">\r\n        <Chart data={data} />\r\n          {/* İstatistik bileşeni buraya eklenecek */}\r\n        </div>\r\n        <div className=\"general-statistics\">\r\n          <h3>Genel İstatistik</h3>\r\n          {/* İstatistik bileşeni buraya eklenecek */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* İş Üzerinde Çalışan Kullanıcılar Tablosu */}\r\n      <div className=\"users-working\">\r\n        <table className=\"users-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Kullanıcı</th>\r\n              <th>Çalıştığı İş</th>\r\n              <th>Açılış Zamanı</th>\r\n              <th>Başlama Zamanı</th>\r\n              <th>Son Düzenlenme Tarihi</th>\r\n              <th>Durumu</th>\r\n              <th>#</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Ahmet Yılmaz</td>\r\n              <td>Proje X</td>\r\n              <td>2023-04-01</td>\r\n              <td>2023-04-02</td>\r\n              <td>2023-04-08</td>\r\n              <td>Aktif</td>\r\n              <td>1</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Fatma Demir</td>\r\n              <td>Proje Y</td>\r\n              <td>2023-04-03</td>\r\n              <td>2023-04-04</td>\r\n              <td>2023-04-09</td>\r\n              <td>Aktif</td>\r\n              <td>2</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Vendors\\CreateVendor.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Maintenance\\Maintenance.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Gallery\\gallery.js",["181","182"],[],"import React, { useState } from 'react';\r\nimport './gallery.css';\r\n\r\nconst images = [\r\n  'https://picsum.photos/id/10/800/600',\r\n  'https://picsum.photos/id/20/800/600',\r\n  'https://picsum.photos/id/30/800/600'\r\n];\r\n\r\nconst Gallery = () => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handlePrev = () => {\r\n    setCurrentImage(currentImage === 0 ? images.length - 1 : currentImage - 1);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentImage(currentImage === images.length - 1 ? 0 : currentImage + 1);\r\n  };\r\n\r\n  const toggleModal = (index) => {\r\n    setCurrentImage(index);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const closeModal = (event) => {\r\n    if (event.target.classList.contains('gallery-modal')) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      {images.map((image, index) => (\r\n        <img\r\n          key={index}\r\n          className=\"gallery-image\"\r\n          src={image}\r\n          alt={`Image ${index}`}\r\n          onClick={() => toggleModal(index)}\r\n        />\r\n      ))}\r\n      {showModal && (\r\n        <div className=\"gallery-modal\" onClick={closeModal}>\r\n          <img\r\n            className=\"modal-image\"\r\n            src={images[currentImage]}\r\n            alt={`Image ${currentImage}`}\r\n          />\r\n          <div className=\"modal-arrows\">\r\n            <div className=\"modal-arrow modal-arrow-left\" onClick={handlePrev}>\r\n              &lt;\r\n            </div>\r\n            <div className=\"modal-arrow modal-arrow-right\" onClick={handleNext}>\r\n              &gt;\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\Certificate.js",["183","184"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {  getWorkById, createWorkStep,  updateWorkStepStatus,  getQRQuestionsByWorkId, getProductById} from './worksapi';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './Certificate.css';\r\n\r\nconst Certificate = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState(null);\r\n  const [work, setWork] = useState(null);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles([...files, ...Array.from(e.target.files)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const work_id = searchParams.get('work_id');\r\n\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const productData = await getProductById(workData.data.product_id);\r\n      setProduct(productData);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n\r\n\r\n  const handleSend = async () => {\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const formData = new FormData();\r\n        formData.append('certificate_file', file);\r\n        formData.append('work_id', work_id);\r\n        // formData.append('product_id', product.data.id);\r\n        formData.append('step_id', step_id);\r\n  \r\n        try {\r\n          await axios.post('http://localhost:3001/certificates', formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n          });\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n    } catch (error) {\r\n      console.error(`Error updating work step status: ${error.message}`);\r\n    }\r\n  \r\n    try {\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'QR Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'QR Certificate',\r\n        status: 'Open',\r\n      };\r\n       await createWorkStep(workStepData);\r\n    } catch (error) {\r\n      console.error(`Error creating new work step: ${error.message}`);\r\n    }\r\n  \r\n    navigate('/workorders');\r\n  };\r\n\r\n  const handleContinueWithoutSending = () => {\r\n    navigate('/workorders');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2>Certificate</h2>\r\n      {work && (\r\n        <div>\r\n          <h3>Work Details</h3>\r\n          <p>Order Number: {work.data.order_number}</p>\r\n          <p>Project Number: {work.data.project_number}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"file-thumbnails\">\r\n        {files.map((file, index) => (\r\n          <div key={index} className=\"file-thumbnail\">\r\n            <img\r\n              src={URL.createObjectURL(file)}\r\n              alt={file.name}\r\n              className=\"file-thumbnail-img\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input type=\"file\" multiple onChange={handleFileChange} />\r\n      <br></br>\r\n      <button onClick={handleSend} className=\"btn btn-primary\">\r\n        Gönder\r\n      </button>\r\n      <button onClick={handleContinueWithoutSending} className=\"btn btn-secondary\">\r\n        Göndermeden Devam Et\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificate;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\WorkOrders.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QRCertificate.js",["185","186"],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\NewWork.js",["187","188"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  getWorkById,\r\n  getProductById,\r\n  getWorkProducts,\r\n  createWorkStep,\r\n  updateWorkStepStatus,\r\n} from './worksapi';\r\nimport \"./NewWork.css\";\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst NewWork = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n  const [activeProductIndex, setActiveProductIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductById(productData.product_id);\r\n            return product.data;\r\n          })\r\n        );\r\n\r\n        setProducts(fetchedProducts);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      // Yeni bir work step oluşturun\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Certificate',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n\r\n  const handleRevise = () => {\r\n    // Revize işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleProductClick = (index) => {\r\n    if (activeProductIndex === index) {\r\n      setActiveProductIndex(null);\r\n    } else {\r\n      setActiveProductIndex(index);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2 className=\"form-page-title\">QR Control</h2>\r\n      {work && (\r\n        <div className=\"work-details\">\r\n          <h3>Work Details</h3>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Order Number: {work.data.order_number}</p>\r\n            <p className=\"work-detail\">Project Number: {work.data.project_number}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Vendor: {work.data.vendor_id}</p>\r\n            <p className=\"work-detail\">Customer: {work.data.customer_id}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Inspector: {work.data.inspector_id}</p>\r\n            <p className=\"work-detail\">Foreman: {work.data.foreman_id}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Work Type: {work.data.work_type}</p>\r\n            <p className=\"work-detail\">State: {work.data.state}</p>\r\n          </div>\r\n          <div className=\"work-detail-row\">\r\n            <p className=\"work-detail\">Status: {work.data.status}</p>\r\n            <p className=\"work-detail\">Creator: {work.data.creator_id}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n <div className=\"products-container\">\r\n        {products &&\r\n          products.map((product, productIndex) => (\r\n            <div\r\n              key={productIndex}\r\n              className={`product`}\r\n            >\r\n              <h3>\r\n                <FontAwesomeIcon icon={faFilePdf} className=\"info-icon\" />\r\n                Product: {product.name}\r\n              </h3>\r\n              <div className=\"product-details\">\r\n                <a href={product.technicaldrawingurl} target=\"_blank\" rel=\"noopener noreferrer\">Technical Drawing PDF</a>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n  \r\n      <div className=\"button-container\">\r\n        <button type=\"button\" onClick={handleSave} className=\"btn btn-primary save-btn\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\" onClick={handleSend} className=\"btn btn-success send-btn\">\r\n          Send\r\n        </button>\r\n        <button type=\"button\" onClick={handleRevise} className=\"btn btn-warning revise-btn\">\r\n          Revize\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewWork;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\FormsPage.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\FormEdit.js",["189","190"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getFormById, createOrUpdateForm } from './formapi';\r\nimport ImagePopup from '../shared/Popup/ImagePopup';\r\n\r\nconst segments = [\r\n  { name: 'Sub - Part Dimensiol', order: 1 },\r\n  { name: 'Final Part Measurement', order: 2 },\r\n  { name: 'Paint Report', order: 3 },\r\n  { name: 'Qoating Report', order: 4 },\r\n  { name: 'Product Packing Standart', order: 5 },\r\n  { name: 'Loading Check', order: 6 },\r\n];\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [form, setForm] = useState(null);\r\n  const [activeSegment, setActiveSegment] = useState(1);\r\n  const [formSaved, setFormSaved] = useState(false);\r\n  const [showImagePopup, setShowImagePopup] = useState(false);\r\n  const [imagePopupUrl, setImagePopupUrl] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const formData = await getFormById(id);\r\n        setForm(formData);\r\n      } catch (error) {\r\n        console.error('Error fetching form:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (formSaved) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const formData = await getFormById(id);\r\n          setForm(formData);\r\n          setFormSaved(false);\r\n        } catch (error) {\r\n          console.error('Error fetching form:', error);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [formSaved, id]);\r\n\r\n  useEffect(() => {\r\n    if (form) {\r\n      const finalPartMeasurementStep = form.steps.find(\r\n        (step) => step.name === 'Final Part Measurement'\r\n      );\r\n\r\n      if (finalPartMeasurementStep) {\r\n        setRows(finalPartMeasurementStep.substeps);\r\n      }\r\n    }\r\n  }, [form]);\r\n  \r\n  const handleImageClick = (url) => {\r\n    setImagePopupUrl(url);\r\n    setShowImagePopup(true);\r\n  };\r\n  \r\n  const addRow = () => {\r\n    const newRow = {\r\n      id: null,\r\n      name: '',\r\n      technical_drawing_numbering: '',\r\n      tools: '',\r\n      description: '',\r\n      actual_dimension: '',\r\n      lower_tolerance: '',\r\n      upper_tolerance: '',\r\n    };\r\n    setRows([...rows, newRow]);\r\n  };\r\n  \r\n\r\n  const handleInputChange = (event, rowId, field) => {\r\n    const newValue = event.target.value;\r\n    setRows(rows.map(row => row.id === rowId ? {...row, [field]: newValue} : row));\r\n  };  \r\n  \r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  \r\n  const handleDrop = (e, rowId) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n      handleFileUpload(file, rowId);\r\n    } else {\r\n      alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n    }\r\n  };\r\n  \r\n  const handleFileSelect = (e, rowId) => {\r\n    const file = e.target.files[0];\r\n    if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n      handleFileUpload(file, rowId);\r\n    } else {\r\n      alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n    }\r\n  };\r\n  \r\n  const handleFileUpload = (file, rowId) => {\r\n    console.log(`File uploaded for row: ${rowId}`);\r\n    console.log('File:', file);\r\n  };\r\n  \r\n  \r\n  const handleSegmentClick = (order) => {\r\n    setActiveSegment(order);\r\n  };\r\n\r\n  const renderSegmentContent = () => {\r\n    switch (activeSegment) {\r\n      case 1:\r\n        return renderSubPartDimensiol();\r\n      case 2:\r\n        return renderFinalPartMeasurement();\r\n      case 3:\r\n        return renderPaintReport();\r\n      case 4:\r\n        return renderQoatingReport();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const saveForm = async () => {\r\n    const postData = {\r\n      id: form.id,\r\n      product_id: form.product_id,\r\n      vendor_id: form.vendor_id,\r\n      steps: segments.map((segment, index) => ({\r\n        name: segment.name,\r\n        order: segment.order,\r\n        substeps: index === 1 ? rows.map(row => {\r\n          const {\r\n            id,\r\n            technical_drawing_numbering,\r\n            tools,\r\n            description,\r\n            actual_dimension,\r\n            lower_tolerance,\r\n            upper_tolerance,\r\n            example_visual_url,\r\n            status\r\n          } = row;\r\n          return {\r\n            ...(id && { id }),\r\n            technical_drawing_numbering,\r\n            tools,\r\n            description,\r\n            actual_dimension,\r\n            lower_tolerance,\r\n            upper_tolerance,\r\n            example_visual_url,\r\n            status\r\n          };\r\n        }) : [],\r\n      })),\r\n    };\r\n    \r\n    try {\r\n      await createOrUpdateForm(postData);\r\n      console.log('Form kaydedildi');\r\n      setFormSaved(true); // Form başarıyla kaydedildiğini bildirin\r\n    } catch (error) {\r\n      console.error('Error saving form:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  const renderSubPartDimensiol = () => {\r\n    return (\r\n      <div>\r\n        {form.steps[0].substeps.map((substep) => (\r\n          <div key={substep.id}>\r\n            <h3>{substep.name}</h3>\r\n            <p>{substep.description}</p>\r\n            <p>{`Actual dimension: ${substep.actual_dimension}`}</p>\r\n            <p>{`Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`}</p>\r\n            <img src={substep.example_visual_url} alt={substep.name} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderFinalPartMeasurement = () => {\r\n    if (!form) return null;\r\n    {showImagePopup && (\r\n      <ImagePopup\r\n        onClose={() => setShowImagePopup(false)}\r\n      />\r\n    )}\r\n    \r\n    \r\n    \r\n    return (\r\n      <div>\r\n        <table className=\"measurement-table\">\r\n          <thead>\r\n            <tr className=\"measurement-table-tr\">\r\n              <th>İsim</th>\r\n              <th>Teknik Çizim Numarası</th>\r\n              <th>Kullanılan Aletler</th>\r\n              <th>Açıklama</th>\r\n              <th>Gerçek Boyut</th>\r\n              <th>Alt Tolerans</th>\r\n              <th>Üst Tolerans</th>\r\n              <th>Example Visual</th>\r\n              <th>Örnek Görsel</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row) => (\r\n            <tr key={row.id}>\r\n                <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.name || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'name')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.technical_drawing_numbering || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'technical_drawing_numbering')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.tools || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'tools')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.description || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'description')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.actual_dimension || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'actual_dimension')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.lower_tolerance || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'lower_tolerance')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.upper_tolerance || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'upper_tolerance')}\r\n              />\r\n            </td>\r\n\r\n              <td>\r\n                <div\r\n                  className=\"dropzone\"\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={(e) => handleDrop(e, row.id)}\r\n                >\r\n                  <input\r\n                className='form-edit-text-box'\r\n                type=\"file\"\r\n                accept=\"image/png, image/jpeg\"\r\n                onChange={(e) => handleFileSelect(e, row.id)}\r\n              />\r\n\r\n                </div>\r\n              </td>\r\n              <td>\r\n              <img\r\n  src={require('..//shared/a1.jpg')}\r\n  alt=\"\"\r\n  className=\"thumbnail-image\"\r\n  onClick={handleImageClick}\r\n/>\r\n\r\n            </td>\r\n            <td>\r\n\r\n            </td>\r\n\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={addRow}>Satır Ekle</button>\r\n      <button onClick={saveForm}>Kaydet</button>\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n  \r\n  const renderPaintReport = () => {\r\n    return (\r\n      <div>\r\n        {form.steps[2].substeps.map((substep) => (\r\n          <div key={substep.id}>\r\n            <h3>{substep.name}</h3>\r\n            <p>{substep.description}</p>\r\n            <p>{`Actual dimension: ${substep.actual_dimension}`}</p>\r\n            <p>{`Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`}</p>\r\n            <img src={substep.example_visual_url} alt={substep.name} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const renderQoatingReport = () => {\r\n    return (\r\n      <div>\r\n        {form.steps[3].substeps.map((substep) => (\r\n          <div key={substep.id}>\r\n            <h3>{substep.name}</h3>\r\n            <p>{substep.description}</p>\r\n            <p>{`Actual dimension: ${substep.actual_dimension}`}</p>\r\n            <p>{`Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`}</p>\r\n            <img src={substep.example_visual_url} alt={substep.name} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  const imagePopup = showImagePopup ? (\r\n    <ImagePopup onClose={() => setShowImagePopup(false)} />\r\n  ) : null;\r\n  return (\r\n    <div className='form-edit-main'>\r\n      {imagePopup}\r\n      <h1>ITP Formu</h1>\r\n      {form ? (\r\n        <div>\r\n          <h2>Product Name: {form.product_name || form.product?.name}</h2>\r\n          <h2>Vendor Name: {form.vendor_name || form.vendor?.name}</h2>\r\n            <div className=\"segments\">\r\n                {segments.map((segment) => (\r\n                <button\r\n                    key={segment.order}\r\n                    onClick={() => handleSegmentClick(segment.order)}\r\n                    className={activeSegment === segment.order ? 'active' : ''}\r\n                >\r\n                    {segment.name}\r\n                </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"segment-content\">{renderSegmentContent()}</div>\r\n        </div>\r\n      ) : (\r\n        <p>Form yükleniyor...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormEdit;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\CreateForm.js",["191","192","193","194","195","196","197","198","199","200"],[],"import React, { useState, useEffect } from 'react';\r\nimport { getVendors, getProducts } from '../Works/worksapi';\r\nimport { createOrUpdateForm } from './formapi';\r\nimport \"./FormEdit.css\"\r\n\r\nconst segments = [\r\n  { name: 'Sub - Part Dimension', order: 1 },\r\n  { name: 'Final Part Measurement', order: 2 },\r\n  { name: 'Paint Report', order: 3 },\r\n  { name: 'Coating Report', order: 4 },\r\n  { name: 'Product Packing Standard', order: 5 },\r\n  { name: 'Loading Check', order: 6 },\r\n];\r\n\r\nconst FormCreate = () => {\r\n  const [form, setForm] = useState({ product_id: null, vendor_id: null });\r\n  const [vendors, setVendors] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [activeSegment, setActiveSegment] = useState(1);\r\n  const [rows, setRows] = useState([]);\r\n  const [formSaved, setFormSaved] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    order_number: \"\",\r\n    project_number: \"\",\r\n    vendor_id: \"\",\r\n    customer_id: \"\",\r\n    quality_responsible_id: \"\",\r\n    inspector_id: \"\",\r\n    foreman_id: \"\",\r\n    work_type: \"\",\r\n    state: \"\",\r\n    status: \"\",\r\n    creator_id: \"\",\r\n    creation_date: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  function handleCoverChange(event) {\r\n    const file = event.target.files[0];\r\n    setFileUrl(URL.createObjectURL(file));\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await getProducts();\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n  \r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await getVendors();\r\n      setVendors(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching vendors:', error);\r\n    }\r\n  };\r\n  \r\n  const handleFormChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const fetchVendors = async () => {\r\n      try {\r\n        const vendorData = await getVendors();\r\n        setVendors(vendorData);\r\n      } catch (error) {\r\n        console.error('Error fetching vendors:', error);\r\n      }\r\n    };})\r\n\r\n    const saveForm = () => {\r\n      setFormSaved(true);\r\n      console.error(Request.data)\r\n    };\r\n    \r\n    useEffect(() => {\r\n      const saveForm = async () => {\r\n        const postData = {\r\n          id: form.id,\r\n          product_id: form.product_id,\r\n          vendor_id: form.vendor_id,\r\n          steps: segments.map((segment, index) => ({\r\n            name: segment.name,\r\n            order: segment.order,\r\n            substeps: index === 1 ? rows.map((row) => {\r\n              const {\r\n                id,\r\n                technical_drawing_numbering,\r\n                tools,\r\n                description,\r\n                actual_dimension,\r\n                lower_tolerance,\r\n                upper_tolerance,\r\n                example_visual_url,\r\n                status,\r\n              } = row;\r\n              return {\r\n                ...(id && { id }),\r\n                technical_drawing_numbering,\r\n                tools,\r\n                description,\r\n                actual_dimension,\r\n                lower_tolerance,\r\n                upper_tolerance,\r\n                example_visual_url,\r\n                status,\r\n              };\r\n            }) : [],\r\n          })),\r\n        };\r\n  \r\n        try {\r\n          const response = await createOrUpdateForm(postData);\r\n          setFormSaved(true);\r\n        } catch (error) {\r\n          console.error('Error saving form:', error);\r\n        }\r\n      };\r\n  \r\n      if (formSaved) {\r\n        saveForm();\r\n      }\r\n    }, [formSaved]);\r\n\r\n    const handleSegmentClick = (order) => {\r\n      if (activeSegment === order) {\r\n        setActiveSegment(0);\r\n      } else {\r\n        setActiveSegment(order);\r\n      }\r\n    };\r\n    \r\n\r\n    const handleDragOver = (e) => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    const handleInputChange = (event, rowId, field) => {\r\n      const newValue = event.target.value;\r\n      setRows(rows.map(row => row.id === rowId ? {...row, [field]: newValue} : row));\r\n    };  \r\n\r\n    const handleDrop = (e, rowId) => {\r\n      e.preventDefault();\r\n      const file = e.dataTransfer.files[0];\r\n      if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n        // handleFileUpload fonksiyonunu çağırmak yerine input değişikliğini tetikleyin\r\n        handleInputChange({ target: { value: file } }, rowId, 'example_visual_url');\r\n      } else {\r\n        alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n      }\r\n    };\r\n    \r\n    const addRow = () => {\r\n      const newRow = {\r\n        id: null,\r\n        name: '',\r\n        technical_drawing_numbering: '',\r\n        tools: '',\r\n        description: '',\r\n        actual_dimension: '',\r\n        lower_tolerance: '',\r\n        upper_tolerance: '',\r\n      };\r\n      setRows([...rows, newRow]);\r\n    };\r\n  \r\n    \r\n    const handleFileUpload = (e, rowId) => {\r\n      const file = e.target.files[0];\r\n      console.log(`File uploaded for row: ${rowId}`);\r\n      console.log('File:', file);\r\n    };\r\n\r\n\r\n    const renderFinalPartMeasurement = () => {\r\n  \r\n    return (\r\n      <div>\r\n        <table className=\"measurement-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>İsim</th>\r\n              <th>Teknik Çizim Numarası</th>\r\n              <th>Kullanılan Aletler</th>\r\n              <th>Açıklama</th>\r\n              <th>Gerçek Boyut</th>\r\n              <th>Alt Tolerans</th>\r\n              <th>Üst Tolerans</th>\r\n              <th>Example Visual</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row) => (\r\n            <tr key={row.id}>\r\n                <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.name || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'name')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.technical_drawing_numbering || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'technical_drawing_numbering')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.tools || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'tools')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.description || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'description')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.actual_dimension || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'actual_dimension')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.lower_tolerance || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'lower_tolerance')}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                className='form-edit-text-box'\r\n                type=\"text\"\r\n                value={row.upper_tolerance || ''}\r\n                onChange={(e) => handleInputChange(e, row.id, 'upper_tolerance')}\r\n              />\r\n            </td>\r\n\r\n              <td>\r\n                <div\r\n                  className=\"dropzone\"\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={(e) => handleDrop(e, row.id)}\r\n                >\r\n                <input type=\"file\" onChange={handleCoverChange} />\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={handleAddRow}>Add Row</button>\r\n      <button onClick={saveForm}>Kaydet</button>\r\n\r\n      </div>\r\n    );\r\n  };\r\n    \r\n  const handleAddRow = (event) => {\r\n    event.preventDefault();\r\n    const newRow = {\r\n      id: null,\r\n      technical_drawing_numbering: '',\r\n      tools: '',\r\n      description: '',\r\n      actual_dimension: '',\r\n      lower_tolerance: '',\r\n      upper_tolerance: '',\r\n      example_visual_url: '',\r\n      status: '',\r\n    };\r\n    setRows([...rows, newRow]);\r\n  };\r\n  \r\n    \r\n    const handleRowChange = (index, field, value) => {\r\n    const updatedRows = rows.map((row, rowIndex) => {\r\n    if (index === rowIndex) {\r\n    return { ...row, [field]: value };\r\n    }\r\n    return row;\r\n    });\r\n    setRows(updatedRows);\r\n    };\r\n    \r\n    const handleDeleteRow = (index) => {\r\n    const updatedRows = rows.filter((row, rowIndex) => rowIndex !== index);\r\n    setRows(updatedRows);\r\n    };\r\n    \r\n    const handleSubmit = () => {\r\n    setFormSaved(true);\r\n    };\r\n    \r\n    return (\r\n      <div className='form-edit-main'>\r\n        <h2>Create New Form</h2>\r\n        <form>\r\n          {/* Render form elements */}\r\n          {formData && (\r\n            <div>\r\n              {/* Render input fields for formData */}\r\n            </div>\r\n          )}\r\n          <div>\r\n            <label htmlFor=\"product_id\">Product:</label>\r\n            <select\r\n              name=\"product_id\"\r\n              value={form.product_id}\r\n              onChange={handleFormChange}\r\n            >\r\n              <option value=\"\" disabled>Select a product</option>\r\n              {products.map((product) => (\r\n                <option key={product.id} value={product.id}>\r\n                  {product.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"vendor_id\">Vendor:</label>\r\n            <select\r\n              name=\"vendor_id\"\r\n              value={form.vendor_id}\r\n              onChange={handleFormChange}\r\n            >\r\n              <option value=\"\" disabled>Select a vendor</option>\r\n              {vendors.map((vendor) => (\r\n                <option key={vendor.id} value={vendor.id}>\r\n                  {vendor.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            {segments.map((segment) => (\r\n              <button\r\n                key={segment.order}\r\n                type=\"button\"\r\n                onClick={() => handleSegmentClick(segment.order)}\r\n              >\r\n                {segment.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          {/* Render segment content based on the activeSegment state */}\r\n          {activeSegment === 2 && renderFinalPartMeasurement()}\r\n\r\n          {/* Render other segments if needed */}\r\n        </form>\r\n      </div>\r\n    );\r\n    \r\n    };\r\n    \r\n    export default FormCreate;\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Users.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\CreateUser.js",["201","202","203","204","205"],[],"import React, { useState } from 'react';\r\nimport { createUser } from './Userapi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CreateUser.css';\r\nconst CreateUser = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [relatedCompany, setRelatedCompany] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const userData = {\r\n        email,\r\n        password,\r\n        phone,\r\n        role,\r\n        name,\r\n        username,\r\n        related_company: relatedCompany,\r\n      };\r\n      const newUser = await createUser(userData);\r\n      navigate(`/users`);\r\n    } catch (error) {\r\n      console.error('Kullanıcı oluşturulamadı:', error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"create-user-container\">\r\n    <form className=\"create-user-form\" onSubmit={handleSubmit}>\r\n      <h2>Kullanıcı Oluştur</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">İsim:</label>\r\n        <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"phone\">Telefon:</label>\r\n        <input type=\"tel\" id=\"phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      </div>\r\n      <button type=\"submit\">Kullanıcı Oluştur</button>\r\n    </form>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default CreateUser;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\FormsPage\\UploadForm.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\CreateWorkOrder.js",["206"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createWork, createWorkStep, getVendors, getCustomers, getUsers, getProducts, createWorkProduct } from './worksapi';\r\nimport \"./CreateWorkOrder.css\";\r\n\r\nconst CreateWorkOrder = () => {\r\n  const navigate = useNavigate();\r\n  const [workData, setWorkData] = useState({\r\n    order_number: \"\",\r\n    project_number: \"\",\r\n    vendor_id: \"\",\r\n    customer_id: \"\",\r\n    quality_responsible_id: \"\",\r\n    inspector_id: \"\",\r\n    foreman_id: \"\",\r\n    work_type: \"Order\",\r\n    state: \"\",\r\n    status: \"\",\r\n    creator_id: 1,\r\n    creation_date: new Date().toISOString(),\r\n  });\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [vendors, setVendors] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [qualityResponsibles, setQualityResponsibles] = useState([]);\r\n  const [inspectors, setInspectors] = useState([]);\r\n  const [foremen, setForemen] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n    fetchCustomers();\r\n    fetchUsers();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await getVendors(); // Adjust this with your API call\r\n      setVendors(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching vendors:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await getCustomers(); // Adjust this with your API call\r\n      setCustomers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers(); // Adjust this with your API call\r\n      const qualityRes = response.data.filter((user) => user.role === 'Quality Responsible');\r\n      const inspectorRes = response.data.filter((user) => user.role === 'Inspector');\r\n      const foremanRes = response.data.filter((user) => user.role === 'Foreman');\r\n      setQualityResponsibles(qualityRes);\r\n      setInspectors(inspectorRes);\r\n      setForemen(foremanRes);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await getProducts(); // Adjust this with your API call\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const handleProductChange = (e) => {\r\n    const selectedOptions = Array.from(e.target.selectedOptions);\r\n    setSelectedProducts(selectedOptions.map((option) => Number(option.value)));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setWorkData({ ...workData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const createdWork = await createWork(workData);\r\n      const workStepData = {\r\n        work_id: createdWork.work.id,\r\n        step_name: \"New Work\",\r\n        timestamp: new Date().toISOString(),\r\n        state: \"New Work\",\r\n        status: \"Open\",\r\n      };\r\n      const createdWorkStep = await createWorkStep(workStepData);\r\n      \r\n      for (const productId of selectedProducts) {\r\n        await createWorkProduct({ work_id: createdWork.work.id, product_id: productId });\r\n      }\r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      console.error('Error creating work and workstep:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-work-order\">\r\n      <h1>Create Work Order</h1>\r\n      <form onSubmit={handleSave}>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"order_number\">Order Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"order_number\"\r\n            id=\"order_number\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.order_number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"project_number\">Project Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"project_number\"\r\n            id=\"project_number\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.project_number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"vendor_id\">Vendor</label>\r\n          <select\r\n            name=\"vendor_id\"\r\n            id=\"vendor_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.vendor_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Vendor</option>\r\n            {vendors.map((vendor) => (\r\n              <option key={vendor.id} value={vendor.id}>\r\n                {vendor.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"customer_id\">Customer</label>\r\n          <select\r\n            name=\"customer_id\"\r\n            id=\"customer_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.customer_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Customer</option>\r\n            {customers.map((customer) => (\r\n              <option key={customer.id} value={customer.id}>\r\n                {customer.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"quality_responsible_id\">Quality Responsible</label>\r\n          <select\r\n            name=\"quality_responsible_id\"\r\n            id=\"quality_responsible_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.quality_responsible_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Quality Responsible</option>\r\n            {qualityResponsibles.map((qr) => (\r\n              <option key={qr.id} value={qr.id}>\r\n                {qr.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"inspector_id\">Inspector</label>\r\n          <select\r\n            name=\"inspector_id\"\r\n            id=\"inspector_id\"\r\n            className=\"cwo-form-control\"\r\n            value={workData.inspector_id}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Inspector</option>\r\n            {inspectors.map((inspector) => (\r\n              <option key={inspector.id} value={inspector.id}>\r\n                {inspector.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"cwo-form-group\">\r\n          <label htmlFor=\"foreman_id\">Foreman</label>\r\n<select\r\n         name=\"foreman_id\"\r\n         id=\"foreman_id\"\r\n         className=\"cwo-form-control\"\r\n         value={workData.foreman_id}\r\n         onChange={handleChange}\r\n       >\r\n<option value=\"\">Select Foreman</option>\r\n{foremen.map((foreman) => (\r\n<option key={foreman.id} value={foreman.id}>\r\n{foreman.name}\r\n</option>\r\n))}\r\n</select>\r\n</div>\r\n<div className=\"cwo-form-group\">\r\n<label htmlFor=\"product_id\">Product</label>\r\n<select\r\n    name=\"product_id\"\r\n    id=\"product_id\"\r\n    className=\"cwo-form-control\"\r\n    onChange={handleProductChange}\r\n>\r\n    <option value=\"\">Select Product</option>\r\n    {products.map((product) => (\r\n        <option key={product.id} value={product.id}>\r\n            {product.name}\r\n        </option>\r\n    ))}\r\n</select>\r\n</div>\r\n<div className=\"cwo-form-group\">\r\n      <label htmlFor=\"state\">State</label>\r\n      <input\r\n        type=\"text\" \r\n        name=\"state\"\r\n        id=\"state\"\r\n        className=\"cwo-form-control\"\r\n        value={workData.state}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </div>\r\n    <div className=\"cwo-form-group\">\r\n      <label htmlFor=\"status\">Status</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"status\"\r\n        id=\"status\"\r\n        className=\"cwo-form-control\"\r\n        value={workData.status}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </div>\r\n<button type=\"submit\" className=\"cwo-btn cwo-btn-primary\">\r\nSave Work Order\r\n</button>\r\n</form>\r\n</div>\r\n);\r\n};\r\n\r\nexport default CreateWorkOrder;","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\QualityControl.js",["207","208","209"],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\PageNotFound\\PageNotFound.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\RouteGuard\\RouteGuard.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\navbar\\HamburgerMenu.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Users\\Userapi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\worksapi.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\ITPForms\\formapi.js",["210"],[],"import axios from 'axios';\r\n\r\nconst FORMS_API_URL = 'http://localhost:3001/forms';\r\nconst VENDORS_API_URL = 'http://localhost:3001/vendors'; // Change this to the correct URL for fetching vendors\r\nconst PRODUCTS_API_URL = 'http://localhost:3001/products'; // Change this to the correct URL for fetching products\r\nconst API_URL = \"http://localhost:3001\";\r\n\r\n\r\nexport const getFormstable = async () => {\r\n  try {\r\n    const response = await axios.get(FORMS_API_URL);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Error fetching forms:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst FORMS_API_URL2 = 'http://localhost:3001/allforms';\r\n\r\nexport const getFormById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching form:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createOrUpdateForm = async (formData) => {\r\n  const apiUrl = 'http://localhost:3001/forms';\r\n\r\n  const body = {\r\n    ...formData,\r\n    steps: formData.steps.map((step, index) => ({\r\n      ...step,\r\n      substeps:\r\n        index === 1\r\n          ? step.substeps.map((substep) => {\r\n              if (substep.id) {\r\n                return substep;\r\n              } else {\r\n                const { id, ...rest } = substep;\r\n                return rest;\r\n              }\r\n            })\r\n          : [],\r\n    })),\r\n  };\r\n\r\n  if (formData.id) {\r\n    body.form_id = formData.id;\r\n  }\r\n\r\n  await fetch(apiUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n\r\n\r\nexport const getVendors = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/vendors`);\r\n    if (!response.ok) {\r\n      throw new Error(`Error fetching vendors: ${response.statusText}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getProducts = async () => {\r\n  try {\r\n    const response = await axios.get(PRODUCTS_API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching products: ${error.message}`);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Works\\ProductSegment.js",["211","212"],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\Charts\\Chart\\Chart.js",[],[],"C:\\Users\\AlperenAlihanEr\\portal-test\\client\\src\\components\\shared\\Popup\\ImagePopup.js",[],[],{"ruleId":"213","severity":1,"message":"214","line":7,"column":27,"nodeType":"215","messageId":"216","endLine":7,"endColumn":33},{"ruleId":"213","severity":1,"message":"217","line":7,"column":42,"nodeType":"215","messageId":"216","endLine":7,"endColumn":46},{"ruleId":"213","severity":1,"message":"218","line":8,"column":8,"nodeType":"215","messageId":"216","endLine":8,"endColumn":19},{"ruleId":"213","severity":1,"message":"219","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":12},{"ruleId":"213","severity":1,"message":"220","line":8,"column":14,"nodeType":"215","messageId":"216","endLine":8,"endColumn":19},{"ruleId":"213","severity":1,"message":"221","line":30,"column":9,"nodeType":"215","messageId":"216","endLine":30,"endColumn":21},{"ruleId":"213","severity":1,"message":"222","line":3,"column":35,"nodeType":"215","messageId":"216","endLine":3,"endColumn":41},{"ruleId":"223","severity":1,"message":"224","line":36,"column":9,"nodeType":"225","endLine":42,"endColumn":11},{"ruleId":"223","severity":1,"message":"224","line":46,"column":11,"nodeType":"225","endLine":50,"endColumn":13},{"ruleId":"213","severity":1,"message":"226","line":3,"column":64,"nodeType":"215","messageId":"216","endLine":3,"endColumn":86},{"ruleId":"213","severity":1,"message":"227","line":11,"column":10,"nodeType":"215","messageId":"216","endLine":11,"endColumn":17},{"ruleId":"213","severity":1,"message":"228","line":10,"column":10,"nodeType":"215","messageId":"216","endLine":10,"endColumn":18},{"ruleId":"213","severity":1,"message":"229","line":92,"column":13,"nodeType":"215","messageId":"216","endLine":92,"endColumn":24},{"ruleId":"213","severity":1,"message":"229","line":61,"column":13,"nodeType":"215","messageId":"216","endLine":61,"endColumn":24},{"ruleId":"213","severity":1,"message":"230","line":75,"column":9,"nodeType":"215","messageId":"216","endLine":75,"endColumn":27},{"ruleId":"213","severity":1,"message":"231","line":21,"column":10,"nodeType":"215","messageId":"216","endLine":21,"endColumn":23},{"ruleId":"232","severity":1,"message":"233","line":203,"column":5,"nodeType":"234","messageId":"235","endLine":207,"endColumn":7},{"ruleId":"213","severity":1,"message":"236","line":22,"column":10,"nodeType":"215","messageId":"216","endLine":22,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":48,"column":9,"nodeType":"215","messageId":"216","endLine":48,"endColumn":21},{"ruleId":"213","severity":1,"message":"238","line":75,"column":11,"nodeType":"215","messageId":"216","endLine":75,"endColumn":23},{"ruleId":"213","severity":1,"message":"239","line":126,"column":17,"nodeType":"215","messageId":"216","endLine":126,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":136,"column":8,"nodeType":"242","endLine":136,"endColumn":19,"suggestions":"243"},{"ruleId":"213","severity":1,"message":"244","line":167,"column":11,"nodeType":"215","messageId":"216","endLine":167,"endColumn":17},{"ruleId":"213","severity":1,"message":"245","line":182,"column":11,"nodeType":"215","messageId":"216","endLine":182,"endColumn":27},{"ruleId":"213","severity":1,"message":"246","line":303,"column":11,"nodeType":"215","messageId":"216","endLine":303,"endColumn":26},{"ruleId":"213","severity":1,"message":"247","line":313,"column":11,"nodeType":"215","messageId":"216","endLine":313,"endColumn":26},{"ruleId":"213","severity":1,"message":"221","line":318,"column":11,"nodeType":"215","messageId":"216","endLine":318,"endColumn":23},{"ruleId":"213","severity":1,"message":"248","line":8,"column":20,"nodeType":"215","messageId":"216","endLine":8,"endColumn":31},{"ruleId":"213","severity":1,"message":"249","line":10,"column":16,"nodeType":"215","messageId":"216","endLine":10,"endColumn":23},{"ruleId":"213","severity":1,"message":"250","line":12,"column":20,"nodeType":"215","messageId":"216","endLine":12,"endColumn":31},{"ruleId":"213","severity":1,"message":"251","line":13,"column":26,"nodeType":"215","messageId":"216","endLine":13,"endColumn":43},{"ruleId":"213","severity":1,"message":"252","line":28,"column":13,"nodeType":"215","messageId":"216","endLine":28,"endColumn":20},{"ruleId":"213","severity":1,"message":"253","line":98,"column":13,"nodeType":"215","messageId":"216","endLine":98,"endColumn":28},{"ruleId":"213","severity":1,"message":"254","line":8,"column":3,"nodeType":"215","messageId":"216","endLine":8,"endColumn":23},{"ruleId":"213","severity":1,"message":"255","line":14,"column":9,"nodeType":"215","messageId":"216","endLine":14,"endColumn":17},{"ruleId":"213","severity":1,"message":"256","line":20,"column":9,"nodeType":"215","messageId":"216","endLine":20,"endColumn":16},{"ruleId":"213","severity":1,"message":"257","line":4,"column":7,"nodeType":"215","messageId":"216","endLine":4,"endColumn":22},{"ruleId":"213","severity":1,"message":"258","line":9,"column":10,"nodeType":"215","messageId":"216","endLine":9,"endColumn":18},{"ruleId":"240","severity":1,"message":"259","line":52,"column":6,"nodeType":"242","endLine":52,"endColumn":28,"suggestions":"260"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Maintenance' is defined but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Marker' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'getQRQuestionsByWorkId' is defined but never used.","'product' is assigned a value but never used.","'products' is assigned a value but never used.","'newWorkStep' is assigned a value but never used.","'handleProductClick' is assigned a value but never used.","'imagePopupUrl' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'fileUrl' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'fetchVendors' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form.id', 'form.product_id', 'form.vendor_id', and 'rows'. Either include them or remove the dependency array.","ArrayExpression",["261"],"'addRow' is assigned a value but never used.","'handleFileUpload' is assigned a value but never used.","'handleRowChange' is assigned a value but never used.","'handleDeleteRow' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setRole' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setRelatedCompany' is assigned a value but never used.","'newUser' is assigned a value but never used.","'createdWorkStep' is assigned a value but never used.","'updateWorkStepStatus' is defined but never used.","'navigate' is assigned a value but never used.","'step_id' is assigned a value but never used.","'VENDORS_API_URL' is assigned a value but never used.","'formInfo' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'work_id'. Either include it or remove the dependency array.",["262"],{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [form.id, form.product_id, form.vendor_id, formSaved, rows]",{"range":"267","text":"268"},"Update the dependencies array to be: [vendorId, product.id, work_id]",{"range":"269","text":"270"},[3825,3836],"[form.id, form.product_id, form.vendor_id, formSaved, rows]",[2140,2162],"[vendorId, product.id, work_id]"]