{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtrce\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\ProductSegment.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes, faImage } from '@fortawesome/free-solid-svg-icons';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getFormByVendorIdAndProductId, getQualityControlEntriesByFormId, updateQualityControlEntry, getImagesByQualityControlId } from '././worksapi';\nimport ImagePopup from \"../shared/Popup/ImagePopup\";\nimport './ProductSegment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductSegment = _ref => {\n  _s();\n  let {\n    product,\n    vendorId,\n    work_id\n  } = _ref;\n  const [formInfo, setFormInfo] = useState(null);\n  const [formDetail, setFormDetail] = useState(null);\n  const [activeStep, setActiveStep] = useState(null);\n  const [measuredValues, setMeasuredValues] = useState({});\n  const [imagePopup, setImagePopup] = useState(false);\n  const [imagePopupUrl, setImagePopupUrl] = useState(\"\");\n  const [imageList, setImageList] = useState([]);\n  const openImagePopup = async substepId => {\n    const images = await fetchImages(substepId);\n    console.log(imgData.id);\n    if (images && images.data.length > 0) {\n      const imageList = images.data.map(imgData => ({\n        url: imgData.image_url,\n        id: imgData.id\n      }));\n      setImageList(imageList);\n      setImagePopup(true);\n    }\n  };\n  const fetchImages = async substepId => {\n    try {\n      const images = await getImagesByQualityControlId(substepId);\n      // console.log(\"Fetched Images:\", images); // Eklendi\n      return images;\n    } catch (error) {\n      // console.error(`Error fetching images by substep ID: ${error.message}`);\n      throw error;\n    }\n  };\n  const handleStepClick = stepOrder => {\n    setActiveStep(stepOrder);\n  };\n  const fetchForm = useCallback(async () => {\n    const form = await getFormByVendorIdAndProductId(vendorId, product.id);\n    setFormInfo(form);\n    if (form) {\n      const formDetails = await getQualityControlEntriesByFormId(form.form.id, work_id);\n      setFormDetail(formDetails);\n    }\n  }, [vendorId, product.id]);\n  useEffect(() => {\n    fetchForm();\n  }, [fetchForm]);\n  const handleMeasuredValueChange = (substepId, field, value) => {\n    setMeasuredValues({\n      ...measuredValues,\n      [substepId]: {\n        ...measuredValues[substepId],\n        [field]: value\n      }\n    });\n  };\n  const handleSaveClick = async () => {\n    const entriesToUpdate = Object.entries(measuredValues).filter(_ref2 => {\n      let [id, values] = _ref2;\n      return Object.values(values).some(value => value !== null && value !== '');\n    }).map(_ref3 => {\n      let [id, values] = _ref3;\n      return {\n        id,\n        ...values\n      };\n    });\n    try {\n      await updateQualityControlEntry(entriesToUpdate);\n      fetchForm();\n    } catch (error) {\n      // console.error('Ölçülen değerler güncellenirken hata:', error);\n    }\n  };\n  const checkTolerance = (substep, measuredValueKey) => {\n    var _measuredValues$subst;\n    const measuredValue = ((_measuredValues$subst = measuredValues[substep.id]) === null || _measuredValues$subst === void 0 ? void 0 : _measuredValues$subst[measuredValueKey]) || substep[measuredValueKey];\n    if (!measuredValue) {\n      return true;\n    }\n    const lowerTolerance = substep.lower_tolerance;\n    const upperTolerance = substep.upper_tolerance;\n    return measuredValue >= lowerTolerance && measuredValue <= upperTolerance;\n  };\n  const checkAllTolerances = substep => {\n    return checkTolerance(substep, 'measured_value_1') && checkTolerance(substep, 'measured_value_2') && checkTolerance(substep, 'measured_value_3');\n  };\n  const renderToleranceIcon = (substep, measuredValueKey) => {\n    if (checkTolerance(substep, measuredValueKey)) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderCellClass = (substep, measuredValueKey) => {\n    if (!checkTolerance(substep, measuredValueKey)) {\n      return 'cell-error';\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-segment\",\n    children: [imagePopup && /*#__PURE__*/_jsxDEV(ImagePopup, {\n      onClose: () => setImagePopup(false),\n      imageList: imageList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment-buttons\",\n        children: formDetail && formDetail.steps.map(step => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `product-segment-btn ${activeStep === step.order ? 'active' : ''}`,\n          onClick: () => handleStepClick(step.order),\n          children: step.name\n        }, step.order, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), formDetail && formDetail.steps.map(step => activeStep === step.order && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-5\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Tools\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Actual Dimension\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Lower Tolerance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Upper Tolerance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Sample Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Measured Value 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Measured Value 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-9\",\n                children: \"Measured Value 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-25\",\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"column-25\",\n                children: \"NOK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: step.substeps.map(substep => {\n              var _measuredValues$subst2, _measuredValues$subst3, _measuredValues$subst4;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => openImagePopup(substep.id),\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.technical_drawing_numbering\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.tools\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.actual_dimension\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.lower_tolerance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.upper_tolerance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.sample_quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: renderCellClass(substep, 'measured_value_1'),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: renderCellClass(substep, 'measured_value_1'),\n                    value: ((_measuredValues$subst2 = measuredValues[substep.id]) === null || _measuredValues$subst2 === void 0 ? void 0 : _measuredValues$subst2.measured_value_1) || substep.measured_value_1,\n                    onChange: e => handleMeasuredValueChange(substep.id, 'measured_value_1', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 29\n                  }, this), renderToleranceIcon(substep, 'measured_value_1')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: renderCellClass(substep, 'measured_value_2'),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: renderCellClass(substep, 'measured_value_1'),\n                    value: ((_measuredValues$subst3 = measuredValues[substep.id]) === null || _measuredValues$subst3 === void 0 ? void 0 : _measuredValues$subst3.measured_value_2) || substep.measured_value_2,\n                    onChange: e => handleMeasuredValueChange(substep.id, 'measured_value_2', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 29\n                  }, this), renderToleranceIcon(substep, 'measured_value_2')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: renderCellClass(substep, 'measured_value_3'),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: renderCellClass(substep, 'measured_value_1'),\n                    value: ((_measuredValues$subst4 = measuredValues[substep.id]) === null || _measuredValues$subst4 === void 0 ? void 0 : _measuredValues$subst4.measured_value_3) || substep.measured_value_3,\n                    onChange: e => handleMeasuredValueChange(substep.id, 'measured_value_3', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 29\n                  }, this), renderToleranceIcon(substep, 'measured_value_3')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: checkAllTolerances(substep) ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck,\n                    style: {\n                      color: \"green\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 31\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: !checkAllTolerances(substep) ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes,\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 31\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 27\n                }, this)]\n              }, substep.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveClick,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 19\n        }, this)]\n      }, step.order, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSegment, \"pJXo6xTB1ODayqVm75c02REtqtE=\");\n_c = ProductSegment;\nexport default ProductSegment;\nvar _c;\n$RefreshReg$(_c, \"ProductSegment\");","map":{"version":3,"names":["FontAwesomeIcon","faCheck","faTimes","faImage","React","useEffect","useState","useCallback","getFormByVendorIdAndProductId","getQualityControlEntriesByFormId","updateQualityControlEntry","getImagesByQualityControlId","ImagePopup","jsxDEV","_jsxDEV","ProductSegment","_ref","_s","product","vendorId","work_id","formInfo","setFormInfo","formDetail","setFormDetail","activeStep","setActiveStep","measuredValues","setMeasuredValues","imagePopup","setImagePopup","imagePopupUrl","setImagePopupUrl","imageList","setImageList","openImagePopup","substepId","images","fetchImages","console","log","imgData","id","data","length","map","url","image_url","error","handleStepClick","stepOrder","fetchForm","form","formDetails","handleMeasuredValueChange","field","value","handleSaveClick","entriesToUpdate","Object","entries","filter","_ref2","values","some","_ref3","checkTolerance","substep","measuredValueKey","_measuredValues$subst","measuredValue","lowerTolerance","lower_tolerance","upperTolerance","upper_tolerance","checkAllTolerances","renderToleranceIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","renderCellClass","children","onClose","description","steps","step","order","onClick","name","substeps","_measuredValues$subst2","_measuredValues$subst3","_measuredValues$subst4","icon","technical_drawing_numbering","tools","actual_dimension","sample_quantity","type","measured_value_1","onChange","e","target","measured_value_2","measured_value_3","style","color","_c","$RefreshReg$"],"sources":["C:/Users/mtrce/portal-test/client/src/components/Works/ProductSegment.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes, faImage } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { getFormByVendorIdAndProductId, getQualityControlEntriesByFormId, updateQualityControlEntry, getImagesByQualityControlId } from '././worksapi';\r\nimport ImagePopup from \"../shared/Popup/ImagePopup\";\r\nimport './ProductSegment.css';\r\n\r\nconst ProductSegment = ({ product, vendorId, work_id }) => {\r\n  const [formInfo, setFormInfo] = useState(null);\r\n  const [formDetail, setFormDetail] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(null);\r\n  const [measuredValues, setMeasuredValues] = useState({});\r\n  const [imagePopup, setImagePopup] = useState(false);\r\n  const [imagePopupUrl, setImagePopupUrl] = useState(\"\");\r\n  const [imageList, setImageList] = useState([]);\r\n\r\n  const openImagePopup = async (substepId) => {\r\n    const images = await fetchImages(substepId);\r\n          console.log(imgData.id)\r\n\r\n    if (images && images.data.length > 0) {\r\n      const imageList = images.data.map(imgData => ({\r\n        url: imgData.image_url,\r\n        id: imgData.id\r\n      }));\r\n      setImageList(imageList);\r\n      setImagePopup(true);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const fetchImages = async (substepId) => {\r\n    try {\r\n      const images = await getImagesByQualityControlId(substepId);\r\n      // console.log(\"Fetched Images:\", images); // Eklendi\r\n      return images;\r\n    } catch (error) {\r\n      // console.error(`Error fetching images by substep ID: ${error.message}`);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleStepClick = (stepOrder) => {\r\n    setActiveStep(stepOrder);\r\n  };\r\n\r\n  const fetchForm = useCallback(async () => {\r\n    const form = await getFormByVendorIdAndProductId(vendorId, product.id);\r\n    setFormInfo(form);\r\n\r\n    if (form) {\r\n      const formDetails = await getQualityControlEntriesByFormId(form.form.id, work_id);\r\n      setFormDetail(formDetails);\r\n    }\r\n  }, [vendorId, product.id]);\r\n\r\n  useEffect(() => {\r\n    fetchForm();\r\n  }, [fetchForm]);\r\n\r\n  const handleMeasuredValueChange = (substepId, field, value) => {\r\n    setMeasuredValues({\r\n      ...measuredValues,\r\n      [substepId]: {\r\n        ...measuredValues[substepId],\r\n        [field]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    const entriesToUpdate = Object.entries(measuredValues)\r\n      .filter(([id, values]) => Object.values(values).some((value) => value !== null && value !== ''))\r\n      .map(([id, values]) => ({\r\n        id,\r\n        ...values,\r\n      }));\r\n\r\n    try {\r\n      await updateQualityControlEntry(entriesToUpdate);\r\n      fetchForm();\r\n    } catch (error) {\r\n      // console.error('Ölçülen değerler güncellenirken hata:', error);\r\n    }\r\n  };\r\n\r\nconst checkTolerance = (substep, measuredValueKey) => {\r\n  const measuredValue = measuredValues[substep.id]?.[measuredValueKey] || substep[measuredValueKey];\r\n  if (!measuredValue) {\r\n    return true;\r\n  }\r\n\r\n  const lowerTolerance = substep.lower_tolerance;\r\n  const upperTolerance = substep.upper_tolerance;\r\n  return measuredValue >= lowerTolerance && measuredValue <= upperTolerance;\r\n};\r\n\r\n  const checkAllTolerances = (substep) => {\r\n    return (\r\n      checkTolerance(substep, 'measured_value_1') &&\r\n      checkTolerance(substep, 'measured_value_2') &&\r\n      checkTolerance(substep, 'measured_value_3')\r\n    );\r\n  };\r\n\r\n  const renderToleranceIcon = (substep, measuredValueKey) => {\r\n    if (checkTolerance(substep, measuredValueKey)) {\r\n      return <i className=\"fas fa-check\"></i>;\r\n    } else {\r\n      return <i className=\"fas fa-times\"></i>;\r\n    }\r\n  };\r\n\r\n  const renderCellClass = (substep, measuredValueKey) => {\r\n    if (!checkTolerance(substep, measuredValueKey)) {\r\n      return 'cell-error';\r\n    }\r\n    return '';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"product-segment\">\r\n      {imagePopup && <ImagePopup onClose={() => setImagePopup(false)} imageList={imageList} />}\r\n      <p>{product.description}</p>\r\n      <div>\r\n        <div className=\"segment-buttons\">\r\n          {formDetail &&\r\n            formDetail.steps.map((step) => (\r\n              <button \r\n                className={`product-segment-btn ${activeStep === step.order ? 'active' : ''}`}\r\n                key={step.order} \r\n                onClick={() => handleStepClick(step.order)}\r\n              >\r\n                {step.name}\r\n              </button>\r\n            ))}\r\n        </div>\r\n        {formDetail &&\r\n          formDetail.steps.map(\r\n            (step) =>\r\n              activeStep === step.order && (\r\n                <div key={step.order} className=\"segment-content\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"column-5\">Image</th>\r\n                        <th className=\"column-9\">Number</th>\r\n                        <th className=\"column-9\">Tools</th>\r\n                        <th className=\"column-9\">Description</th>\r\n                        <th className=\"column-9\">Actual Dimension</th>\r\n                        <th className=\"column-9\">Lower Tolerance</th>\r\n                        <th className=\"column-9\">Upper Tolerance</th>\r\n                        <th className=\"column-9\">Sample Quantity</th>\r\n                        <th className=\"column-9\">Measured Value 1</th>\r\n                        <th className=\"column-9\">Measured Value 2</th>\r\n                        <th className=\"column-9\">Measured Value 3</th>\r\n                        <th className=\"column-25\">OK</th>\r\n                        <th className=\"column-25\">NOK</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      \r\n                      {step.substeps.map((substep) => (\r\n                        <tr key={substep.id}>\r\n                          <td>\r\n                            <button onClick={() => openImagePopup(substep.id)}>\r\n                              <FontAwesomeIcon icon={faImage} />\r\n                            </button>\r\n                          </td>\r\n                          <td>{substep.technical_drawing_numbering}</td>\r\n                          <td>{substep.tools}</td>\r\n                          <td>{substep.description}</td>\r\n                          <td>{substep.actual_dimension}</td>\r\n                          <td>{substep.lower_tolerance}</td>\r\n                          <td>{substep.upper_tolerance}</td>\r\n                          <td>{substep.sample_quantity}</td>\r\n                          <td className={renderCellClass(substep, 'measured_value_1')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_1 || substep.measured_value_1}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_1', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_1')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_2')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_2 || substep.measured_value_2}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_2', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_2')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_3')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_3 || substep.measured_value_3}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_3', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_3')}\r\n                          </td>\r\n                          <td>\r\n                            {checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faCheck} style={{ color: \"green\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                          <td>\r\n                            {!checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faTimes} style={{ color: \"red\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <button onClick={handleSaveClick}>Save</button>\r\n                </div>\r\n              ),\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\n  export default ProductSegment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}