{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\VendorControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getWorkById, getQRQuestionsByWorkId } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VendorControl = () => {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  const [work, setWork] = useState(null);\n  const [qrQuestions, setQRQuestions] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\n      setQRQuestions(qrQuestionsData.data);\n    };\n    fetchData();\n  }, [work_id]);\n  const handleProceed = () => {\n    navigate('/qr-review');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vendor Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: qrQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check d-inline-block\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: `checkbox-${index}`,\n            checked: question.checkbox_vendor || false,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label d-inline-block\",\n          htmlFor: `checkbox-${index}`,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: `input-${index}`,\n          value: question.input_text_vendor || '',\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(VendorControl, \"O/YVHsLDhFSRvOu738tepnh2k3s=\", false, function () {\n  return [useLocation];\n});\n_c = VendorControl;\nexport default VendorControl;\nvar _c;\n$RefreshReg$(_c, \"VendorControl\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","getWorkById","getQRQuestionsByWorkId","jsxDEV","_jsxDEV","VendorControl","_s","location","searchParams","URLSearchParams","search","work_id","get","step_id","work","setWork","qrQuestions","setQRQuestions","fetchData","workData","qrQuestionsData","data","handleProceed","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","className","type","id","checked","checkbox_vendor","readOnly","htmlFor","value","input_text_vendor","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/VendorControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getWorkById, getQRQuestionsByWorkId } from './worksapi';\r\n\r\nconst VendorControl = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n  \r\n  const [work, setWork] = useState(null);\r\n  const [qrQuestions, setQRQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\r\n      setQRQuestions(qrQuestionsData.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const handleProceed = () => {\r\n    navigate('/qr-review');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Vendor Control</h2>\r\n      <form>\r\n        {qrQuestions.map((question, index) => (\r\n          <div key={index} className=\"form-group\">\r\n            <div className=\"form-check d-inline-block\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id={`checkbox-${index}`}\r\n                checked={question.checkbox_vendor || false}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <label className=\"form-check-label d-inline-block\" htmlFor={`checkbox-${index}`}>\r\n              {question.question}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id={`input-${index}`}\r\n              value={question.input_text_vendor || ''}\r\n              readOnly\r\n            />\r\n          </div>\r\n        ))}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VendorControl;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}