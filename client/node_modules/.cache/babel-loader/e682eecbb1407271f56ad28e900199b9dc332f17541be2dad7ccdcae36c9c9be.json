{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\Certificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { createWorkStep, updateWorkStepStatus } from './worksapi';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Certificate = _ref => {\n  _s();\n  let {\n    workId,\n    productId,\n    stepId\n  } = _ref;\n  const [file, setFile] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [work, setWork] = useState(null);\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\n      setQrQuestions(qrQuestionsData.data);\n    };\n    fetchData();\n  }, [location]);\n  const handleSend = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('certificate_file', file);\n      formData.append('work_id', workId);\n      formData.append('product_id', productId);\n      formData.append('step_id', stepId);\n      try {\n        await axios.post('/certificates', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // Update current work step status to 'Closed'\n    try {\n      await updateWorkStepStatus(stepId, 'Closed');\n    } catch (error) {\n      console.error(`Error updating work step status: ${error.message}`);\n    }\n    try {\n      const workStepData = {\n        work_id: work.data.id,\n        step_name: 'QR Certificate',\n        timestamp: new Date().toISOString(),\n        state: 'QR Certificate',\n        status: 'Open'\n      };\n      await createWorkStep(newWorkStepData);\n    } catch (error) {\n      console.error(`Error creating new work step: ${error.message}`);\n    }\n    navigate('/workorders');\n  };\n  const handleContinueWithoutSending = () => {\n    navigate('/workorders');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: \"btn btn-primary\",\n      children: \"G\\xF6nder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleContinueWithoutSending,\n      className: \"btn btn-secondary\",\n      children: \"G\\xF6ndermeden Devam Et\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Certificate, \"xRDvpamxDM8CLklovoWNY4F58pc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Certificate;\nexport default Certificate;\nvar _c;\n$RefreshReg$(_c, \"Certificate\");","map":{"version":3,"names":["React","useState","axios","createWorkStep","updateWorkStepStatus","useNavigate","useLocation","jsxDEV","_jsxDEV","Certificate","_ref","_s","workId","productId","stepId","file","setFile","location","navigate","work","setWork","searchParams","URLSearchParams","search","work_id","get","step_id","useEffect","fetchData","workData","getWorkById","qrQuestionsData","getQRQuestionsByWorkId","setQrQuestions","data","handleSend","formData","FormData","append","post","headers","error","console","message","workStepData","id","step_name","timestamp","Date","toISOString","state","status","newWorkStepData","handleContinueWithoutSending","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/Certificate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { createWorkStep, updateWorkStepStatus } from './worksapi';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst Certificate = ({ workId, productId, stepId }) => {\r\n  const [file, setFile] = useState(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\r\n      setQrQuestions(qrQuestionsData.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n  \r\n  const handleSend = async () => {\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('certificate_file', file);\r\n      formData.append('work_id', workId);\r\n      formData.append('product_id', productId);\r\n      formData.append('step_id', stepId);\r\n  \r\n      try {\r\n        await axios.post('/certificates', formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  \r\n    // Update current work step status to 'Closed'\r\n    try {\r\n      await updateWorkStepStatus(stepId, 'Closed');\r\n    } catch (error) {\r\n      console.error(`Error updating work step status: ${error.message}`);\r\n    }\r\n  \r\n    try {\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'QR Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'QR Certificate',\r\n        status: 'Open',\r\n      };\r\n      await createWorkStep(newWorkStepData);\r\n    } catch (error) {\r\n      console.error(`Error creating new work step: ${error.message}`);\r\n    }\r\n  \r\n    navigate('/workorders');\r\n  };\r\n\r\n  const handleContinueWithoutSending = () => {\r\n    navigate('/workorders');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2>Certificate</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleSend} className=\"btn btn-primary\">\r\n        Gönder\r\n      </button>\r\n      <button onClick={handleContinueWithoutSending} className=\"btn btn-secondary\">\r\n        Göndermeden Devam Et\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,YAAY;AACjE,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,WAAW,GAAGC,IAAA,IAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAAJ,IAAA;EAChD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMgB,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMoB,YAAY,GAAG,IAAIC,eAAe,CAACL,QAAQ,CAACM,MAAM,CAAC;EACzD,MAAMC,OAAO,GAAGH,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAC3C,MAAMC,OAAO,GAAGL,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAE3CE,SAAS,CAAC,MAAM;IACd,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACN,OAAO,CAAC;MAC3CJ,OAAO,CAACS,QAAQ,CAAC;MAEjB,MAAME,eAAe,GAAG,MAAMC,sBAAsB,CAACR,OAAO,CAAC;MAC7DS,cAAc,CAACF,eAAe,CAACG,IAAI,CAAC;IACtC,CAAC;IAEDN,SAAS,EAAE;EACb,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIpB,IAAI,EAAE;MACR,MAAMqB,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAEvB,IAAI,CAAC;MACzCqB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE1B,MAAM,CAAC;MAClCwB,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEzB,SAAS,CAAC;MACxCuB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAExB,MAAM,CAAC;MAElC,IAAI;QACF,MAAMZ,KAAK,CAACqC,IAAI,CAAC,eAAe,EAAEH,QAAQ,EAAE;UAC1CI,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;;IAEA;IACA,IAAI;MACF,MAAMrC,oBAAoB,CAACU,MAAM,EAAE,QAAQ,CAAC;IAC9C,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAE,oCAAmCA,KAAK,CAACE,OAAQ,EAAC,CAAC;IACpE;IAEA,IAAI;MACF,MAAMC,YAAY,GAAG;QACnBpB,OAAO,EAAEL,IAAI,CAACe,IAAI,CAACW,EAAE;QACrBC,SAAS,EAAE,gBAAgB;QAC3BC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnCC,KAAK,EAAE,gBAAgB;QACvBC,MAAM,EAAE;MACV,CAAC;MACD,MAAMhD,cAAc,CAACiD,eAAe,CAAC;IACvC,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAE,iCAAgCA,KAAK,CAACE,OAAQ,EAAC,CAAC;IACjE;IAEAzB,QAAQ,CAAC,aAAa,CAAC;EACzB,CAAC;EAED,MAAMmC,4BAA4B,GAAGA,CAAA,KAAM;IACzCnC,QAAQ,CAAC,aAAa,CAAC;EACzB,CAAC;EAED,oBACEV,OAAA;IAAK8C,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC/C,OAAA;MAAA+C,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpBnD,OAAA;MAAOoD,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAK9C,OAAO,CAAC8C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClEnD,OAAA;MAAQyD,OAAO,EAAE9B,UAAW;MAACmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTnD,OAAA;MAAQyD,OAAO,EAAEZ,4BAA6B;MAACC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAE7E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAAChD,EAAA,CA7EIF,WAAW;EAAA,QAEEH,WAAW,EACXD,WAAW;AAAA;AAAA6D,EAAA,GAHxBzD,WAAW;AA+EjB,eAAeA,WAAW;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}