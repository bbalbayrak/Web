{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\Certificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getWorkById, createWorkStep, updateWorkStepStatus, getQRQuestionsByWorkId } from './worksapi';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Certificate = _ref => {\n  _s();\n  let {\n    workId,\n    productId,\n    stepId\n  } = _ref;\n  const [file, setFile] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n  const [work, setWork] = useState(null);\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const work_id = searchParams.get('work_id');\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const productData = await getProductById(workData.data.product_id);\n      setProduct(productData);\n    };\n    fetchData();\n  }, [location]);\n  const handleSend = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('certificate_file', file);\n      formData.append('work_id', work_id);\n      formData.append('product_id', product.data.id);\n      formData.append('step_id', step_id);\n      try {\n        await axios.post('/certificates', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // Update current work step status to 'Closed'\n    // try {\n    //   await updateWorkStepStatus(step_id, 'Closed');\n    // } catch (error) {\n    //   console.error(`Error updating work step status: ${error.message}`);\n    // }\n\n    // try {\n    //   const workStepData = {\n    //     work_id: work.data.id,\n    //     step_name: 'QR Certificate',\n    //     timestamp: new Date().toISOString(),\n    //     state: 'QR Certificate',\n    //     status: 'Open',\n    //   };\n    //   await createWorkStep(workStepData);\n    // } catch (error) {\n    //   console.error(`Error creating new work step: ${error.message}`);\n    // }\n\n    // navigate('/workorders');\n  };\n\n  const handleContinueWithoutSending = () => {\n    navigate('/workorders');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: \"btn btn-primary\",\n      children: \"G\\xF6nder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleContinueWithoutSending,\n      className: \"btn btn-secondary\",\n      children: \"G\\xF6ndermeden Devam Et\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Certificate, \"rhESAyp6FJW3V9FrZ926L1qDcIs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Certificate;\nexport default Certificate;\nvar _c;\n$RefreshReg$(_c, \"Certificate\");","map":{"version":3,"names":["React","useState","useEffect","axios","getWorkById","createWorkStep","updateWorkStepStatus","getQRQuestionsByWorkId","useNavigate","useLocation","jsxDEV","_jsxDEV","Certificate","_ref","_s","workId","productId","stepId","file","setFile","location","navigate","product","setProduct","work","setWork","searchParams","URLSearchParams","search","work_id","get","step_id","fetchData","workData","productData","getProductById","data","product_id","handleSend","formData","FormData","append","id","post","headers","error","console","handleContinueWithoutSending","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/Certificate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {  getWorkById, createWorkStep,  updateWorkStepStatus,  getQRQuestionsByWorkId,} from './worksapi';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst Certificate = ({ workId, productId, stepId }) => {\r\n  const [file, setFile] = useState(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState(null);\r\n  const [work, setWork] = useState(null);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const work_id = searchParams.get('work_id');\r\n\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const productData = await getProductById(workData.data.product_id);\r\n      setProduct(productData);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n\r\n\r\n  const handleSend = async () => {\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('certificate_file', file);\r\n      formData.append('work_id', work_id);\r\n      formData.append('product_id', product.data.id);\r\n      formData.append('step_id', step_id);\r\n  \r\n      try {\r\n        await axios.post('/certificates', formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  \r\n    // Update current work step status to 'Closed'\r\n    // try {\r\n    //   await updateWorkStepStatus(step_id, 'Closed');\r\n    // } catch (error) {\r\n    //   console.error(`Error updating work step status: ${error.message}`);\r\n    // }\r\n  \r\n    // try {\r\n    //   const workStepData = {\r\n    //     work_id: work.data.id,\r\n    //     step_name: 'QR Certificate',\r\n    //     timestamp: new Date().toISOString(),\r\n    //     state: 'QR Certificate',\r\n    //     status: 'Open',\r\n    //   };\r\n    //   await createWorkStep(workStepData);\r\n    // } catch (error) {\r\n    //   console.error(`Error creating new work step: ${error.message}`);\r\n    // }\r\n  \r\n    // navigate('/workorders');\r\n  };\r\n\r\n  const handleContinueWithoutSending = () => {\r\n    navigate('/workorders');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2>Certificate</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleSend} className=\"btn btn-primary\">\r\n        Gönder\r\n      </button>\r\n      <button onClick={handleContinueWithoutSending} className=\"btn btn-secondary\">\r\n        Göndermeden Devam Et\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificate;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}