{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtrce\\\\portal-test\\\\client\\\\src\\\\components\\\\FormsPage\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [odooid, setOdooid] = useState('');\n  const [customerId, setCustomerId] = useState('');\n  const [technicalDrawingFile, setTechnicalDrawingFile] = useState(null);\n  const [guideFile, setGuideFile] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [customerNames, setCustomerNames] = useState([]);\n  useEffect(() => {\n    const fetchCustomerNames = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('http://localhost:3001/customers');\n        setCustomerNames(data.data.map(customer => customer.name));\n      } catch (error) {\n        console.error('Error fetching customer names:', error);\n      }\n    };\n    fetchCustomerNames();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('odooid', odooid);\n    formData.append('customerid', customerId);\n    formData.append('technicaldrawingurl', technicalDrawingFile);\n    formData.append('guideurl', guideFile);\n    try {\n      const {\n        data\n      } = await axios.post('http://localhost:3001/products', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setResponse(data);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0130sim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Odooid:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: odooid,\n          onChange: e => setOdooid(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"M\\xFC\\u015Fteri \\u0130simleri:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: customerId,\n          onChange: e => setCustomerId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"M\\xFC\\u015Fteri se\\xE7in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), customerNames.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: name,\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Teknik \\xC7izim (PDF):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: e => setTechnicalDrawingFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"K\\u0131lavuz (PDF, JPG):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf,.jpg,.jpeg\",\n          onChange: e => setGuideFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Response:\", response.data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Response:\", response.data.customerid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Response:\", response.data.guideurl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Response:\", response.data.technicaldrawingurl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"sGptdQ4PaUSwfkjJQ3TINFjwNiA=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UploadForm","_s","name","setName","odooid","setOdooid","customerId","setCustomerId","technicalDrawingFile","setTechnicalDrawingFile","guideFile","setGuideFile","response","setResponse","customerNames","setCustomerNames","fetchCustomerNames","data","get","map","customer","error","console","handleSubmit","e","preventDefault","formData","FormData","append","post","headers","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","accept","files","customerid","guideurl","technicaldrawingurl","_c","$RefreshReg$"],"sources":["C:/Users/mtrce/portal-test/client/src/components/FormsPage/UploadForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [odooid, setOdooid] = useState('');\r\n  const [customerId, setCustomerId] = useState('');\r\n  const [technicalDrawingFile, setTechnicalDrawingFile] = useState(null);\r\n  const [guideFile, setGuideFile] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const [customerNames, setCustomerNames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCustomerNames = async () => {\r\n      try {\r\n        const { data } = await axios.get('http://localhost:3001/customers');\r\n        setCustomerNames(data.data.map((customer) => customer.name));\r\n      } catch (error) {\r\n        console.error('Error fetching customer names:', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomerNames();\r\n  }, []);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('odooid', odooid);\r\n    formData.append('customerid', customerId);\r\n    formData.append('technicaldrawingurl', technicalDrawingFile);\r\n    formData.append('guideurl', guideFile);\r\n\r\n    try {\r\n      const { data } = await axios.post('http://localhost:3001/products', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setResponse(data);\r\n    } catch (error) {\r\n      console.error('Error uploading files:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Ä°sim:\r\n          <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Odooid:\r\n          <input type=\"text\" value={odooid} onChange={(e) => setOdooid(e.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          MÃ¼Återi Ä°simleri:\r\n          <select value={customerId} onChange={(e) => setCustomerId(e.target.value)}>\r\n            <option value=\"\">MÃ¼Återi seÃ§in</option>\r\n            {customerNames.map((name) => (\r\n              <option key={name} value={name}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Teknik Ãizim (PDF):\r\n          <input type=\"file\" accept=\".pdf\" onChange={(e) => setTechnicalDrawingFile(e.target.files[0])} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          KÄ±lavuz (PDF, JPG):\r\n          <input type=\"file\" accept=\".pdf,.jpg,.jpeg\" onChange={(e) => setGuideFile(e.target.files[0])} />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Kaydet</button>\r\n      </form>\r\n      {response && (\r\n        <div>\r\n          <h3>Response:{response.data.name}</h3>\r\n          <h3>Response:{response.data.customerid}</h3>\r\n          <h3>Response:{response.data.guideurl}</h3>\r\n          <h3>Response:{response.data.technicaldrawingurl}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}