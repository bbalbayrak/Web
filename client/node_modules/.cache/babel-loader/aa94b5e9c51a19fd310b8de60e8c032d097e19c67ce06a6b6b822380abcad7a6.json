{"ast":null,"code":"import axios from 'axios';\nconst FORMS_API_URL = 'https://portal-test.yenaengineering.nl/api/forms';\nconst PRODUCTS_API_URL = 'https://portal-test.yenaengineering.nl/api/products'; // Change this to the correct URL for fetching products\nconst API_URL = \"https://portal-test.yenaengineering.nl/api\";\nexport const getFormstable = async () => {\n  try {\n    const response = await axios.get(FORMS_API_URL);\n    return response.data.data;\n  } catch (error) {\n    // console.error('Error fetching forms:', error);\n    throw error;\n  }\n};\nconst FORMS_API_URL2 = 'https://portal-test.yenaengineering.nl/api/allforms';\nexport const getFormById = async id => {\n  try {\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\n    return response.data;\n  } catch (error) {\n    // console.error('Error fetching form:', error);\n    throw error;\n  }\n};\nexport const createOrUpdateForm = async formData => {\n  const apiUrl = 'https://portal-test.yenaengineering.nl/api/forms';\n  const body = {\n    ...formData,\n    steps: formData.steps.map((step, index) => ({\n      ...step,\n      substeps: index === 1 ? step.substeps.map(substep => {\n        if (substep.id) {\n          return substep;\n        } else {\n          const {\n            id,\n            ...rest\n          } = substep;\n          return rest;\n        }\n      }) : []\n    }))\n  };\n  if (formData.id) {\n    body.form_id = formData.id;\n  }\n  await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n};\nexport const getVendors = async () => {\n  try {\n    const response = await fetch(`${API_URL}/vendors`);\n    if (!response.ok) {\n      throw new Error(`Error fetching vendors: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    // console.error(error);\n    throw error;\n  }\n};\nexport const getProducts = async () => {\n  try {\n    const response = await axios.get(PRODUCTS_API_URL);\n    return response.data;\n  } catch (error) {\n    // console.error(`Error fetching products: ${error.message}`);\n    throw error;\n  }\n};\nexport const uploadImageToAzure = async (fileData, fileName) => {\n  const apiUrl = 'https://portal-test.yenaengineering.nl/api/forms/upload';\n  const formData = new FormData();\n  formData.append('file', fileData, fileName);\n  const response = await axios.post(apiUrl, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  if (response.status !== 200) {\n    throw new Error('Error uploading image to Azure');\n  }\n\n  // The response should contain the URL of the uploaded image\n  console.log(\"Front-End Image URL:\", response.data.url);\n  return response.data.url;\n};","map":{"version":3,"names":["axios","FORMS_API_URL","PRODUCTS_API_URL","API_URL","getFormstable","response","get","data","error","FORMS_API_URL2","getFormById","id","createOrUpdateForm","formData","apiUrl","body","steps","map","step","index","substeps","substep","rest","form_id","fetch","method","headers","JSON","stringify","getVendors","ok","Error","statusText","json","getProducts","uploadImageToAzure","fileData","fileName","FormData","append","post","status","console","log","url"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/ITPForms/formapi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst FORMS_API_URL = 'https://portal-test.yenaengineering.nl/api/forms';\r\nconst PRODUCTS_API_URL = 'https://portal-test.yenaengineering.nl/api/products'; // Change this to the correct URL for fetching products\r\nconst API_URL = \"https://portal-test.yenaengineering.nl/api\";\r\n\r\n\r\nexport const getFormstable = async () => {\r\n  try {\r\n    const response = await axios.get(FORMS_API_URL);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    // console.error('Error fetching forms:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst FORMS_API_URL2 = 'https://portal-test.yenaengineering.nl/api/allforms';\r\n\r\nexport const getFormById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    // console.error('Error fetching form:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createOrUpdateForm = async (formData) => {\r\n  const apiUrl = 'https://portal-test.yenaengineering.nl/api/forms';\r\n\r\n  const body = {\r\n    ...formData,\r\n    steps: formData.steps.map((step, index) => ({\r\n      ...step,\r\n      substeps:\r\n        index === 1\r\n          ? step.substeps.map((substep) => {\r\n              if (substep.id) {\r\n                return substep;\r\n              } else {\r\n                const { id, ...rest } = substep;\r\n                return rest;\r\n              }\r\n            })\r\n          : [],\r\n    })),\r\n  };\r\n\r\n  if (formData.id) {\r\n    body.form_id = formData.id;\r\n  }\r\n\r\n  await fetch(apiUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n\r\n\r\nexport const getVendors = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/vendors`);\r\n    if (!response.ok) {\r\n      throw new Error(`Error fetching vendors: ${response.statusText}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    // console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getProducts = async () => {\r\n  try {\r\n    const response = await axios.get(PRODUCTS_API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    // console.error(`Error fetching products: ${error.message}`);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const uploadImageToAzure = async (fileData, fileName) => {\r\n  const apiUrl = 'https://portal-test.yenaengineering.nl/api/forms/upload';\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', fileData, fileName);\r\n\r\n  const response = await axios.post(apiUrl, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n\r\n  if (response.status !== 200) {\r\n    throw new Error('Error uploading image to Azure');\r\n  }\r\n\r\n  // The response should contain the URL of the uploaded image\r\n  console.log(\"Front-End Image URL:\", response.data.url);\r\n  return response.data.url;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}