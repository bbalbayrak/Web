{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import'./Inspection.css';import{columns}from'./enumerated_inspection';import{getCloseInspectionPlans,getDescriptionControl,getAllUsers}from'./inspectionapi';import MultipleFilter from'../../functions/MultipleFilter';import{fetchItems,getUserNameById}from'./inspection_utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Inspection=function Inspection(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),inspectionPlans=_useState2[0],setInspectionPlans=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),descriptionControls=_useState4[0],setDescriptionControls=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),filters=_useState6[0],setFilters=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),users=_useState8[0],setUsers=_useState8[1];var addNewFilter=function addNewFilter(){setFilters(function(prevFilters){return[].concat(_toConsumableArray(prevFilters),[{id:Math.random().toString()}]);});};var handleFilterChange=function handleFilterChange(filterId,updatedFilter){setFilters(function(prevFilters){return prevFilters.map(function(filter){return filter.id===filterId?_objectSpread({id:filterId},updatedFilter):filter;});});};var applyFilters=function applyFilters(){return inspectionPlans.filter(function(plan){for(var i=0;i<filters.length;i++){var _filters$i=filters[i],column=_filters$i.column,query=_filters$i.query;if(!column||!query)continue;var columnValue=plan[column];if(!columnValue)return false;if(!columnValue.toString().toLowerCase().includes(query.toLowerCase()))return false;}return true;});};useEffect(function(){fetchItems(getCloseInspectionPlans,/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){var descriptionData,descriptionControls,_iterator,_step,desc,usersData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:data.sort(function(a,b){return a.order_number.localeCompare(b.order_number);});_context.next=3;return getDescriptionControl();case 3:descriptionData=_context.sent;descriptionControls={};_iterator=_createForOfIteratorHelper(descriptionData.data);try{for(_iterator.s();!(_step=_iterator.n()).done;){desc=_step.value;descriptionControls[desc.inspectionplan_id]=desc.description;}}catch(err){_iterator.e(err);}finally{_iterator.f();}setDescriptionControls(descriptionControls);setInspectionPlans(data);_context.next=11;return getAllUsers();case 11:usersData=_context.sent;setUsers(usersData);case 13:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());},[]);var filteredPlans=applyFilters();return/*#__PURE__*/_jsxs(\"div\",{className:\"inspection-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"inspection-title\",children:\"Inspection Plan\"}),filters.map(function(filter){return/*#__PURE__*/_jsx(MultipleFilter,{id:filter.id,columns:columns,onFilterChange:handleFilterChange},filter.id);}),/*#__PURE__*/_jsx(\"button\",{onClick:addNewFilter,children:\"Add filter\"}),/*#__PURE__*/_jsx(\"div\",{className:\"inspection-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"inspection-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map(function(column){return/*#__PURE__*/_jsx(\"th\",{children:column},column);})})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredPlans.map(function(plan){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:plan.vendor_name.substring(0,12)}),/*#__PURE__*/_jsx(\"td\",{children:plan.customer_name.substring(0,12)}),/*#__PURE__*/_jsx(\"td\",{children:plan.product_name}),/*#__PURE__*/_jsx(\"td\",{children:plan.order_number}),/*#__PURE__*/_jsx(\"td\",{children:plan.project_number}),/*#__PURE__*/_jsx(\"td\",{children:plan.quantity}),/*#__PURE__*/_jsx(\"td\",{children:plan.control_method}),/*#__PURE__*/_jsx(\"td\",{children:plan.control_type}),/*#__PURE__*/_jsx(\"td\",{children:getUserNameById(users,plan.control_responsible)}),/*#__PURE__*/_jsx(\"td\",{children:plan.control_date?new Date(plan.control_date).toLocaleDateString('tr-TR'):''}),/*#__PURE__*/_jsx(\"td\",{children:plan.note}),/*#__PURE__*/_jsx(\"td\",{children:descriptionControls[plan.id]}),/*#__PURE__*/_jsx(\"td\",{children:plan.delivery_date?new Date(plan.delivery_date).toLocaleDateString('tr-TR'):''}),/*#__PURE__*/_jsx(\"td\",{children:plan.status}),/*#__PURE__*/_jsx(\"td\",{children:plan.state})]},plan.id);})})]})})]});};export default Inspection;","map":{"version":3,"names":["React","useState","useEffect","columns","getCloseInspectionPlans","getDescriptionControl","getAllUsers","MultipleFilter","fetchItems","getUserNameById","jsx","_jsx","jsxs","_jsxs","Inspection","_useState","_useState2","_slicedToArray","inspectionPlans","setInspectionPlans","_useState3","_useState4","descriptionControls","setDescriptionControls","_useState5","_useState6","filters","setFilters","_useState7","_useState8","users","setUsers","addNewFilter","prevFilters","concat","_toConsumableArray","id","Math","random","toString","handleFilterChange","filterId","updatedFilter","map","filter","_objectSpread","applyFilters","plan","i","length","_filters$i","column","query","columnValue","toLowerCase","includes","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","descriptionData","_iterator","_step","desc","usersData","wrap","_callee$","_context","prev","next","sort","a","b","order_number","localeCompare","sent","_createForOfIteratorHelper","s","n","done","value","inspectionplan_id","description","err","e","f","stop","_x","apply","arguments","filteredPlans","className","children","onFilterChange","onClick","vendor_name","substring","customer_name","product_name","project_number","quantity","control_method","control_type","control_responsible","control_date","Date","toLocaleDateString","note","delivery_date","status","state"],"sources":["C:/Users/mtrce/portal-test/client/src/components/InspectionPlan/closedInspection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Inspection.css';\r\nimport { columns } from './enumerated_inspection';\r\nimport {\r\n  getCloseInspectionPlans,\r\n  getDescriptionControl,\r\n  getAllUsers \r\n} from './inspectionapi';\r\nimport MultipleFilter from '../../functions/MultipleFilter';\r\n\r\nimport {\r\n  fetchItems,\r\n  getUserNameById\r\n  } from './inspection_utils';\r\n\r\nconst Inspection = () => {\r\n  const [inspectionPlans, setInspectionPlans] = useState([]);\r\n  const [descriptionControls, setDescriptionControls] = useState({});\r\n  const [filters, setFilters] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const addNewFilter = () => {\r\n    setFilters(prevFilters => [\r\n      ...prevFilters,\r\n      { id: Math.random().toString() },\r\n    ]);\r\n  };\r\n\r\n  const handleFilterChange = (filterId, updatedFilter) => {\r\n    setFilters(prevFilters =>\r\n      prevFilters.map(filter =>\r\n        filter.id === filterId ? { id: filterId, ...updatedFilter } : filter\r\n      )\r\n    );\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    return inspectionPlans.filter(plan => {\r\n      for (let i = 0; i < filters.length; i++) {\r\n        const { column, query } = filters[i];\r\n\r\n        if (!column || !query) continue;\r\n\r\n        const columnValue = plan[column];\r\n        if (!columnValue) return false;\r\n\r\n        if (!columnValue.toString().toLowerCase().includes(query.toLowerCase()))\r\n          return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems(getCloseInspectionPlans, async (data) => {\r\n      data.sort((a, b) => a.order_number.localeCompare(b.order_number));\r\n\r\n      const descriptionData = await getDescriptionControl();\r\n      const descriptionControls = {};\r\n      for (let desc of descriptionData.data) {\r\n        descriptionControls[desc.inspectionplan_id] = desc.description;\r\n      }\r\n  \r\n      setDescriptionControls(descriptionControls); \r\n      setInspectionPlans(data);\r\n\r\n      const usersData = await getAllUsers();\r\n      setUsers(usersData);\r\n    });\r\n  }, []);\r\n\r\n  const filteredPlans = applyFilters();\r\n  \r\n  return (\r\n    <div className=\"inspection-container\">\r\n      <h1 className=\"inspection-title\">Inspection Plan</h1>\r\n\r\n      {filters.map(filter => (\r\n        <MultipleFilter\r\n          key={filter.id}\r\n          id={filter.id}\r\n          columns={columns}\r\n          onFilterChange={handleFilterChange}\r\n        />\r\n      ))}\r\n      <button onClick={addNewFilter}>Add filter</button>\r\n      \r\n      <div className=\"inspection-table-container\">\r\n        <table className=\"inspection-table\">\r\n          <thead>\r\n            <tr>\r\n              {columns.map(column => (\r\n                <th key={column}>{column}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredPlans.map(plan => (\r\n              <tr key={plan.id}>\r\n                <td>{plan.vendor_name.substring(0, 12)}</td>\r\n                <td>{plan.customer_name.substring(0, 12)}</td>\r\n                <td>{plan.product_name}</td>\r\n                <td>{plan.order_number}</td>\r\n                <td>{plan.project_number}</td>\r\n                <td>{plan.quantity}</td>\r\n                <td>{plan.control_method}</td>\r\n                <td>{plan.control_type}</td>\r\n                <td>{getUserNameById(users, plan.control_responsible)}</td>\r\n                <td>\r\n                  {plan.control_date\r\n                    ? new Date(plan.control_date).toLocaleDateString('tr-TR')\r\n                    : ''}\r\n                </td>\r\n                <td>{plan.note}</td>\r\n                <td>{descriptionControls[plan.id] }</td>\r\n                <td>\r\n                  {plan.delivery_date\r\n                    ? new Date(plan.delivery_date).toLocaleDateString('tr-TR')\r\n                    : ''}\r\n                </td>\r\n                <td>{plan.status}</td>\r\n                <td>{plan.state}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inspection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}