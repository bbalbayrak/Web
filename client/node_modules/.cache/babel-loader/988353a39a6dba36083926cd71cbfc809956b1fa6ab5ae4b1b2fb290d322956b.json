{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import'./Inspection.css';import{getAllInspectionPlans}from'./inspectionapi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Inspection=function Inspection(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),inspectionPlans=_useState2[0],setInspectionPlans=_useState2[1];var columns=['Vendor Name','Customer Name','Product Name','Order Number','Quantity','Mid Control Responsible','Mid Control Date','Final Control Responsible','Final Control Date','Delivery Date','Status','State'];useEffect(function(){fetchInspectionPlans();},[]);var fetchInspectionPlans=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getAllInspectionPlans();case 3:response=_context.sent;setInspectionPlans(response.inspectionPlans);console.log(response.inspectionPlans);_context.next=10;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);case 10:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function fetchInspectionPlans(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"inspection-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"inspection-title\",children:\"Inspection Plan\"}),/*#__PURE__*/_jsx(\"div\",{className:\"inspection-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"inspection-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map(function(column){return/*#__PURE__*/_jsx(\"th\",{children:column},column);})})}),/*#__PURE__*/_jsx(\"tbody\",{children:inspectionPlans.map(function(plan){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:plan.vendor_name}),/*#__PURE__*/_jsx(\"td\",{children:plan.customer_name}),/*#__PURE__*/_jsx(\"td\",{children:plan.product_name}),/*#__PURE__*/_jsx(\"td\",{children:plan.order_number}),/*#__PURE__*/_jsx(\"td\",{children:plan.quantity}),/*#__PURE__*/_jsx(\"td\",{children:plan.mid_control_responsible}),/*#__PURE__*/_jsx(\"td\",{children:plan.mid_control_date}),/*#__PURE__*/_jsx(\"td\",{children:plan.final_control_responsible}),/*#__PURE__*/_jsx(\"td\",{children:plan.final_control_date}),/*#__PURE__*/_jsx(\"td\",{children:plan.delivery_date}),/*#__PURE__*/_jsx(\"td\",{children:plan.status}),/*#__PURE__*/_jsx(\"td\",{children:plan.state})]},plan.id);})})]})})]});};export default Inspection;","map":{"version":3,"names":["React","useState","useEffect","getAllInspectionPlans","jsx","_jsx","jsxs","_jsxs","Inspection","_useState","_useState2","_slicedToArray","inspectionPlans","setInspectionPlans","columns","fetchInspectionPlans","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","console","log","t0","stop","apply","arguments","className","children","map","column","plan","vendor_name","customer_name","product_name","order_number","quantity","mid_control_responsible","mid_control_date","final_control_responsible","final_control_date","delivery_date","status","state","id"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/InspectionPlan/Inspection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Inspection.css';\r\nimport { getAllInspectionPlans } from './inspectionapi';\r\n\r\nconst Inspection = () => {\r\n  const [inspectionPlans, setInspectionPlans] = useState([]);\r\n\r\n  const columns = [\r\n    'Vendor Name',\r\n    'Customer Name',\r\n    'Product Name',\r\n    'Order Number',\r\n    'Quantity',\r\n    'Mid Control Responsible',\r\n    'Mid Control Date',\r\n    'Final Control Responsible',\r\n    'Final Control Date',\r\n    'Delivery Date',\r\n    'Status',\r\n    'State',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchInspectionPlans();\r\n  }, []);\r\n\r\n  const fetchInspectionPlans = async () => {\r\n    try {\r\n      const response = await getAllInspectionPlans();\r\n      setInspectionPlans(response.inspectionPlans);\r\n      console.log(response.inspectionPlans)\r\n    } catch (error) {\r\n      // console.error('Could not fetch inspection plans:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"inspection-container\">\r\n      <h1 className=\"inspection-title\">Inspection Plan</h1>\r\n      <div className=\"inspection-table-container\">\r\n        <table className=\"inspection-table\">\r\n          <thead>\r\n            <tr>\r\n              {columns.map(column => (\r\n                <th key={column}>{column}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inspectionPlans.map(plan => (\r\n              <tr key={plan.id}>\r\n                <td>{plan.vendor_name}</td>\r\n                <td>{plan.customer_name}</td>\r\n                <td>{plan.product_name}</td>\r\n                <td>{plan.order_number}</td>\r\n                <td>{plan.quantity}</td>\r\n                <td>{plan.mid_control_responsible}</td>\r\n                <td>{plan.mid_control_date}</td>\r\n                <td>{plan.final_control_responsible}</td>\r\n                <td>{plan.final_control_date}</td>\r\n                <td>{plan.delivery_date}</td>\r\n                <td>{plan.status}</td>\r\n                <td>{plan.state}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n  };\r\n  \r\n  export default Inspection;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}