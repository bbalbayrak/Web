{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\QMControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getWorkById, getProductById, postQRQuestions, createWorkStep, updateWorkStepStatus, getQRQuestionsByWorkId, updateQRQuestion } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QMControl = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [work, setWork] = useState(null);\n  const [qrQuestions, setQrQuestions] = useState([]);\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\n      setQrQuestions(qrQuestionsData.data);\n    };\n    fetchData();\n  }, [location]);\n  const handleSave = () => {\n    // Save işlemini gerçekleştirebilirsiniz\n  };\n  const handleInputChange = (index, value) => {\n    const newQRQuestions = [...qrQuestions];\n    newQRQuestions[index].input_text = value;\n    setQrQuestions(newQRQuestions);\n  };\n  const handleCheckboxChange = (index, checkboxType) => {\n    const newQRQuestions = [...qrQuestions];\n    newQRQuestions[index][checkboxType] = !newQRQuestions[index][checkboxType];\n    setQrQuestions(newQRQuestions);\n  };\n  const handleSend = async () => {\n    // ...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [qrQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `question-${index}`,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: `input-${index}`,\n          value: question.input_text,\n          onChange: e => handleInputChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: `yes-checkbox-${index}`,\n            checked: question.checkbox === true,\n            onChange: () => handleCheckboxChange(index, 'checkbox')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `yes-checkbox-${index}`,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: `no-checkbox-${index}`,\n            checked: question.checkbox === false,\n            onChange: () => handleCheckboxChange(index, 'checkbox')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `no-checkbox-${index}`,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSave,\n        className: \"btn btn-primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSend,\n        className: \"btn btn-success\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(QMControl, \"hWI4vnUYS6rHOoPGL4McHYB4Fvo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QMControl;\nexport default QMControl;\nvar _c;\n$RefreshReg$(_c, \"QMControl\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getWorkById","getProductById","postQRQuestions","createWorkStep","updateWorkStepStatus","getQRQuestionsByWorkId","updateQRQuestion","jsxDEV","_jsxDEV","QMControl","_s","location","navigate","work","setWork","qrQuestions","setQrQuestions","searchParams","URLSearchParams","search","work_id","get","step_id","fetchData","workData","qrQuestionsData","data","handleSave","handleInputChange","index","value","newQRQuestions","input_text","handleCheckboxChange","checkboxType","handleSend","children","map","question","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","target","checked","checkbox","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/QMControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  getWorkById,\r\n  getProductById,\r\n  postQRQuestions,\r\n  createWorkStep,\r\n  updateWorkStepStatus,\r\n  getQRQuestionsByWorkId,\r\n  updateQRQuestion\r\n} from './worksapi';\r\n\r\nconst QMControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [qrQuestions, setQrQuestions] = useState([]);\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\r\n      setQrQuestions(qrQuestionsData.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleInputChange = (index, value) => {\r\n    const newQRQuestions = [...qrQuestions];\r\n    newQRQuestions[index].input_text = value;\r\n    setQrQuestions(newQRQuestions);\r\n  };\r\n\r\n  const handleCheckboxChange = (index, checkboxType) => {\r\n    const newQRQuestions = [...qrQuestions];\r\n    newQRQuestions[index][checkboxType] = !newQRQuestions[index][checkboxType];\r\n    setQrQuestions(newQRQuestions);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    // ...\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ... */}\r\n      <form>\r\n        {qrQuestions.map((question, index) => (\r\n          <div key={question.id} className=\"form-group\">\r\n            <label htmlFor={`question-${index}`}>{question.question}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id={`input-${index}`}\r\n              value={question.input_text}\r\n              onChange={(e) => handleInputChange(index, e.target.value)}\r\n            />\r\n            <div className=\"form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id={`yes-checkbox-${index}`}\r\n                checked={question.checkbox === true}\r\n                onChange={() => handleCheckboxChange(index, 'checkbox')}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor={`yes-checkbox-${index}`}>\r\n                Yes\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id={`no-checkbox-${index}`}\r\n                checked={question.checkbox === false}\r\n                onChange={() => handleCheckboxChange(index, 'checkbox')}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor={`no-checkbox-${index}`}>\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleSave} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\" onClick={handleSend} className=\"btn btn-success\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QMControl;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}