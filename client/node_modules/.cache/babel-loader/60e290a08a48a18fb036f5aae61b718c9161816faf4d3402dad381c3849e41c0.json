{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouteGuard = _ref => {\n  _s();\n  let {\n    children,\n    setShowMenu\n  } = _ref;\n  let navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    let isAuthenticated = false;\n    if (token) {\n      const decodedToken = jwt_decode(token);\n      if (decodedToken.exp * 1000 > Date.now()) {\n        isAuthenticated = true;\n        setShowMenu(true);\n      } else {\n        isAuthenticated = false;\n        setShowMenu(false);\n      }\n    } else {\n      isAuthenticated = false;\n      setShowMenu(false);\n    }\n    if (!isAuthenticated) {\n      navigate(\"/login\");\n    }\n  }, [navigate, setShowMenu]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(RouteGuard, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = RouteGuard;\nexport default RouteGuard;\nvar _c;\n$RefreshReg$(_c, \"RouteGuard\");","map":{"version":3,"names":["React","useEffect","useNavigate","jwt_decode","Fragment","_Fragment","jsxDEV","_jsxDEV","RouteGuard","_ref","_s","children","setShowMenu","navigate","token","localStorage","getItem","isAuthenticated","decodedToken","exp","Date","now","_c","$RefreshReg$"],"sources":["C:/Users/mtrce/portal-test/client/src/components/RouteGuard/RouteGuard.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst RouteGuard = ({ children, setShowMenu }) => {\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    let isAuthenticated = false;\r\n\r\n    if (token) {\r\n      const decodedToken = jwt_decode(token);\r\n\r\n      if (decodedToken.exp * 1000 > Date.now()) {\r\n        isAuthenticated = true;\r\n        setShowMenu(true);\r\n      } else {\r\n        isAuthenticated = false;\r\n        setShowMenu(false);\r\n      }\r\n    } else {\r\n      isAuthenticated = false;\r\n      setShowMenu(false);\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate, setShowMenu]);\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default RouteGuard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGC,IAAA,IAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAH,IAAA;EAC3C,IAAII,QAAQ,GAAGX,WAAW,EAAE;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIC,eAAe,GAAG,KAAK;IAE3B,IAAIH,KAAK,EAAE;MACT,MAAMI,YAAY,GAAGf,UAAU,CAACW,KAAK,CAAC;MAEtC,IAAII,YAAY,CAACC,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE,EAAE;QACxCJ,eAAe,GAAG,IAAI;QACtBL,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLK,eAAe,GAAG,KAAK;QACvBL,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC,MAAM;MACLK,eAAe,GAAG,KAAK;MACvBL,WAAW,CAAC,KAAK,CAAC;IACpB;IAEA,IAAI,CAACK,eAAe,EAAE;MACpBJ,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,EAAED,WAAW,CAAC,CAAC;EAE3B,oBAAOL,OAAA,CAAAF,SAAA;IAAAM,QAAA,EAAGA;EAAQ,iBAAI;AACxB,CAAC;AAACD,EAAA,CA5BIF,UAAU;EAAA,QACCN,WAAW;AAAA;AAAAoB,EAAA,GADtBd,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}