{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\QRCertificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getWorkById, createWorkStep, updateWorkStepStatus, getProductById, getCertificatesByWorkId, getWorkProducts, getFormByVendorIdAndProductId, getFormByFormId, createQualityControlEntry } from './worksapi';\nimport \"./QRCertificate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCertificate = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [work, setWork] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [formInfo, setFormInfo] = useState(null);\n  const [formDetail, setFormDetail] = useState(null);\n  const [certificates, setCertificates] = useState([]);\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const productsData = await getWorkProducts(work_id);\n      if (productsData) {\n        const fetchedProducts = await Promise.all(productsData.data.map(async productData => {\n          const product = await getProductById(productData.product_id);\n\n          // form ve formDetails alınıyor\n          const form = await getFormByVendorIdAndProductId(workData.data.vendor_id, product.data.id);\n          setFormInfo(form);\n          if (form) {\n            const formDetails = await getFormByFormId(form.form.id);\n            setFormDetail(formDetails);\n          }\n          return product.data;\n        }));\n        setProducts(fetchedProducts);\n      }\n      const certificatesData = await getCertificatesByWorkId(work_id);\n      if (certificatesData) {\n        setCertificates(certificatesData.data);\n      }\n    };\n    fetchData();\n  }, [work_id]);\n  const sendSubstepData = async substep => {\n    const qualityControlData = {\n      form_id: formInfo.form.id,\n      substep_id: substep.id,\n      step_name: substep.step_name,\n      name: substep.name,\n      technical_drawing_numbering: substep.technical_drawing_numbering,\n      tools: substep.tools,\n      description: substep.description,\n      actual_dimension: substep.actual_dimension,\n      lower_tolerance: substep.lower_tolerance,\n      upper_tolerance: substep.upper_tolerance,\n      example_visual_url: substep.example_visual_url,\n      status: substep.status,\n      type: substep.type,\n      image_id: substep.id,\n      measured_value_1: null,\n      measured_value_2: null,\n      measured_value_3: null,\n      work_id: work.data.id,\n      sample_quantity: substep.sample_quantity\n    };\n    await createQualityControlEntry(qualityControlData);\n  };\n  const handleSend = async () => {\n    try {\n      // Yeni bir work step oluşturun\n      const workStepData = {\n        work_id: work.data.id,\n        step_name: 'Quality Control',\n        timestamp: new Date().toISOString(),\n        state: 'Quality Control',\n        status: 'Open'\n      };\n      const newWorkStep = await createWorkStep(workStepData);\n      if (formDetail && formDetail.steps) {\n        for (const step of formDetail.steps) {\n          if (step.substeps) {\n            for (const substep of step.substeps) {\n              await sendSubstepData(substep);\n            }\n          }\n        }\n      }\n      await updateWorkStepStatus(step_id, 'Closed');\n      navigate(`/workorders`);\n    } catch (error) {\n      // console.error('Error sending QR questions:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-form-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"qr-heading\",\n      children: \"QR Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-certificates-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"qr-subheading\",\n        children: \"Sertifikalar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"qr-certificates-list\",\n        children: certificates.map((certificate, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"qr-certificate-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: certificate.certificate_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"qr-certificate-link\",\n            children: certificate.certificate_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: \"qr-btn qr-btn-primary\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCertificate, \"HMq8e6+zin1OAZwpsA5qzIlGxyA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QRCertificate;\nexport default QRCertificate;\nvar _c;\n$RefreshReg$(_c, \"QRCertificate\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getWorkById","createWorkStep","updateWorkStepStatus","getProductById","getCertificatesByWorkId","getWorkProducts","getFormByVendorIdAndProductId","getFormByFormId","createQualityControlEntry","jsxDEV","_jsxDEV","QRCertificate","_s","location","navigate","work","setWork","products","setProducts","formInfo","setFormInfo","formDetail","setFormDetail","certificates","setCertificates","searchParams","URLSearchParams","search","work_id","get","step_id","fetchData","workData","productsData","fetchedProducts","Promise","all","data","map","productData","product","product_id","form","vendor_id","id","formDetails","certificatesData","sendSubstepData","substep","qualityControlData","form_id","substep_id","step_name","name","technical_drawing_numbering","tools","description","actual_dimension","lower_tolerance","upper_tolerance","example_visual_url","status","type","image_id","measured_value_1","measured_value_2","measured_value_3","sample_quantity","handleSend","workStepData","timestamp","Date","toISOString","state","newWorkStep","steps","step","substeps","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","certificate","index","href","certificate_url","target","rel","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/QRCertificate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {  getWorkById, createWorkStep,  updateWorkStepStatus, getProductById, getCertificatesByWorkId, getWorkProducts, getFormByVendorIdAndProductId, getFormByFormId, createQualityControlEntry } from './worksapi';\r\nimport \"./QRCertificate.css\"\r\n\r\nconst QRCertificate = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [formInfo, setFormInfo] = useState(null);\r\n  const [formDetail, setFormDetail] = useState(null);\r\n  const [certificates, setCertificates] = useState([]);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n  \r\n      const productsData = await getWorkProducts(work_id);\r\n  \r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductById(productData.product_id);\r\n  \r\n            // form ve formDetails alınıyor\r\n            const form = await getFormByVendorIdAndProductId(workData.data.vendor_id, product.data.id);\r\n            setFormInfo(form);\r\n  \r\n            if (form) {\r\n              const formDetails = await getFormByFormId(form.form.id);\r\n              setFormDetail(formDetails);\r\n            }\r\n  \r\n            return product.data;\r\n          })\r\n        );\r\n  \r\n        setProducts(fetchedProducts);\r\n      }\r\n      const certificatesData = await getCertificatesByWorkId(work_id);\r\n      if (certificatesData) {\r\n        setCertificates(certificatesData.data);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const sendSubstepData = async (substep) => {\r\n    const qualityControlData = {\r\n      form_id: formInfo.form.id,\r\n      substep_id: substep.id,\r\n      step_name: substep.step_name, \r\n      name: substep.name, \r\n      technical_drawing_numbering: substep.technical_drawing_numbering, \r\n      tools: substep.tools, \r\n      description: substep.description, \r\n      actual_dimension: substep.actual_dimension, \r\n      lower_tolerance: substep.lower_tolerance, \r\n      upper_tolerance: substep.upper_tolerance, \r\n      example_visual_url: substep.example_visual_url, \r\n      status: substep.status, \r\n      type: substep.type,\r\n      image_id: substep.id,\r\n      measured_value_1: null,\r\n      measured_value_2: null,\r\n      measured_value_3: null,\r\n      work_id: work.data.id,\r\n      sample_quantity: substep.sample_quantity\r\n    };\r\n  \r\n    await createQualityControlEntry(qualityControlData);\r\n  };\r\n  \r\n\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      // Yeni bir work step oluşturun\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Quality Control',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Quality Control',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n\r\n      if (formDetail && formDetail.steps) {\r\n        for (const step of formDetail.steps) {\r\n          if (step.substeps) {\r\n            for (const substep of step.substeps) {\r\n              await sendSubstepData(substep);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      // console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"qr-form-page-container\">\r\n      <h2 className=\"qr-heading\">QR Certificate</h2>\r\n      <div className=\"qr-certificates-container\">\r\n        <h3 className=\"qr-subheading\">Sertifikalar</h3>\r\n        <ul className=\"qr-certificates-list\">\r\n          {certificates.map((certificate, index) => (\r\n            <li key={index} className=\"qr-certificate-item\">\r\n              <a href={certificate.certificate_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"qr-certificate-link\">\r\n                {certificate.certificate_url}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <button onClick={handleSend} className=\"qr-btn qr-btn-primary\">\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCertificate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAAUC,WAAW,EAAEC,cAAc,EAAGC,oBAAoB,EAAEC,cAAc,EAAEC,uBAAuB,EAAEC,eAAe,EAAEC,6BAA6B,EAAEC,eAAe,EAAEC,yBAAyB,QAAQ,YAAY;AACrN,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,QAAQ,GAAGhB,WAAW,EAAE;EAC9B,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM6B,YAAY,GAAG,IAAIC,eAAe,CAACb,QAAQ,CAACc,MAAM,CAAC;EACzD,MAAMC,OAAO,GAAGH,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAC3C,MAAMC,OAAO,GAAGL,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAE3ChC,SAAS,CAAC,MAAM;IACd,MAAMkC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMhC,WAAW,CAAC4B,OAAO,CAAC;MAC3CZ,OAAO,CAACgB,QAAQ,CAAC;MAEjB,MAAMC,YAAY,GAAG,MAAM5B,eAAe,CAACuB,OAAO,CAAC;MAEnD,IAAIK,YAAY,EAAE;QAChB,MAAMC,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CACvCH,YAAY,CAACI,IAAI,CAACC,GAAG,CAAC,MAAOC,WAAW,IAAK;UAC3C,MAAMC,OAAO,GAAG,MAAMrC,cAAc,CAACoC,WAAW,CAACE,UAAU,CAAC;;UAE5D;UACA,MAAMC,IAAI,GAAG,MAAMpC,6BAA6B,CAAC0B,QAAQ,CAACK,IAAI,CAACM,SAAS,EAAEH,OAAO,CAACH,IAAI,CAACO,EAAE,CAAC;UAC1FxB,WAAW,CAACsB,IAAI,CAAC;UAEjB,IAAIA,IAAI,EAAE;YACR,MAAMG,WAAW,GAAG,MAAMtC,eAAe,CAACmC,IAAI,CAACA,IAAI,CAACE,EAAE,CAAC;YACvDtB,aAAa,CAACuB,WAAW,CAAC;UAC5B;UAEA,OAAOL,OAAO,CAACH,IAAI;QACrB,CAAC,CAAC,CACH;QAEDnB,WAAW,CAACgB,eAAe,CAAC;MAC9B;MACA,MAAMY,gBAAgB,GAAG,MAAM1C,uBAAuB,CAACwB,OAAO,CAAC;MAC/D,IAAIkB,gBAAgB,EAAE;QACpBtB,eAAe,CAACsB,gBAAgB,CAACT,IAAI,CAAC;MACxC;IACF,CAAC;IAEDN,SAAS,EAAE;EACb,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,MAAMmB,eAAe,GAAG,MAAOC,OAAO,IAAK;IACzC,MAAMC,kBAAkB,GAAG;MACzBC,OAAO,EAAE/B,QAAQ,CAACuB,IAAI,CAACE,EAAE;MACzBO,UAAU,EAAEH,OAAO,CAACJ,EAAE;MACtBQ,SAAS,EAAEJ,OAAO,CAACI,SAAS;MAC5BC,IAAI,EAAEL,OAAO,CAACK,IAAI;MAClBC,2BAA2B,EAAEN,OAAO,CAACM,2BAA2B;MAChEC,KAAK,EAAEP,OAAO,CAACO,KAAK;MACpBC,WAAW,EAAER,OAAO,CAACQ,WAAW;MAChCC,gBAAgB,EAAET,OAAO,CAACS,gBAAgB;MAC1CC,eAAe,EAAEV,OAAO,CAACU,eAAe;MACxCC,eAAe,EAAEX,OAAO,CAACW,eAAe;MACxCC,kBAAkB,EAAEZ,OAAO,CAACY,kBAAkB;MAC9CC,MAAM,EAAEb,OAAO,CAACa,MAAM;MACtBC,IAAI,EAAEd,OAAO,CAACc,IAAI;MAClBC,QAAQ,EAAEf,OAAO,CAACJ,EAAE;MACpBoB,gBAAgB,EAAE,IAAI;MACtBC,gBAAgB,EAAE,IAAI;MACtBC,gBAAgB,EAAE,IAAI;MACtBtC,OAAO,EAAEb,IAAI,CAACsB,IAAI,CAACO,EAAE;MACrBuB,eAAe,EAAEnB,OAAO,CAACmB;IAC3B,CAAC;IAED,MAAM3D,yBAAyB,CAACyC,kBAAkB,CAAC;EACrD,CAAC;EAID,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,YAAY,GAAG;QACnBzC,OAAO,EAAEb,IAAI,CAACsB,IAAI,CAACO,EAAE;QACrBQ,SAAS,EAAE,iBAAiB;QAC5BkB,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnCC,KAAK,EAAE,iBAAiB;QACxBZ,MAAM,EAAE;MACV,CAAC;MAED,MAAMa,WAAW,GAAG,MAAMzE,cAAc,CAACoE,YAAY,CAAC;MAEtD,IAAIhD,UAAU,IAAIA,UAAU,CAACsD,KAAK,EAAE;QAClC,KAAK,MAAMC,IAAI,IAAIvD,UAAU,CAACsD,KAAK,EAAE;UACnC,IAAIC,IAAI,CAACC,QAAQ,EAAE;YACjB,KAAK,MAAM7B,OAAO,IAAI4B,IAAI,CAACC,QAAQ,EAAE;cACnC,MAAM9B,eAAe,CAACC,OAAO,CAAC;YAChC;UACF;QACF;MACF;MAEA,MAAM9C,oBAAoB,CAAC4B,OAAO,EAAE,QAAQ,CAAC;MAE7ChB,QAAQ,CAAE,aAAY,CAAC;IACzB,CAAC,CAAC,OAAOgE,KAAK,EAAE;MACd;IAAA;EAEJ,CAAC;EAED,oBACEpE,OAAA;IAAKqE,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCtE,OAAA;MAAIqE,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9C1E,OAAA;MAAKqE,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCtE,OAAA;QAAIqE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC/C1E,OAAA;QAAIqE,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EACjCzD,YAAY,CAACe,GAAG,CAAC,CAAC+C,WAAW,EAAEC,KAAK,kBACnC5E,OAAA;UAAgBqE,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eAC7CtE,OAAA;YAAG6E,IAAI,EAAEF,WAAW,CAACG,eAAgB;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAACX,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAC5GK,WAAW,CAACG;UAAe;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAC1B,GAHGE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eACN1E,OAAA;MAAQiF,OAAO,EAAEvB,UAAW;MAACW,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAE/D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAACxE,EAAA,CA/HID,aAAa;EAAA,QACAZ,WAAW,EACXD,WAAW;AAAA;AAAA8F,EAAA,GAFxBjF,aAAa;AAiInB,eAAeA,aAAa;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}