{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/AlperenAlihanEr/portal-test/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{uploadImageToAzure}from\"./formapi\";export var addRow=function addRow(rows,setRows){return function(){var newRow={row_number:rows.length+1,name:'',technical_drawing_numbering:'',tools:'',description:'',actual_dimension:'',lower_tolerance:'',upper_tolerance:'',sample_quantity:'',example_visual_url:''};setRows([].concat(_toConsumableArray(rows),[newRow]));};};export var addPaintRow=function addPaintRow(rows,setPaintRows){return function(){var newRow={row_number:rows.length+1,name:'',technical_drawing_numbering:'',tools:'',description:'',actual_dimension:'',lower_tolerance:'',upper_tolerance:'',sample_quantity:'',example_visual_url:''};setPaintRows([].concat(_toConsumableArray(rows),[newRow]));};};export var addCoatingRow=function addCoatingRow(rows,setCoatingRows){return function(){var newRow={row_number:rows.length+1,name:'',technical_drawing_numbering:'',tools:'',description:'',actual_dimension:'',lower_tolerance:'',upper_tolerance:'',sample_quantity:'',example_visual_url:''};setCoatingRows([].concat(_toConsumableArray(rows),[newRow]));};};export var handleInputChange=function handleInputChange(rows,setRows){return function(e,rowNumber,key){var newRows=rows.map(function(row){if(row.row_number===rowNumber){return _objectSpread(_objectSpread({},row),{},_defineProperty({},key,e.target.value));}else{return row;}});setRows(newRows);};};export var handleDrop=function handleDrop(rows,setRows){return function(e,rowId){e.preventDefault();var file=e.dataTransfer.files[0];if(file&&(file.type==='image/png'||file.type==='image/jpeg')){handleFileUpload(rows,setRows)(file,rowId);}else{alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');}};};export var handleFileSelect=function handleFileSelect(rows,setRows){return function(e,rowId){var file=e.target.files[0];if(file&&(file.type==='image/png'||file.type==='image/jpeg')){handleFileUpload(rows,setRows)(file,rowId);}else{alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');}};};export var handleFileUpload=function handleFileUpload(rows,setRows){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(file,rowId){var imageUrl,newRows;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return uploadImageToAzure(file);case 3:imageUrl=_context.sent;newRows=rows.map(function(row){return row.row_number===rowId?_objectSpread(_objectSpread({},row),{},{example_visual_url:imageUrl}):row;});setRows(newRows);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(\"Error uploading file for row \".concat(rowId,\":\"),_context.t0.message,_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var createRowHandlers=function createRowHandlers(rows,setRows){return{addRow:addRow(rows,setRows),handleInputChange:handleInputChange(rows,setRows),handleDrop:handleDrop(rows,setRows),handleFileSelect:handleFileSelect(rows,setRows)};};","map":{"version":3,"names":["uploadImageToAzure","addRow","rows","setRows","newRow","row_number","length","name","technical_drawing_numbering","tools","description","actual_dimension","lower_tolerance","upper_tolerance","sample_quantity","example_visual_url","concat","_toConsumableArray","addPaintRow","setPaintRows","addCoatingRow","setCoatingRows","handleInputChange","e","rowNumber","key","newRows","map","row","_objectSpread","_defineProperty","target","value","handleDrop","rowId","preventDefault","file","dataTransfer","files","type","handleFileUpload","alert","handleFileSelect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imageUrl","wrap","_callee$","_context","prev","next","sent","t0","console","error","message","stop","_x","_x2","apply","arguments","createRowHandlers"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/PQC/rowDetail.js"],"sourcesContent":["import { uploadImageToAzure } from \"./formapi\";\r\n\r\nexport const addRow = (rows, setRows) => () => {\r\n  const newRow = {\r\n    row_number: rows.length + 1,\r\n    name: '',\r\n    technical_drawing_numbering: '',\r\n    tools: '',\r\n    description: '',\r\n    actual_dimension: '',\r\n    lower_tolerance: '',\r\n    upper_tolerance: '',\r\n    sample_quantity: '',\r\n    example_visual_url: '',\r\n  };\r\n  setRows([...rows, newRow]);\r\n};\r\n\r\nexport const addPaintRow = (rows, setPaintRows) => () => {\r\n  const newRow = {\r\n    row_number: rows.length + 1,\r\n    name: '',\r\n    technical_drawing_numbering: '',\r\n    tools: '',\r\n    description: '',\r\n    actual_dimension: '',\r\n    lower_tolerance: '',\r\n    upper_tolerance: '',\r\n    sample_quantity: '',\r\n    example_visual_url: '',\r\n  }\r\n  setPaintRows([...rows, newRow]);\r\n}\r\n\r\nexport const addCoatingRow = (rows, setCoatingRows) => () => {\r\n  const newRow = {\r\n    row_number: rows.length + 1,\r\n    name: '',\r\n    technical_drawing_numbering: '',\r\n    tools: '',\r\n    description: '',\r\n    actual_dimension: '',\r\n    lower_tolerance: '',\r\n    upper_tolerance: '',\r\n    sample_quantity: '',\r\n    example_visual_url: '',\r\n  }\r\n  setCoatingRows([...rows, newRow]);\r\n}\r\n\r\nexport const handleInputChange = (rows, setRows) => (e, rowNumber, key) => {\r\n  const newRows = rows.map(row => {\r\n    if (row.row_number === rowNumber) {\r\n      return { ...row, [key]: e.target.value };\r\n    } else {\r\n      return row;\r\n    }\r\n  });\r\n  setRows(newRows);\r\n};\r\n\r\nexport const handleDrop = (rows, setRows) => (e, rowId) => {\r\n  e.preventDefault();\r\n  const file = e.dataTransfer.files[0];\r\n  if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n    handleFileUpload(rows, setRows)(file, rowId);\r\n  } else {\r\n    alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n  }\r\n};\r\n\r\nexport const handleFileSelect = (rows, setRows) => (e, rowId) => {\r\n  const file = e.target.files[0];\r\n  if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n    handleFileUpload(rows, setRows)(file, rowId);\r\n  } else {\r\n    alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n  }\r\n};\r\n\r\nexport const handleFileUpload = (rows, setRows) => async (file, rowId) => {\r\n  try {\r\n    const imageUrl = await uploadImageToAzure(file);\r\n    const newRows = rows.map(row => row.row_number === rowId ? {...row, example_visual_url: imageUrl} : row);\r\n    setRows(newRows);\r\n  } catch (error) {\r\n    console.error(`Error uploading file for row ${rowId}:`, error.message, error);\r\n  }\r\n};\r\n\r\nexport const createRowHandlers = (rows, setRows) => ({\r\n  addRow: addRow(rows, setRows),\r\n  handleInputChange: handleInputChange(rows, setRows),\r\n  handleDrop: handleDrop(rows, setRows),\r\n  handleFileSelect: handleFileSelect(rows, setRows)\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}