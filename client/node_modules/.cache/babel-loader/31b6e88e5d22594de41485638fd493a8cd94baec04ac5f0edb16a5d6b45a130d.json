{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\QMControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getWorkById, getQRQuestionsByWorkId } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QMControl = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [work, setWork] = useState(null);\n  const [qrQuestions, setQrQuestions] = useState([]);\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\n      setQrQuestions(qrQuestionsData.data);\n    };\n    fetchData();\n  }, [location]);\n  const handleSave = () => {\n    // Save işlemini gerçekleştirebilirsiniz\n  };\n  const handleInputChange = (index, value) => {\n    const newQRQuestions = [...qrQuestions];\n    newQRQuestions[index].input_text_vendor = value;\n    setQRQuestions(newQRQuestions);\n  };\n  const handleCheckboxChange = index => {\n    const newQRQuestions = [...qrQuestions];\n    newQRQuestions[index].checkbox_vendor = !newQRQuestions[index].checkbox_vendor;\n    setQRQuestions(newQRQuestions);\n  };\n  const handleSend = async () => {\n    try {\n      // QR sorularını güncelle\n      await Promise.all(qrQuestions.map(async question => {\n        await updateQRQuestion(question.id, {\n          input_text_vendor: question.input_text_vendor,\n          checkbox_vendor: question.checkbox_vendor\n        });\n      }));\n\n      // Yeni bir work step oluştur\n      const workStepData = {\n        work_id: work.data.id,\n        step_name: 'Vendor Control',\n        timestamp: new Date().toISOString(),\n        state: 'Vendor Control',\n        status: 'Open'\n      };\n      const newWorkStep = await createWorkStep(workStepData);\n\n      // Vendor Control sayfasına yönlendir\n      navigate(`/vendor-control?work_id=${work.data.id}&step_id=${newWorkStep.workStep.id}`);\n    } catch (error) {\n      console.error('Error updating QR questions and creating work step:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), work && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Work Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Number: \", work.data.order_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Project Number: \", work.data.project_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product: \", work.data.product_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [qrQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `question-${index}`,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: `input-${index}`,\n          value: question.input_text_yena,\n          onChange: e => handleInputChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: `checkbox-${index}`,\n          checked: question.checkbox_yena,\n          onChange: () => handleCheckboxChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSave,\n        className: \"btn btn-primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSend,\n        className: \"btn btn-success\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(QMControl, \"hWI4vnUYS6rHOoPGL4McHYB4Fvo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QMControl;\nexport default QMControl;\nvar _c;\n$RefreshReg$(_c, \"QMControl\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getWorkById","getQRQuestionsByWorkId","jsxDEV","_jsxDEV","QMControl","_s","location","navigate","work","setWork","qrQuestions","setQrQuestions","searchParams","URLSearchParams","search","work_id","get","fetchData","workData","qrQuestionsData","data","handleSave","handleInputChange","index","value","newQRQuestions","input_text_vendor","setQRQuestions","handleCheckboxChange","checkbox_vendor","handleSend","Promise","all","map","question","updateQRQuestion","id","workStepData","step_name","timestamp","Date","toISOString","state","status","newWorkStep","createWorkStep","workStep","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","order_number","project_number","product_id","className","htmlFor","type","input_text_yena","onChange","e","target","checked","checkbox_yena","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/QMControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { getWorkById, getQRQuestionsByWorkId } from './worksapi';\r\n\r\nconst QMControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [qrQuestions, setQrQuestions] = useState([]);\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\r\n      setQrQuestions(qrQuestionsData.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n  const handleInputChange = (index, value) => {\r\n    const newQRQuestions = [...qrQuestions];\r\n    newQRQuestions[index].input_text_vendor = value;\r\n    setQRQuestions(newQRQuestions);\r\n  };\r\n  \r\n  const handleCheckboxChange = (index) => {\r\n    const newQRQuestions = [...qrQuestions];\r\n    newQRQuestions[index].checkbox_vendor = !newQRQuestions[index].checkbox_vendor;\r\n    setQRQuestions(newQRQuestions);\r\n  };\r\n  \r\n  const handleSend = async () => {\r\n    try {\r\n      // QR sorularını güncelle\r\n      await Promise.all(\r\n        qrQuestions.map(async (question) => {\r\n          await updateQRQuestion(question.id, {\r\n            input_text_vendor: question.input_text_vendor,\r\n            checkbox_vendor: question.checkbox_vendor,\r\n          });\r\n        })\r\n      );\r\n  \r\n      // Yeni bir work step oluştur\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Vendor Control',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Vendor Control',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n  \r\n      // Vendor Control sayfasına yönlendir\r\n      navigate(`/vendor-control?work_id=${work.data.id}&step_id=${newWorkStep.workStep.id}`);\r\n    } catch (error) {\r\n      console.error('Error updating QR questions and creating work step:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>QM Control</h2>\r\n      {work && (\r\n        <div>\r\n          <h3>Work Details</h3>\r\n          <p>Order Number: {work.data.order_number}</p>\r\n          <p>Project Number: {work.data.project_number}</p>\r\n          <p>Product: {work.data.product_id}</p>\r\n          {/* Diğer iş detaylarını istediğiniz şekilde burada gösterebilirsiniz */}\r\n        </div>\r\n      )}\r\n      <form>\r\n        {qrQuestions.map((question, index) => (\r\n          <div key={question.id} className=\"form-group\">\r\n            <label htmlFor={`question-${index}`}>\r\n              {question.question}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id={`input-${index}`}\r\n              value={question.input_text_yena}\r\n              onChange={(e) => handleInputChange(index, e.target.value)}\r\n            />\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id={`checkbox-${index}`}\r\n              checked={question.checkbox_yena}\r\n              onChange={() => handleCheckboxChange(index)}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleSave} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\" onClick={handleSend} className=\"btn btn-success\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default QMControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}