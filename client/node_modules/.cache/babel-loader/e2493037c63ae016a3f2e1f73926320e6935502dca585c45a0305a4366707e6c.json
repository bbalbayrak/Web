{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\NewWork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getWorkById, getProductById, getWorkProducts, postQRQuestions, createWorkStep, updateWorkStepStatus } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRControl = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [work, setWork] = useState(null);\n  const [products, setProducts] = useState([]);\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const productsData = await getWorkProducts(work_id);\n      if (productsData) {\n        const fetchedProducts = await Promise.all(productsData.data.map(async productData => {\n          const product = await getProductById(productData.product_id);\n          return product.data;\n        }));\n      }\n    };\n    fetchData();\n  }, [work_id]);\n  const handleCheck = (productIndex, index, value) => {\n    const newProducts = [...products];\n    const currentBox = {\n      ...newProducts[productIndex].checkedBoxes[index]\n    };\n    if (value === \"yes\" || value === \"no\") {\n      currentBox.yes = value === \"yes\";\n      currentBox.no = value === \"no\";\n    } else {\n      currentBox.active = !currentBox.active;\n    }\n    newProducts[productIndex].checkedBoxes[index] = currentBox;\n    setProducts(newProducts);\n  };\n  const handleInputChange = (productIndex, index, value) => {\n    const newProducts = [...products];\n    newProducts[productIndex].inputValues[index] = value;\n    setProducts(newProducts);\n  };\n  const handleSave = () => {\n    // Save işlemini gerçekleştirebilirsiniz\n  };\n  const handleSend = async () => {\n    try {\n      // Yeni bir work step oluşturun\n      const workStepData = {\n        work_id: work.data.id,\n        step_name: 'Certificate',\n        timestamp: new Date().toISOString(),\n        state: 'Certificate',\n        status: 'Open'\n      };\n      const newWorkStep = await createWorkStep(workStepData);\n      await updateWorkStepStatus(step_id, 'Closed');\n      navigate(`/workorders`);\n    } catch (error) {\n      console.error('Error sending QR questions:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), work && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Work Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Number: \", work.data.order_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Project Number: \", work.data.project_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), products && products.map((product, productIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Product: \", product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Technical Drawing URL: \", product.technicaldrawingurl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, productIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSave,\n      className: \"btn btn-primary\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSend,\n      className: \"btn btn-success\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(QRControl, \"+ZWEh6Igfyko731tIyKxMW3yO+w=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QRControl;\nexport default QRControl;\nvar _c;\n$RefreshReg$(_c, \"QRControl\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getWorkById","getProductById","getWorkProducts","postQRQuestions","createWorkStep","updateWorkStepStatus","jsxDEV","_jsxDEV","QRControl","_s","location","navigate","work","setWork","products","setProducts","searchParams","URLSearchParams","search","work_id","get","step_id","fetchData","workData","productsData","fetchedProducts","Promise","all","data","map","productData","product","product_id","handleCheck","productIndex","index","value","newProducts","currentBox","checkedBoxes","yes","no","active","handleInputChange","inputValues","handleSave","handleSend","workStepData","id","step_name","timestamp","Date","toISOString","state","status","newWorkStep","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","order_number","project_number","name","technicaldrawingurl","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/NewWork.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  getWorkById,\r\n  getProductById,\r\n  getWorkProducts,\r\n  postQRQuestions,\r\n  createWorkStep,\r\n  updateWorkStepStatus,\r\n} from './worksapi';\r\n\r\nconst QRControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const productsData = await getWorkProducts(work_id);\r\n\r\n      if (productsData) {\r\n        const fetchedProducts = await Promise.all(\r\n          productsData.data.map(async (productData) => {\r\n            const product = await getProductById(productData.product_id);\r\n            return product.data;\r\n          })\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const handleCheck = (productIndex, index, value) => {\r\n    const newProducts = [...products];\r\n    const currentBox = { ...newProducts[productIndex].checkedBoxes[index] };\r\n\r\n    if (value === \"yes\" || value === \"no\") {\r\n      currentBox.yes = value === \"yes\";\r\n      currentBox.no = value === \"no\";\r\n    } else {\r\n      currentBox.active = !currentBox.active;\r\n    }\r\n\r\n    newProducts[productIndex].checkedBoxes[index] = currentBox;\r\n    setProducts(newProducts);\r\n  };\r\n\r\n  const handleInputChange = (productIndex, index, value) => {\r\n    const newProducts = [...products];\r\n    newProducts[productIndex].inputValues[index] = value;\r\n    setProducts(newProducts);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      // Yeni bir work step oluşturun\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Certificate',\r\n        status: 'Open',\r\n      };\r\n\r\n      const newWorkStep = await createWorkStep(workStepData);\r\n  \r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2>QR Control</h2>\r\n      {work && (\r\n        <div>\r\n          <h3>Work Details</h3>\r\n          <p>Order Number: {work.data.order_number}</p>\r\n          <p>Project Number: {work.data.project_number}</p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n      {products &&\r\n        products.map((product, productIndex) => (\r\n          <div key={productIndex}>\r\n            <h3>Product: {product.name}</h3>\r\n            <p>Technical Drawing URL: {product.technicaldrawingurl}</p>\r\n          </div>\r\n            )\r\n          )\r\n        }\r\n      <button type=\"button\" onClick={handleSave} className=\"btn btn-primary\">\r\n        Save\r\n      </button>\r\n      <button type=\"button\" onClick={handleSend} className=\"btn btn-success\">\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRControl;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}