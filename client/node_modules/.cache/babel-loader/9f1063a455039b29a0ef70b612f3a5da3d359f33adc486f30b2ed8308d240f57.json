{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtrce\\\\portal-test\\\\client\\\\src\\\\components\\\\Transfers\\\\TransfersDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport { getAllLocations } from './TransfersApi';\nimport { LatLngBounds } from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransfersDetail = () => {\n  _s();\n  const {\n    name: encodedName\n  } = useParams();\n  const name = decodeURIComponent(encodedName);\n  const [locations, setLocations] = useState([]);\n  const [filteredLocations, setFilteredLocations] = useState([]);\n  const maxBounds = new LatLngBounds([-90, -180],\n  // Güneybatı köşe koordinatları\n  [90, 180] // Kuzeydoğu köşe koordinatları\n  );\n\n  useEffect(() => {\n    getAllLocations().then(response => {\n      if (response && response.location) {\n        setLocations(response.location);\n      } else {\n        console.error(\"Response or response.location is null\");\n      }\n    }).catch(err => console.error(err));\n  }, [name]);\n  useEffect(() => {\n    if (locations.length) {\n      const filtered = locations.find(location => location.name === name);\n      if (filtered) {\n        setFilteredLocations(filtered.locations);\n      }\n    }\n  }, [locations, name]);\n  console.log(\"deneme31\", locations);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [51.505, -0.09],\n    zoom: 1,\n    minZoom: 2,\n    maxZoom: 17,\n    maxBounds: maxBounds // Harita sınırlarını ayarlayın\n    ,\n    maxBoundsViscosity: 1 // Harita sınırlarına yapışkanlık (1: tam sınırlama)\n    ,\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), filteredLocations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [location.atitude, location.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(parseInt(location)).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: filteredLocations.map(loc => [loc.atitude, loc.longitude]),\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TransfersDetail, \"XWW+B0I9MsriXttgGd/z04tQ7Gw=\", false, function () {\n  return [useParams];\n});\n_c = TransfersDetail;\nexport default TransfersDetail;\nvar _c;\n$RefreshReg$(_c, \"TransfersDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","MapContainer","TileLayer","Marker","Popup","Polyline","getAllLocations","LatLngBounds","jsxDEV","_jsxDEV","TransfersDetail","_s","name","encodedName","decodeURIComponent","locations","setLocations","filteredLocations","setFilteredLocations","maxBounds","then","response","location","console","error","catch","err","length","filtered","find","log","center","zoom","minZoom","maxZoom","maxBoundsViscosity","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","index","position","atitude","longitude","Date","parseInt","toLocaleString","positions","loc","color","_c","$RefreshReg$"],"sources":["C:/Users/mtrce/portal-test/client/src/components/Transfers/TransfersDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport { getAllLocations } from './TransfersApi';\r\nimport { LatLngBounds } from 'leaflet';\r\n\r\nconst TransfersDetail = () => {\r\n  const { name: encodedName } = useParams();\r\n  const name = decodeURIComponent(encodedName);\r\n\r\n  const [locations, setLocations] = useState([]);\r\n  const [filteredLocations, setFilteredLocations] = useState([]);\r\n  const maxBounds = new LatLngBounds(\r\n    [-90, -180], // Güneybatı köşe koordinatları\r\n    [90, 180]    // Kuzeydoğu köşe koordinatları\r\n    \r\n  );\r\n  useEffect(() => {\r\n    getAllLocations()\r\n      .then(response => {\r\n        if (response && response.location) {\r\n          setLocations(response.location);\r\n        } else {\r\n          console.error(\"Response or response.location is null\");\r\n        }\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    if (locations.length) {\r\n      const filtered = locations.find((location) => location.name === name);\r\n      if (filtered) {\r\n        setFilteredLocations(filtered.locations);\r\n      }\r\n    }\r\n  }, [locations, name]);\r\n  console.log(\"deneme31\" , locations)\r\n  return (\r\n    <MapContainer\r\n      center={[51.505, -0.09]}\r\n      zoom={1}\r\n      minZoom={2}\r\n      maxZoom={17}\r\n      maxBounds={maxBounds} // Harita sınırlarını ayarlayın\r\n      maxBoundsViscosity={1} // Harita sınırlarına yapışkanlık (1: tam sınırlama)\r\n      style={{ height: \"100vh\", width: \"100%\" }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n\r\n{filteredLocations.map((location, index) => (\r\n  <Marker key={index} position={[location.atitude, location.longitude]}>\r\n        <Popup>\r\n        <strong>{location.name}</strong> <br />\r\n        <small>{new Date(parseInt(location)).toLocaleString()}</small>\r\n        </Popup>\r\n\r\n  </Marker>\r\n))}\r\n\r\n\r\n\r\n      <Polyline positions={filteredLocations.map(loc => [loc.atitude, loc.longitude])} color='red' />\r\n\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default TransfersDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}