{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\QRControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getWorkById } from './worksapi';\nimport { getProductById } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRControl = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [work, setWork] = useState(null);\n  const [product, setProduct] = useState(null);\n  const [checkedBoxes, setCheckedBoxes] = useState(new Array(10).fill(false));\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const work_id = searchParams.get('work_id');\n    const step_id = searchParams.get('step_id');\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const productData = await getProductById(workData.data.product_id);\n      setProduct(productData);\n    };\n    fetchData();\n  }, [location]);\n  const handleCheck = index => {\n    const newCheckedBoxes = new Array(10).fill(false);\n    newCheckedBoxes[index] = !checkedBoxes[index];\n    setCheckedBoxes(newCheckedBoxes);\n  };\n  const handleSave = () => {\n    // Save işlemini gerçekleştirebilirsiniz\n  };\n  const handleSend = () => {\n    navigate('/qm-control');\n  };\n  const handleRevise = () => {\n    // Revize işlemini gerçekleştirebilirsiniz\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), work && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Work Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Number: \", work.data.order_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Project Number: \", work.data.project_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product: \", work.data.product_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), product && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Product Technical Drawing URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.data.technicaldrawingurl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [checkedBoxes.map((isChecked, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: `question-${index}`,\n          checked: isChecked,\n          onChange: () => handleCheck(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `question-${index}`,\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"btn btn-primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"btn btn-success\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRevise,\n        className: \"btn btn-warning\",\n        children: \"Revize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(QRControl, \"m8IZsMFgFcCEtry52+YR0ihceIs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QRControl;\nexport default QRControl;\nvar _c;\n$RefreshReg$(_c, \"QRControl\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getWorkById","getProductById","jsxDEV","_jsxDEV","QRControl","_s","location","navigate","work","setWork","product","setProduct","checkedBoxes","setCheckedBoxes","Array","fill","searchParams","URLSearchParams","search","work_id","get","step_id","fetchData","workData","productData","data","product_id","handleCheck","index","newCheckedBoxes","handleSave","handleSend","handleRevise","children","fileName","_jsxFileName","lineNumber","columnNumber","order_number","project_number","technicaldrawingurl","name","map","isChecked","className","type","id","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/QRControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { getWorkById } from './worksapi';\r\nimport { getProductById } from './worksapi';\r\n\r\nconst QRControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [product, setProduct] = useState(null);\r\n  const [checkedBoxes, setCheckedBoxes] = useState(new Array(10).fill(false));\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const work_id = searchParams.get('work_id');\r\n    const step_id = searchParams.get('step_id');\r\n\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const productData = await getProductById(workData.data.product_id);\r\n      setProduct(productData);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n\r\n  const handleCheck = (index) => {\r\n    const newCheckedBoxes = new Array(10).fill(false);\r\n    newCheckedBoxes[index] = !checkedBoxes[index];\r\n    setCheckedBoxes(newCheckedBoxes);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleSend = () => {\r\n    navigate('/qm-control');\r\n  };\r\n\r\n  const handleRevise = () => {\r\n    // Revize işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>QR Control</h2>\r\n      {work && (\r\n        <div>\r\n          <h3>Work Details</h3>\r\n          <p>Order Number: {work.data.order_number}</p>\r\n          <p>Project Number: {work.data.project_number}</p>\r\n          <p>Product: {work.data.product_id}</p>\r\n          {/* Diğer iş detaylarını istediğiniz şekilde burada gösterebilirsiniz */}\r\n        </div>\r\n      )}\r\n\r\n      {product && (\r\n        <div>\r\n          <h3>Product Technical Drawing URL</h3>\r\n          <p>{product.data.technicaldrawingurl}</p>\r\n          <h3>Name</h3>\r\n          <p>{product.data.name}</p>\r\n        </div>\r\n      )}\r\n\r\n      <form>\r\n        {checkedBoxes.map((isChecked, index) => (\r\n          <div key={index} className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id={`question-${index}`}\r\n              checked={isChecked}\r\n              onChange={() => handleCheck(index)}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`question-${index}`}>\r\n              Question {index + 1}\r\n            </label>\r\n          </div>\r\n        ))}\r\n        <button onClick={handleSave} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n        <button onClick={handleSend} className=\"btn btn-success\">\r\n          Send\r\n        </button>\r\n        <button onClick={handleRevise} className=\"btn btn-warning\">\r\n          Revize\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}