{"ast":null,"code":"import axios from 'axios';\nconst FORMS_API_URL = 'http://localhost:3001/forms';\nconst VENDORS_API_URL = 'http://localhost:3001/vendors'; // Change this to the correct URL for fetching vendors\nconst PRODUCTS_API_URL = 'http://localhost:3001/products'; // Change this to the correct URL for fetching products\nconst API_URL = \"http://localhost:3001\";\nexport const getFormstable = async () => {\n  try {\n    const response = await axios.get(FORMS_API_URL);\n    return response.data.data;\n  } catch (error) {\n    console.error('Error fetching forms:', error);\n    throw error;\n  }\n};\nconst FORMS_API_URL2 = 'http://localhost:3001/allforms';\nexport const getFormById = async id => {\n  try {\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching form:', error);\n    throw error;\n  }\n};\nexport const createOrUpdateForm = async formData => {\n  const apiUrl = 'http://localhost:3001/forms';\n  const body = {\n    ...formData,\n    steps: formData.steps.map((step, index) => ({\n      ...step,\n      substeps: index === 1 ? step.substeps.map(substep => {\n        if (substep.id) {\n          return substep;\n        } else {\n          const {\n            id,\n            ...rest\n          } = substep;\n          return rest;\n        }\n      }) : []\n    }))\n  };\n  if (formData.id) {\n    body.form_id = formData.id;\n  }\n  await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n};\nexport const getVendors = async () => {\n  try {\n    const response = await fetch(`${API_URL}/vendors`);\n    if (!response.ok) {\n      throw new Error(`Error fetching vendors: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const getProducts = async () => {\n  try {\n    const response = await axios.get(PRODUCTS_API_URL);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching products: ${error.message}`);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","FORMS_API_URL","VENDORS_API_URL","PRODUCTS_API_URL","API_URL","getFormstable","response","get","data","error","console","FORMS_API_URL2","getFormById","id","createOrUpdateForm","formData","apiUrl","body","steps","map","step","index","substeps","substep","rest","form_id","fetch","method","headers","JSON","stringify","getVendors","ok","Error","statusText","json","getProducts","message"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/ITPForms/formapi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst FORMS_API_URL = 'http://localhost:3001/forms';\r\nconst VENDORS_API_URL = 'http://localhost:3001/vendors'; // Change this to the correct URL for fetching vendors\r\nconst PRODUCTS_API_URL = 'http://localhost:3001/products'; // Change this to the correct URL for fetching products\r\nconst API_URL = \"http://localhost:3001\";\r\n\r\n\r\nexport const getFormstable = async () => {\r\n  try {\r\n    const response = await axios.get(FORMS_API_URL);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Error fetching forms:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst FORMS_API_URL2 = 'http://localhost:3001/allforms';\r\n\r\nexport const getFormById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching form:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createOrUpdateForm = async (formData) => {\r\n  const apiUrl = 'http://localhost:3001/forms';\r\n\r\n  const body = {\r\n    ...formData,\r\n    steps: formData.steps.map((step, index) => ({\r\n      ...step,\r\n      substeps:\r\n        index === 1\r\n          ? step.substeps.map((substep) => {\r\n              if (substep.id) {\r\n                return substep;\r\n              } else {\r\n                const { id, ...rest } = substep;\r\n                return rest;\r\n              }\r\n            })\r\n          : [],\r\n    })),\r\n  };\r\n\r\n  if (formData.id) {\r\n    body.form_id = formData.id;\r\n  }\r\n\r\n  await fetch(apiUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n\r\n\r\nexport const getVendors = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/vendors`);\r\n    if (!response.ok) {\r\n      throw new Error(`Error fetching vendors: ${response.statusText}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getProducts = async () => {\r\n  try {\r\n    const response = await axios.get(PRODUCTS_API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching products: ${error.message}`);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}