{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\QRControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRControl = () => {\n  _s();\n  const [checkedBoxes, setCheckedBoxes] = useState(new Array(10).fill(false));\n  const navigate = useNavigate();\n  const handleCheck = index => {\n    const newCheckedBoxes = new Array(10).fill(false);\n    newCheckedBoxes[index] = !checkedBoxes[index];\n    setCheckedBoxes(newCheckedBoxes);\n  };\n  const handleSave = () => {\n    // Save işlemini gerçekleştirebilirsiniz\n  };\n  const handleSend = () => {\n    navigate('/qm-control');\n  };\n  const handleRevise = () => {\n    // Revize işlemini gerçekleştirebilirsiniz\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [checkedBoxes.map((isChecked, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: `question-${index}`,\n          checked: isChecked,\n          onChange: () => handleCheck(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `question-${index}`,\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"btn btn-primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"btn btn-success\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRevise,\n        className: \"btn btn-warning\",\n        children: \"Revize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(QRControl, \"E9cyqpXbbgdcSBfN4wMYGS2cDSY=\", false, function () {\n  return [useNavigate];\n});\n_c = QRControl;\nexport default QRControl;\nvar _c;\n$RefreshReg$(_c, \"QRControl\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","QRControl","_s","checkedBoxes","setCheckedBoxes","Array","fill","navigate","handleCheck","index","newCheckedBoxes","handleSave","handleSend","handleRevise","children","fileName","_jsxFileName","lineNumber","columnNumber","map","isChecked","className","type","id","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/QRControl.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst QRControl = () => {\r\n  const [checkedBoxes, setCheckedBoxes] = useState(new Array(10).fill(false));\r\n  const navigate = useNavigate();\r\n\r\n  const handleCheck = (index) => {\r\n    const newCheckedBoxes = new Array(10).fill(false);\r\n    newCheckedBoxes[index] = !checkedBoxes[index];\r\n    setCheckedBoxes(newCheckedBoxes);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  const handleSend = () => {\r\n    navigate('/qm-control');\r\n  };\r\n\r\n  const handleRevise = () => {\r\n    // Revize işlemini gerçekleştirebilirsiniz\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>QR Control</h2>\r\n      <form>\r\n        {checkedBoxes.map((isChecked, index) => (\r\n          <div key={index} className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id={`question-${index}`}\r\n              checked={isChecked}\r\n              onChange={() => handleCheck(index)}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`question-${index}`}>\r\n              Question {index + 1}\r\n            </label>\r\n          </div>\r\n        ))}\r\n        <button onClick={handleSave} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n        <button onClick={handleSend} className=\"btn btn-success\">\r\n          Send\r\n        </button>\r\n        <button onClick={handleRevise} className=\"btn btn-warning\">\r\n          Revize\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}