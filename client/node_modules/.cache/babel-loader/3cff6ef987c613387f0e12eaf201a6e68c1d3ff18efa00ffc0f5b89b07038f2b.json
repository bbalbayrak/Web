{"ast":null,"code":"const API_URL = \"https://portal-test.yenaengineering.nl/api\";\nexport const createUser = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/create_user`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error(`Kullanıcı oluşturma hatası: ${response.statusText}`);\n    }\n    const data = await response.json();\n    // console.log('Kullanıcı başarıyla oluşturuldu:', data);\n    return data;\n  } catch (error) {\n    // console.error('Kullanıcı oluşturulamadı:', error);\n    throw error;\n  }\n};\nexport const getUsers = async () => {\n  const response = await fetch(`${API_URL}/allusers`);\n  if (!response.ok) {\n    throw new Error(`Error fetching users: ${response.statusText}`);\n  }\n  return await response.json();\n};","map":{"version":3,"names":["API_URL","createUser","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","error","getUsers"],"sources":["C:/Users/mtrce/portal-test/client/src/components/Users/Userapi.js"],"sourcesContent":["const API_URL = \"https://portal-test.yenaengineering.nl/api\";\r\n\r\nexport const createUser = async (userData) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/create_user`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Kullanıcı oluşturma hatası: ${response.statusText}`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      // console.log('Kullanıcı başarıyla oluşturuldu:', data);\r\n      return data;\r\n    } catch (error) {\r\n      // console.error('Kullanıcı oluşturulamadı:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\nexport const getUsers = async () => {\r\n    const response = await fetch(`${API_URL}/allusers`);\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Error fetching users: ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,4CAA4C;AAE5D,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,cAAa,EAAE;MACrDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,+BAA8BR,QAAQ,CAACS,UAAW,EAAC,CAAC;IACvE;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;IAClC;IACA,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd;IACA,MAAMA,KAAK;EACb;AACF,CAAC;AAEH,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,WAAU,CAAC;EAEnD,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,yBAAwBR,QAAQ,CAACS,UAAW,EAAC,CAAC;EACjE;EAEA,OAAO,MAAMT,QAAQ,CAACW,IAAI,EAAE;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}