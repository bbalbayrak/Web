{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\QRReview.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { createWorkStep, updateWorkStepStatus } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRReview = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  const handleSend = async () => {\n    try {\n      // Yeni bir work step oluşturun\n      const workStepData = {\n        work_id: work_id,\n        step_name: 'Certificate',\n        timestamp: new Date().toISOString(),\n        state: 'Certificate',\n        status: 'Open'\n      };\n      const newWorkStep = await createWorkStep(workStepData);\n\n      // Mevcut step'in durumunu güncelleyin\n      await updateWorkStepStatus(step_id, 'Closed');\n\n      // workorders sayfasına yönlendir\n      navigate('/workorders');\n    } catch (error) {\n      console.error('Error creating new step and closing the current step:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"QR Review sayfas\\u0131ndaki i\\xE7erik burada olacak.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: \"btn btn-success\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QRReview, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QRReview;\nexport default QRReview;\nvar _c;\n$RefreshReg$(_c, \"QRReview\");","map":{"version":3,"names":["React","useNavigate","useLocation","createWorkStep","updateWorkStepStatus","jsxDEV","_jsxDEV","QRReview","_s","navigate","location","searchParams","URLSearchParams","search","work_id","get","step_id","handleSend","workStepData","step_name","timestamp","Date","toISOString","state","status","newWorkStep","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/QRReview.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { createWorkStep, updateWorkStepStatus } from './worksapi';\r\n\r\nconst QRReview = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      // Yeni bir work step oluşturun\r\n      const workStepData = {\r\n        work_id: work_id,\r\n        step_name: 'Certificate',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Certificate',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n  \r\n      // Mevcut step'in durumunu güncelleyin\r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      // workorders sayfasına yönlendir\r\n      navigate('/workorders');\r\n    } catch (error) {\r\n      console.error('Error creating new step and closing the current step:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>QR Review</h2>\r\n      <p>QR Review sayfasındaki içerik burada olacak.</p>\r\n      <button onClick={handleSend} className=\"btn btn-success\">\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRReview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,YAAY,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACzD,MAAMC,OAAO,GAAGH,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAC3C,MAAMC,OAAO,GAAGL,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAG3C,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,YAAY,GAAG;QACnBJ,OAAO,EAAEA,OAAO;QAChBK,SAAS,EAAE,aAAa;QACxBC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnCC,KAAK,EAAE,aAAa;QACpBC,MAAM,EAAE;MACV,CAAC;MAED,MAAMC,WAAW,GAAG,MAAMtB,cAAc,CAACe,YAAY,CAAC;;MAEtD;MACA,MAAMd,oBAAoB,CAACY,OAAO,EAAE,QAAQ,CAAC;;MAE7C;MACAP,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;IAC/E;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClB1B,OAAA;MAAAsB,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACnD1B,OAAA;MAAQ2B,OAAO,EAAEhB,UAAW;MAACiB,SAAS,EAAC,iBAAiB;MAAAN,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAACxB,EAAA,CAxCID,QAAQ;EAAA,QACKN,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAFxB5B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}