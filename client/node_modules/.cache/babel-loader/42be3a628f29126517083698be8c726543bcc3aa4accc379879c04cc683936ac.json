{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtrce\\\\portal-test\\\\client\\\\src\\\\components\\\\Gallery\\\\gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './gallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = ['https://picsum.photos/id/10/800/600', 'https://picsum.photos/id/20/800/600', 'https://picsum.photos/id/30/800/600'];\nconst Gallery = () => {\n  _s();\n  const [currentImage, setCurrentImage] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const modalRef = useRef();\n  useEffect(() => {\n    const handleOutsideClick = event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setShowModal(false);\n      }\n    };\n    window.addEventListener('click', handleOutsideClick);\n    return () => {\n      window.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n  const handlePrev = () => {\n    setCurrentImage(currentImage === 0 ? images.length - 1 : currentImage - 1);\n  };\n  const handleNext = () => {\n    setCurrentImage(currentImage === images.length - 1 ? 0 : currentImage + 1);\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"gallery-image\",\n      src: images[currentImage],\n      alt: `Image ${currentImage}`,\n      onClick: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-modal\",\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"modal-image\",\n        src: images[currentImage],\n        alt: `Image ${currentImage}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-arrows\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-arrow modal-arrow-left\",\n          onClick: handlePrev,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-arrow modal-arrow-right\",\n          onClick: handleNext,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"r8+XoXwBKIlO2/e10MO/cmm/Ta8=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","images","Gallery","_s","currentImage","setCurrentImage","showModal","setShowModal","modalRef","handleOutsideClick","event","current","contains","target","window","addEventListener","removeEventListener","handlePrev","length","handleNext","toggleModal","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/mtrce/portal-test/client/src/components/Gallery/gallery.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './gallery.css';\r\n\r\nconst images = [\r\n  'https://picsum.photos/id/10/800/600',\r\n  'https://picsum.photos/id/20/800/600',\r\n  'https://picsum.photos/id/30/800/600'\r\n];\r\n\r\nconst Gallery = () => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const modalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (event) => {\r\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n        setShowModal(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('click', handleOutsideClick);\r\n\r\n    return () => {\r\n      window.removeEventListener('click', handleOutsideClick);\r\n    };\r\n  }, []);\r\n\r\n  const handlePrev = () => {\r\n    setCurrentImage(currentImage === 0 ? images.length - 1 : currentImage - 1);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentImage(currentImage === images.length - 1 ? 0 : currentImage + 1);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <img\r\n        className=\"gallery-image\"\r\n        src={images[currentImage]}\r\n        alt={`Image ${currentImage}`}\r\n        onClick={toggleModal}\r\n      />\r\n      {showModal && (\r\n        <div className=\"gallery-modal\" ref={modalRef}>\r\n          <img\r\n            className=\"modal-image\"\r\n            src={images[currentImage]}\r\n            alt={`Image ${currentImage}`}\r\n          />\r\n          <div className=\"modal-arrows\">\r\n            <div className=\"modal-arrow modal-arrow-left\" onClick={handlePrev}>\r\n              &lt;\r\n            </div>\r\n            <div className=\"modal-arrow modal-arrow-right\" onClick={handleNext}>\r\n              &gt;\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}