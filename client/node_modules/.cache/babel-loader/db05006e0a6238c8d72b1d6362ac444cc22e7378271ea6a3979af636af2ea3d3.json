{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\ProductSegment.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes, faImage } from '@fortawesome/free-solid-svg-icons';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getFormByVendorIdAndProductId, getQualityControlEntriesByFormId, updateQualityControlEntry, getImagesByQualityControlId } from '././worksapi';\nimport ImagePopup from \"../shared/Popup/ImagePopup\";\nimport './ProductSegment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductSegment = _ref => {\n  _s();\n  let {\n    product,\n    vendorId,\n    qualityControlId\n  } = _ref;\n  const [formInfo, setFormInfo] = useState(null);\n  const [formDetail, setFormDetail] = useState(null);\n  const [activeStep, setActiveStep] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [measuredValues, setMeasuredValues] = useState({});\n  const [showImagePopup, setShowImagePopup] = useState(false);\n  const [images, setImages] = useState([]);\n  const handleStepClick = stepOrder => {\n    setActiveStep(stepOrder);\n  };\n  const fetchForm = useCallback(async () => {\n    const form = await getFormByVendorIdAndProductId(vendorId, product.id);\n    setFormInfo(form);\n    if (form) {\n      const formDetails = await getQualityControlEntriesByFormId(form.form.id);\n      setFormDetail(formDetails);\n    }\n  }, [vendorId, product.id]);\n  useEffect(() => {\n    fetchForm();\n  }, [fetchForm]);\n  const handleMeasuredValueChange = (substepId, field, value) => {\n    setMeasuredValues({\n      ...measuredValues,\n      [substepId]: {\n        ...measuredValues[substepId],\n        [field]: value\n      }\n    });\n  };\n  const handleSaveClick = async () => {\n    const entriesToUpdate = Object.entries(measuredValues).filter(_ref2 => {\n      let [id, values] = _ref2;\n      return Object.values(values).some(value => value !== null && value !== '');\n    }).map(_ref3 => {\n      let [id, values] = _ref3;\n      return {\n        id,\n        ...values\n      };\n    });\n    try {\n      await updateQualityControlEntry(entriesToUpdate);\n      fetchForm();\n    } catch (error) {\n      console.error('Ölçülen değerler güncellenirken hata:', error);\n    }\n  };\n  const checkTolerance = (substep, measuredValueKey) => {\n    var _measuredValues$subst;\n    const measuredValue = ((_measuredValues$subst = measuredValues[substep.id]) === null || _measuredValues$subst === void 0 ? void 0 : _measuredValues$subst[measuredValueKey]) || substep[measuredValueKey];\n    if (!measuredValue) {\n      return true;\n    }\n    const lowerTolerance = substep.lower_tolerance;\n    const upperTolerance = substep.upper_tolerance;\n    return measuredValue >= lowerTolerance && measuredValue <= upperTolerance;\n  };\n  const checkAllTolerances = substep => {\n    return checkTolerance(substep, 'measured_value_1') && checkTolerance(substep, 'measured_value_2') && checkTolerance(substep, 'measured_value_3');\n  };\n  const renderToleranceIcon = (substep, measuredValueKey) => {\n    if (checkTolerance(substep, measuredValueKey)) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderCellClass = (substep, measuredValueKey) => {\n    if (!checkTolerance(substep, measuredValueKey)) {\n      return 'cell-error';\n    }\n    return '';\n  };\n  useEffect(() => {\n    const fetchImages = async () => {\n      if (qualityControlId) {\n        const fetchedImages = await getImagesByQualityControlId(qualityControlId);\n        setImages(fetchedImages.data);\n      }\n    };\n    fetchImages();\n  }, [qualityControlId]);\n  const handleImageClick = imageUrl => {\n    setSelectedImage(imageUrl);\n    setShowImagePopup(true);\n  };\n  const renderImages = () => {\n    return images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.image_url,\n      alt: \"\",\n      className: \"product-image\",\n      onClick: () => handleImageClick(image.image_url)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-segment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment-buttons\",\n        children: formDetail && formDetail.steps.map(step => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"product-segment-btn\",\n          onClick: () => handleStepClick(step.order),\n          children: step.name\n        }, step.order, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), formDetail && formDetail.steps.map(step => activeStep === step.order && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tools\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actual Dimension\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Lower Tolerance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Upper Tolerance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Measured Value 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Measured Value 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Measured Value 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"NOK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: step.substeps.map(substep => {\n              var _measuredValues$subst2, _measuredValues$subst3, _measuredValues$subst4;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faImage,\n                    style: {\n                      fontSize: '16px'\n                    },\n                    onClick: () => handleImageClick(image.image_url)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.technical_drawing_numbering\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.tools\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.actual_dimension\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.lower_tolerance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: substep.upper_tolerance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: renderCellClass(substep, 'measured_value_1'),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: renderCellClass(substep, 'measured_value_1'),\n                    value: ((_measuredValues$subst2 = measuredValues[substep.id]) === null || _measuredValues$subst2 === void 0 ? void 0 : _measuredValues$subst2.measured_value_1) || substep.measured_value_1,\n                    onChange: e => handleMeasuredValueChange(substep.id, 'measured_value_1', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 29\n                  }, this), renderToleranceIcon(substep, 'measured_value_1')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: renderCellClass(substep, 'measured_value_2'),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: renderCellClass(substep, 'measured_value_1'),\n                    value: ((_measuredValues$subst3 = measuredValues[substep.id]) === null || _measuredValues$subst3 === void 0 ? void 0 : _measuredValues$subst3.measured_value_2) || substep.measured_value_2,\n                    onChange: e => handleMeasuredValueChange(substep.id, 'measured_value_2', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 29\n                  }, this), renderToleranceIcon(substep, 'measured_value_2')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: renderCellClass(substep, 'measured_value_3'),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: renderCellClass(substep, 'measured_value_1'),\n                    value: ((_measuredValues$subst4 = measuredValues[substep.id]) === null || _measuredValues$subst4 === void 0 ? void 0 : _measuredValues$subst4.measured_value_3) || substep.measured_value_3,\n                    onChange: e => handleMeasuredValueChange(substep.id, 'measured_value_3', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 29\n                  }, this), renderToleranceIcon(substep, 'measured_value_3')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: checkAllTolerances(substep) ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck,\n                    style: {\n                      color: \"green\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 31\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: !checkAllTolerances(substep) ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes,\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 31\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 27\n                }, this)]\n              }, substep.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveClick,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }, this)]\n      }, step.order, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), showImagePopup && /*#__PURE__*/_jsxDEV(ImagePopup, {\n      imageUrl: selectedImage,\n      onClose: () => setShowImagePopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-images\",\n      children: renderImages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSegment, \"f/pg2LVfJ/M8gB3MssVKEX2Apwc=\");\n_c = ProductSegment;\nexport default ProductSegment;\nvar _c;\n$RefreshReg$(_c, \"ProductSegment\");","map":{"version":3,"names":["FontAwesomeIcon","faCheck","faTimes","faImage","React","useEffect","useState","useCallback","getFormByVendorIdAndProductId","getQualityControlEntriesByFormId","updateQualityControlEntry","getImagesByQualityControlId","ImagePopup","jsxDEV","_jsxDEV","ProductSegment","_ref","_s","product","vendorId","qualityControlId","formInfo","setFormInfo","formDetail","setFormDetail","activeStep","setActiveStep","showPopup","setShowPopup","selectedImage","setSelectedImage","measuredValues","setMeasuredValues","showImagePopup","setShowImagePopup","images","setImages","handleStepClick","stepOrder","fetchForm","form","id","formDetails","handleMeasuredValueChange","substepId","field","value","handleSaveClick","entriesToUpdate","Object","entries","filter","_ref2","values","some","map","_ref3","error","console","checkTolerance","substep","measuredValueKey","_measuredValues$subst","measuredValue","lowerTolerance","lower_tolerance","upperTolerance","upper_tolerance","checkAllTolerances","renderToleranceIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","renderCellClass","fetchImages","fetchedImages","data","handleImageClick","imageUrl","renderImages","image","index","src","image_url","alt","onClick","children","name","description","steps","step","order","substeps","_measuredValues$subst2","_measuredValues$subst3","_measuredValues$subst4","icon","style","fontSize","technical_drawing_numbering","tools","actual_dimension","type","measured_value_1","onChange","e","target","measured_value_2","measured_value_3","color","onClose","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/ProductSegment.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes, faImage } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { getFormByVendorIdAndProductId, getQualityControlEntriesByFormId, updateQualityControlEntry, getImagesByQualityControlId } from '././worksapi';\r\nimport ImagePopup from \"../shared/Popup/ImagePopup\";\r\nimport './ProductSegment.css';\r\n\r\nconst ProductSegment = ({ product, vendorId, qualityControlId }) => {\r\n  const [formInfo, setFormInfo] = useState(null);\r\n  const [formDetail, setFormDetail] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState('');\r\n  const [measuredValues, setMeasuredValues] = useState({});\r\n  const [showImagePopup, setShowImagePopup] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n\r\n  const handleStepClick = (stepOrder) => {\r\n    setActiveStep(stepOrder);\r\n  };\r\n\r\n  const fetchForm = useCallback(async () => {\r\n    const form = await getFormByVendorIdAndProductId(vendorId, product.id);\r\n    setFormInfo(form);\r\n\r\n    if (form) {\r\n      const formDetails = await getQualityControlEntriesByFormId(form.form.id);\r\n      setFormDetail(formDetails);\r\n    }\r\n  }, [vendorId, product.id]);\r\n\r\n  useEffect(() => {\r\n    fetchForm();\r\n  }, [fetchForm]);\r\n\r\n  const handleMeasuredValueChange = (substepId, field, value) => {\r\n    setMeasuredValues({\r\n      ...measuredValues,\r\n      [substepId]: {\r\n        ...measuredValues[substepId],\r\n        [field]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    const entriesToUpdate = Object.entries(measuredValues)\r\n      .filter(([id, values]) => Object.values(values).some((value) => value !== null && value !== ''))\r\n      .map(([id, values]) => ({\r\n        id,\r\n        ...values,\r\n      }));\r\n\r\n    try {\r\n      await updateQualityControlEntry(entriesToUpdate);\r\n      fetchForm();\r\n    } catch (error) {\r\n      console.error('Ölçülen değerler güncellenirken hata:', error);\r\n    }\r\n  };\r\n\r\nconst checkTolerance = (substep, measuredValueKey) => {\r\n  const measuredValue = measuredValues[substep.id]?.[measuredValueKey] || substep[measuredValueKey];\r\n  if (!measuredValue) {\r\n    return true;\r\n  }\r\n\r\n  const lowerTolerance = substep.lower_tolerance;\r\n  const upperTolerance = substep.upper_tolerance;\r\n  return measuredValue >= lowerTolerance && measuredValue <= upperTolerance;\r\n};\r\n\r\n  const checkAllTolerances = (substep) => {\r\n    return (\r\n      checkTolerance(substep, 'measured_value_1') &&\r\n      checkTolerance(substep, 'measured_value_2') &&\r\n      checkTolerance(substep, 'measured_value_3')\r\n    );\r\n  };\r\n\r\n  const renderToleranceIcon = (substep, measuredValueKey) => {\r\n    if (checkTolerance(substep, measuredValueKey)) {\r\n      return <i className=\"fas fa-check\"></i>;\r\n    } else {\r\n      return <i className=\"fas fa-times\"></i>;\r\n    }\r\n  };\r\n\r\n  const renderCellClass = (substep, measuredValueKey) => {\r\n    if (!checkTolerance(substep, measuredValueKey)) {\r\n      return 'cell-error';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      if (qualityControlId) {\r\n        const fetchedImages = await getImagesByQualityControlId(qualityControlId);\r\n        setImages(fetchedImages.data);\r\n      }\r\n    };\r\n    fetchImages();\r\n  }, [qualityControlId]);\r\n\r\n  const handleImageClick = (imageUrl) => {\r\n    setSelectedImage(imageUrl);\r\n    setShowImagePopup(true);\r\n  };\r\n  \r\n  const renderImages = () => {\r\n    return images.map((image, index) => (\r\n      <img\r\n        key={index}\r\n        src={image.image_url}\r\n        alt=\"\"\r\n        className=\"product-image\"\r\n        onClick={() => handleImageClick(image.image_url)}\r\n      />\r\n    ));\r\n  };\r\n  \r\n  return (\r\n    <div className=\"product-segment\">\r\n      <h3>{product.name}</h3>\r\n      <p>{product.description}</p>\r\n      <div>\r\n        <div className=\"segment-buttons\">\r\n          {formDetail &&\r\n            formDetail.steps.map((step) => (\r\n              <button className=\"product-segment-btn\" key={step.order} onClick={() => handleStepClick(step.order)}>\r\n                {step.name}\r\n              </button>\r\n            ))}\r\n        </div>\r\n        {formDetail &&\r\n          formDetail.steps.map(\r\n            (step) =>\r\n              activeStep === step.order && (\r\n                <div key={step.order} className=\"segment-content\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Image</th>\r\n                        <th>Number</th>\r\n                        <th>Tools</th>\r\n                        <th>Description</th>\r\n                        <th>Actual Dimension</th>\r\n                        <th>Lower Tolerance</th>\r\n                        <th>Upper Tolerance</th>\r\n                        <th>Measured Value 1</th>\r\n                        <th>Measured Value 2</th>\r\n                        <th>Measured Value 3</th>\r\n                        <th>OK</th>\r\n                        <th>NOK</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {step.substeps.map((substep) => (\r\n                        <tr key={substep.id}>\r\n                          <td>\r\n                          <FontAwesomeIcon icon={faImage} style={{ fontSize: '16px' }} onClick={() => handleImageClick(image.image_url)}/>\r\n                          </td>\r\n                          <td>{substep.technical_drawing_numbering}</td>\r\n                          <td>{substep.tools}</td>\r\n                          <td>{substep.description}</td>\r\n                          <td>{substep.actual_dimension}</td>\r\n                          <td>{substep.lower_tolerance}</td>\r\n                          <td>{substep.upper_tolerance}</td>\r\n                          <td className={renderCellClass(substep, 'measured_value_1')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_1 || substep.measured_value_1}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_1', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_1')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_2')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_2 || substep.measured_value_2}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_2', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_2')}\r\n                          </td>\r\n                          <td className={renderCellClass(substep, 'measured_value_3')}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className={renderCellClass(substep, 'measured_value_1')}\r\n                              value={measuredValues[substep.id]?.measured_value_3 || substep.measured_value_3}\r\n                              onChange={(e) => handleMeasuredValueChange(substep.id, 'measured_value_3', e.target.value)}\r\n                            />\r\n                            {renderToleranceIcon(substep, 'measured_value_3')}\r\n                          </td>\r\n                          <td>\r\n                            {checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faCheck} style={{ color: \"green\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                          <td>\r\n                            {!checkAllTolerances(substep) ? (\r\n                              <FontAwesomeIcon icon={faTimes} style={{ color: \"red\" }} />\r\n                            ) : null}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <button onClick={handleSaveClick}>Save</button>\r\n                </div>\r\n              ),\r\n          )}\r\n      </div>\r\n      {showImagePopup && (\r\n        <ImagePopup imageUrl={selectedImage} onClose={() => setShowImagePopup(false)} />\r\n      )}\r\n      <div className=\"product-images\">{renderImages()}</div>\r\n    </div>\r\n  );\r\n};\r\n  \r\n  export default ProductSegment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}