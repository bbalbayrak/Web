{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtrce\\\\portal-test\\\\client\\\\src\\\\components\\\\ITPForms\\\\FormEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFormById, createOrUpdateForm } from './formapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst segments = [{\n  name: 'Sub - Part Dimensiol',\n  order: 1\n}, {\n  name: 'Final Part Measurement',\n  order: 2\n}, {\n  name: 'Paint Report',\n  order: 3\n}, {\n  name: 'Qoating Report',\n  order: 4\n}, {\n  name: 'Product Packing Standart',\n  order: 5\n}, {\n  name: 'Loading Check',\n  order: 6\n}];\nconst FormEdit = () => {\n  _s();\n  var _form$product, _form$vendor;\n  const {\n    id\n  } = useParams();\n  const [form, setForm] = useState(null);\n  const [activeSegment, setActiveSegment] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const formData = await getFormById(id);\n        setForm(formData);\n      } catch (error) {\n        console.error('Error fetching form:', error);\n      }\n    };\n    fetchData();\n  }, [id]);\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    if (form) {\n      const finalPartMeasurementStep = form.steps.find(step => step.name === 'Final Part Measurement');\n      if (finalPartMeasurementStep) {\n        setRows(finalPartMeasurementStep.substeps);\n      }\n    }\n  }, [form]);\n  const addRow = () => {\n    const newRow = {\n      id: `new-${Date.now()}`,\n      name: '',\n      technical_drawing_numbering: '',\n      tools: '',\n      description: '',\n      actual_dimension: '',\n      lower_tolerance: '',\n      upper_tolerance: ''\n    };\n    setRows([...rows, newRow]);\n  };\n  const handleInputChange = (event, rowId, field) => {\n    const newValue = event.target.value;\n    setRows(rows.map(row => row.id === rowId ? {\n      ...row,\n      [field]: newValue\n    } : row));\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, rowId) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\n      handleFileUpload(file, rowId);\n    } else {\n      alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\n    }\n  };\n  const handleFileUpload = (e, rowId) => {\n    const file = e.target.files[0];\n    console.log(`File uploaded for row: ${rowId}`);\n    console.log('File:', file);\n  };\n  const handleSegmentClick = order => {\n    setActiveSegment(order);\n  };\n  const renderSegmentContent = () => {\n    switch (activeSegment) {\n      case 1:\n        return renderSubPartDimensiol();\n      case 2:\n        return renderFinalPartMeasurement();\n      case 3:\n        return renderPaintReport();\n      case 4:\n        return renderQoatingReport();\n      default:\n        return null;\n    }\n  };\n  const saveForm = async () => {\n    const postData = {\n      id: form.id,\n      product_name: form.product_name,\n      vendor_name: form.vendor_name,\n      steps: segments.map((segment, index) => ({\n        name: segment.name,\n        order: segment.order,\n        substeps: index === 1 ? rows.map(row => {\n          const {\n            technical_drawing_numbering,\n            tools,\n            description,\n            actual_dimension,\n            lower_tolerance,\n            upper_tolerance,\n            example_visual_url,\n            status\n          } = row;\n          return {\n            technical_drawing_numbering,\n            tools,\n            description,\n            actual_dimension,\n            lower_tolerance,\n            upper_tolerance,\n            example_visual_url,\n            status\n          };\n        }) : []\n      }))\n    };\n    try {\n      await createOrUpdateForm(postData);\n      console.log('Form kaydedildi', this.state.first);\n    } catch (error) {\n      console.error('Error saving form:', error);\n    }\n  };\n  const renderSubPartDimensiol = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: form.steps[0].substeps.map(substep => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: substep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: substep.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Actual dimension: ${substep.actual_dimension}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: substep.example_visual_url,\n          alt: substep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, substep.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  };\n  const renderFinalPartMeasurement = () => {\n    if (!form) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"measurement-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0130sim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Teknik \\xC7izim Numaras\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Kullan\\u0131lan Aletler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\u0131klama\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ger\\xE7ek Boyut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Alt Tolerans\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\xDCst Tolerans\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Example Visual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.name,\n                onChange: e => handleInputChange(e, row.id, 'name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.technical_drawing_numbering,\n                onChange: e => handleInputChange(e, row.id, 'technical_drawing_numbering')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.tools,\n                onChange: e => handleInputChange(e, row.id, 'tools')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.description,\n                onChange: e => handleInputChange(e, row.id, 'description')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.actual_dimension,\n                onChange: e => handleInputChange(e, row.id, 'actual_dimension')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.lower_tolerance,\n                onChange: e => handleInputChange(e, row.id, 'lower_tolerance')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.upper_tolerance,\n                onChange: e => handleInputChange(e, row.id, 'upper_tolerance')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropzone\",\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, row.id),\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/png, image/jpeg\",\n                  onChange: e => handleFileUpload(e.target.files[0], row.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRow,\n        children: \"Sat\\u0131r Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveForm,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPaintReport = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: form.steps[2].substeps.map(substep => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: substep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: substep.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Actual dimension: ${substep.actual_dimension}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: substep.example_visual_url,\n          alt: substep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, substep.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  };\n  const renderQoatingReport = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: form.steps[3].substeps.map(substep => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: substep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: substep.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Actual dimension: ${substep.actual_dimension}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: substep.example_visual_url,\n          alt: substep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, substep.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ITP Formu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), form ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Product Name: \", form.product_name || ((_form$product = form.product) === null || _form$product === void 0 ? void 0 : _form$product.name)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Vendor Name: \", form.vendor_name || ((_form$vendor = form.vendor) === null || _form$vendor === void 0 ? void 0 : _form$vendor.name)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segments\",\n        children: segments.map(segment => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSegmentClick(segment.order),\n          className: activeSegment === segment.order ? 'active' : '',\n          children: segment.name\n        }, segment.order, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment-content\",\n        children: renderSegmentContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Form y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(FormEdit, \"vQHNDsS4RrCJj2P/KENQCwHpd/k=\", false, function () {\n  return [useParams];\n});\n_c = FormEdit;\nexport default FormEdit;\nvar _c;\n$RefreshReg$(_c, \"FormEdit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getFormById","createOrUpdateForm","jsxDEV","_jsxDEV","segments","name","order","FormEdit","_s","_form$product","_form$vendor","id","form","setForm","activeSegment","setActiveSegment","fetchData","formData","error","console","rows","setRows","finalPartMeasurementStep","steps","find","step","substeps","addRow","newRow","Date","now","technical_drawing_numbering","tools","description","actual_dimension","lower_tolerance","upper_tolerance","handleInputChange","event","rowId","field","newValue","target","value","map","row","handleDragOver","e","preventDefault","handleDrop","file","dataTransfer","files","type","handleFileUpload","alert","log","handleSegmentClick","renderSegmentContent","renderSubPartDimensiol","renderFinalPartMeasurement","renderPaintReport","renderQoatingReport","saveForm","postData","product_name","vendor_name","segment","index","example_visual_url","status","state","first","children","substep","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","className","onChange","onDragOver","onDrop","accept","onClick","product","vendor","_c","$RefreshReg$"],"sources":["C:/Users/mtrce/portal-test/client/src/components/ITPForms/FormEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getFormById, createOrUpdateForm } from './formapi';\r\n\r\nconst segments = [\r\n  { name: 'Sub - Part Dimensiol', order: 1 },\r\n  { name: 'Final Part Measurement', order: 2 },\r\n  { name: 'Paint Report', order: 3 },\r\n  { name: 'Qoating Report', order: 4 },\r\n  { name: 'Product Packing Standart', order: 5 },\r\n  { name: 'Loading Check', order: 6 },\r\n];\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [form, setForm] = useState(null);\r\n  const [activeSegment, setActiveSegment] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const formData = await getFormById(id);\r\n        setForm(formData);\r\n      } catch (error) {\r\n        console.error('Error fetching form:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (form) {\r\n      const finalPartMeasurementStep = form.steps.find(\r\n        (step) => step.name === 'Final Part Measurement'\r\n      );\r\n\r\n      if (finalPartMeasurementStep) {\r\n        setRows(finalPartMeasurementStep.substeps);\r\n      }\r\n    }\r\n  }, [form]);\r\n\r\n  const addRow = () => {\r\n    const newRow = {\r\n      id: `new-${Date.now()}`,\r\n      name: '',\r\n      technical_drawing_numbering: '',\r\n      tools: '',\r\n      description: '',\r\n      actual_dimension: '',\r\n      lower_tolerance: '',\r\n      upper_tolerance: '',\r\n    };\r\n    setRows([...rows, newRow]);\r\n  };\r\n  const handleInputChange = (event, rowId, field) => {\r\n    const newValue = event.target.value;\r\n    setRows(rows.map(row => row.id === rowId ? {...row, [field]: newValue} : row));\r\n  };\r\n  \r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  \r\n  const handleDrop = (e, rowId) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n      handleFileUpload(file, rowId);\r\n    } else {\r\n      alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (e, rowId) => {\r\n    const file = e.target.files[0];\r\n    console.log(`File uploaded for row: ${rowId}`);\r\n    console.log('File:', file);\r\n  };\r\n  \r\n  const handleSegmentClick = (order) => {\r\n    setActiveSegment(order);\r\n  };\r\n\r\n  const renderSegmentContent = () => {\r\n    switch (activeSegment) {\r\n      case 1:\r\n        return renderSubPartDimensiol();\r\n      case 2:\r\n        return renderFinalPartMeasurement();\r\n      case 3:\r\n        return renderPaintReport();\r\n      case 4:\r\n        return renderQoatingReport();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const saveForm = async () => {\r\n    const postData = {\r\n      id: form.id,\r\n      product_name: form.product_name,\r\n      vendor_name: form.vendor_name,\r\n      steps: segments.map((segment, index) => ({\r\n        name: segment.name,\r\n        order: segment.order,\r\n        substeps: index === 1 ? rows.map(row => {\r\n          const {\r\n            technical_drawing_numbering,\r\n            tools,\r\n            description,\r\n            actual_dimension,\r\n            lower_tolerance,\r\n            upper_tolerance,\r\n            example_visual_url,\r\n            status\r\n          } = row;\r\n          return {\r\n            technical_drawing_numbering,\r\n            tools,\r\n            description,\r\n            actual_dimension,\r\n            lower_tolerance,\r\n            upper_tolerance,\r\n            example_visual_url,\r\n            status\r\n          };\r\n        }) : [],\r\n      })),\r\n    };\r\n\r\n    try {\r\n      await createOrUpdateForm(postData);\r\n      console.log('Form kaydedildi', this.state.first);\r\n\r\n    } catch (error) {\r\n      console.error('Error saving form:', error);\r\n    }\r\n  };\r\n\r\n  const renderSubPartDimensiol = () => {\r\n    return (\r\n      <div>\r\n        {form.steps[0].substeps.map((substep) => (\r\n          <div key={substep.id}>\r\n            <h3>{substep.name}</h3>\r\n            <p>{substep.description}</p>\r\n            <p>{`Actual dimension: ${substep.actual_dimension}`}</p>\r\n            <p>{`Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`}</p>\r\n            <img src={substep.example_visual_url} alt={substep.name} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderFinalPartMeasurement = () => {\r\n    if (!form) return null;\r\n  \r\n    return (\r\n      <div>\r\n        <table className=\"measurement-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>İsim</th>\r\n              <th>Teknik Çizim Numarası</th>\r\n              <th>Kullanılan Aletler</th>\r\n              <th>Açıklama</th>\r\n              <th>Gerçek Boyut</th>\r\n              <th>Alt Tolerans</th>\r\n              <th>Üst Tolerans</th>\r\n              <th>Example Visual</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row) => (\r\n            <tr key={row.id}>\r\n                <td>\r\n                <input type=\"text\" value={row.name} onChange={(e) => handleInputChange(e, row.id, 'name')} />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={row.technical_drawing_numbering} onChange={(e) => handleInputChange(e, row.id, 'technical_drawing_numbering')} />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={row.tools} onChange={(e) => handleInputChange(e, row.id, 'tools')} />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={row.description} onChange={(e) => handleInputChange(e, row.id, 'description')} />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={row.actual_dimension} onChange={(e) => handleInputChange(e, row.id, 'actual_dimension')} />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={row.lower_tolerance} onChange={(e) => handleInputChange(e, row.id, 'lower_tolerance')} />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={row.upper_tolerance} onChange={(e) => handleInputChange(e, row.id, 'upper_tolerance')} />\r\n                </td>\r\n                <td>\r\n                <div\r\n                  className=\"dropzone\"\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={(e) => handleDrop(e, row.id)}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                    onChange={(e) => handleFileUpload(e.target.files[0], row.id)}\r\n                  />\r\n                </div>\r\n              </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button onClick={addRow}>Satır Ekle</button>\r\n        <button onClick={saveForm}>Kaydet</button>\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n  \r\n  const renderPaintReport = () => {\r\n    return (\r\n      <div>\r\n        {form.steps[2].substeps.map((substep) => (\r\n          <div key={substep.id}>\r\n            <h3>{substep.name}</h3>\r\n            <p>{substep.description}</p>\r\n            <p>{`Actual dimension: ${substep.actual_dimension}`}</p>\r\n            <p>{`Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`}</p>\r\n            <img src={substep.example_visual_url} alt={substep.name} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const renderQoatingReport = () => {\r\n    return (\r\n      <div>\r\n        {form.steps[3].substeps.map((substep) => (\r\n          <div key={substep.id}>\r\n            <h3>{substep.name}</h3>\r\n            <p>{substep.description}</p>\r\n            <p>{`Actual dimension: ${substep.actual_dimension}`}</p>\r\n            <p>{`Tolerances: ${substep.lower_tolerance}-${substep.upper_tolerance}`}</p>\r\n            <img src={substep.example_visual_url} alt={substep.name} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>ITP Formu</h1>\r\n      {form ? (\r\n        <div>\r\n          <h2>Product Name: {form.product_name || form.product?.name}</h2>\r\n          <h2>Vendor Name: {form.vendor_name || form.vendor?.name}</h2>\r\n            <div className=\"segments\">\r\n                {segments.map((segment) => (\r\n                <button\r\n                    key={segment.order}\r\n                    onClick={() => handleSegmentClick(segment.order)}\r\n                    className={activeSegment === segment.order ? 'active' : ''}\r\n                >\r\n                    {segment.name}\r\n                </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"segment-content\">{renderSegmentContent()}</div>\r\n        </div>\r\n      ) : (\r\n        <p>Form yükleniyor...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormEdit;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,QAAQ,GAAG,CACf;EAAEC,IAAI,EAAE,sBAAsB;EAAEC,KAAK,EAAE;AAAE,CAAC,EAC1C;EAAED,IAAI,EAAE,wBAAwB;EAAEC,KAAK,EAAE;AAAE,CAAC,EAC5C;EAAED,IAAI,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAE,CAAC,EAClC;EAAED,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAE,CAAC,EACpC;EAAED,IAAI,EAAE,0BAA0B;EAAEC,KAAK,EAAE;AAAE,CAAC,EAC9C;EAAED,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAE,CAAC,CACpC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,YAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGZ,SAAS,EAAE;EAC1B,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,WAAW,CAACW,EAAE,CAAC;QACtCE,OAAO,CAACI,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDF,SAAS,EAAE;EACb,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,IAAIc,IAAI,EAAE;MACR,MAAMU,wBAAwB,GAAGV,IAAI,CAACW,KAAK,CAACC,IAAI,CAC7CC,IAAI,IAAKA,IAAI,CAACpB,IAAI,KAAK,wBAAwB,CACjD;MAED,IAAIiB,wBAAwB,EAAE;QAC5BD,OAAO,CAACC,wBAAwB,CAACI,QAAQ,CAAC;MAC5C;IACF;EACF,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,MAAM,GAAG;MACbjB,EAAE,EAAG,OAAMkB,IAAI,CAACC,GAAG,EAAG,EAAC;MACvBzB,IAAI,EAAE,EAAE;MACR0B,2BAA2B,EAAE,EAAE;MAC/BC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE;IACnB,CAAC;IACDf,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEQ,MAAM,CAAC,CAAC;EAC5B,CAAC;EACD,MAAMS,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACjD,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAACC,KAAK;IACnCtB,OAAO,CAACD,IAAI,CAACwB,GAAG,CAACC,GAAG,IAAIA,GAAG,CAAClC,EAAE,KAAK4B,KAAK,GAAG;MAAC,GAAGM,GAAG;MAAE,CAACL,KAAK,GAAGC;IAAQ,CAAC,GAAGI,GAAG,CAAC,CAAC;EAChF,CAAC;EAED,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;EACpB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACF,CAAC,EAAER,KAAK,KAAK;IAC/BQ,CAAC,CAACC,cAAc,EAAE;IAClB,MAAME,IAAI,GAAGH,CAAC,CAACI,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC;IACpC,IAAIF,IAAI,KAAKA,IAAI,CAACG,IAAI,KAAK,WAAW,IAAIH,IAAI,CAACG,IAAI,KAAK,YAAY,CAAC,EAAE;MACrEC,gBAAgB,CAACJ,IAAI,EAAEX,KAAK,CAAC;IAC/B,CAAC,MAAM;MACLgB,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF,CAAC;EAED,MAAMD,gBAAgB,GAAGA,CAACP,CAAC,EAAER,KAAK,KAAK;IACrC,MAAMW,IAAI,GAAGH,CAAC,CAACL,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC;IAC9BjC,OAAO,CAACqC,GAAG,CAAE,0BAAyBjB,KAAM,EAAC,CAAC;IAC9CpB,OAAO,CAACqC,GAAG,CAAC,OAAO,EAAEN,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMO,kBAAkB,GAAInD,KAAK,IAAK;IACpCS,gBAAgB,CAACT,KAAK,CAAC;EACzB,CAAC;EAED,MAAMoD,oBAAoB,GAAGA,CAAA,KAAM;IACjC,QAAQ5C,aAAa;MACnB,KAAK,CAAC;QACJ,OAAO6C,sBAAsB,EAAE;MACjC,KAAK,CAAC;QACJ,OAAOC,0BAA0B,EAAE;MACrC,KAAK,CAAC;QACJ,OAAOC,iBAAiB,EAAE;MAC5B,KAAK,CAAC;QACJ,OAAOC,mBAAmB,EAAE;MAC9B;QACE,OAAO,IAAI;IAAC;EAElB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG;MACfrD,EAAE,EAAEC,IAAI,CAACD,EAAE;MACXsD,YAAY,EAAErD,IAAI,CAACqD,YAAY;MAC/BC,WAAW,EAAEtD,IAAI,CAACsD,WAAW;MAC7B3C,KAAK,EAAEnB,QAAQ,CAACwC,GAAG,CAAC,CAACuB,OAAO,EAAEC,KAAK,MAAM;QACvC/D,IAAI,EAAE8D,OAAO,CAAC9D,IAAI;QAClBC,KAAK,EAAE6D,OAAO,CAAC7D,KAAK;QACpBoB,QAAQ,EAAE0C,KAAK,KAAK,CAAC,GAAGhD,IAAI,CAACwB,GAAG,CAACC,GAAG,IAAI;UACtC,MAAM;YACJd,2BAA2B;YAC3BC,KAAK;YACLC,WAAW;YACXC,gBAAgB;YAChBC,eAAe;YACfC,eAAe;YACfiC,kBAAkB;YAClBC;UACF,CAAC,GAAGzB,GAAG;UACP,OAAO;YACLd,2BAA2B;YAC3BC,KAAK;YACLC,WAAW;YACXC,gBAAgB;YAChBC,eAAe;YACfC,eAAe;YACfiC,kBAAkB;YAClBC;UACF,CAAC;QACH,CAAC,CAAC,GAAG;MACP,CAAC,CAAC;IACJ,CAAC;IAED,IAAI;MACF,MAAMrE,kBAAkB,CAAC+D,QAAQ,CAAC;MAClC7C,OAAO,CAACqC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACe,KAAK,CAACC,KAAK,CAAC;IAElD,CAAC,CAAC,OAAOtD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAMyC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,oBACExD,OAAA;MAAAsE,QAAA,EACG7D,IAAI,CAACW,KAAK,CAAC,CAAC,CAAC,CAACG,QAAQ,CAACkB,GAAG,CAAE8B,OAAO,iBAClCvE,OAAA;QAAAsE,QAAA,gBACEtE,OAAA;UAAAsE,QAAA,EAAKC,OAAO,CAACrE;QAAI;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACvB3E,OAAA;UAAAsE,QAAA,EAAIC,OAAO,CAACzC;QAAW;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5B3E,OAAA;UAAAsE,QAAA,EAAK,qBAAoBC,OAAO,CAACxC,gBAAiB;QAAC;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxD3E,OAAA;UAAAsE,QAAA,EAAK,eAAcC,OAAO,CAACvC,eAAgB,IAAGuC,OAAO,CAACtC,eAAgB;QAAC;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5E3E,OAAA;UAAK4E,GAAG,EAAEL,OAAO,CAACL,kBAAmB;UAACW,GAAG,EAAEN,OAAO,CAACrE;QAAK;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA,GALnDJ,OAAO,CAAC/D,EAAE;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV,CAAC;EAED,MAAMlB,0BAA0B,GAAGA,CAAA,KAAM;IACvC,IAAI,CAAChD,IAAI,EAAE,OAAO,IAAI;IAEtB,oBACET,OAAA;MAAAsE,QAAA,gBACEtE,OAAA;QAAO8E,SAAS,EAAC,mBAAmB;QAAAR,QAAA,gBAClCtE,OAAA;UAAAsE,QAAA,eACEtE,OAAA;YAAAsE,QAAA,gBACEtE,OAAA;cAAAsE,QAAA,EAAI;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACb3E,OAAA;cAAAsE,QAAA,EAAI;YAAqB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eAC9B3E,OAAA;cAAAsE,QAAA,EAAI;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eAC3B3E,OAAA;cAAAsE,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACjB3E,OAAA;cAAAsE,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACrB3E,OAAA;cAAAsE,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACrB3E,OAAA;cAAAsE,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACrB3E,OAAA;cAAAsE,QAAA,EAAI;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACtB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACC,eACR3E,OAAA;UAAAsE,QAAA,EACGrD,IAAI,CAACwB,GAAG,CAAEC,GAAG,iBACZ1C,OAAA;YAAAsE,QAAA,gBACItE,OAAA;cAAAsE,QAAA,eACAtE,OAAA;gBAAOkD,IAAI,EAAC,MAAM;gBAACV,KAAK,EAAEE,GAAG,CAACxC,IAAK;gBAAC6E,QAAQ,EAAGnC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,EAAEF,GAAG,CAAClC,EAAE,EAAE,MAAM;cAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACxF,eACL3E,OAAA;cAAAsE,QAAA,eACEtE,OAAA;gBAAOkD,IAAI,EAAC,MAAM;gBAACV,KAAK,EAAEE,GAAG,CAACd,2BAA4B;gBAACmD,QAAQ,EAAGnC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,EAAEF,GAAG,CAAClC,EAAE,EAAE,6BAA6B;cAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACxI,eACL3E,OAAA;cAAAsE,QAAA,eACEtE,OAAA;gBAAOkD,IAAI,EAAC,MAAM;gBAACV,KAAK,EAAEE,GAAG,CAACb,KAAM;gBAACkD,QAAQ,EAAGnC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,EAAEF,GAAG,CAAClC,EAAE,EAAE,OAAO;cAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAC5F,eACL3E,OAAA;cAAAsE,QAAA,eACEtE,OAAA;gBAAOkD,IAAI,EAAC,MAAM;gBAACV,KAAK,EAAEE,GAAG,CAACZ,WAAY;gBAACiD,QAAQ,EAAGnC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,EAAEF,GAAG,CAAClC,EAAE,EAAE,aAAa;cAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACxG,eACL3E,OAAA;cAAAsE,QAAA,eACEtE,OAAA;gBAAOkD,IAAI,EAAC,MAAM;gBAACV,KAAK,EAAEE,GAAG,CAACX,gBAAiB;gBAACgD,QAAQ,EAAGnC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,EAAEF,GAAG,CAAClC,EAAE,EAAE,kBAAkB;cAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAClH,eACL3E,OAAA;cAAAsE,QAAA,eACEtE,OAAA;gBAAOkD,IAAI,EAAC,MAAM;gBAACV,KAAK,EAAEE,GAAG,CAACV,eAAgB;gBAAC+C,QAAQ,EAAGnC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,EAAEF,GAAG,CAAClC,EAAE,EAAE,iBAAiB;cAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAChH,eACL3E,OAAA;cAAAsE,QAAA,eACEtE,OAAA;gBAAOkD,IAAI,EAAC,MAAM;gBAACV,KAAK,EAAEE,GAAG,CAACT,eAAgB;gBAAC8C,QAAQ,EAAGnC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,EAAEF,GAAG,CAAClC,EAAE,EAAE,iBAAiB;cAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAChH,eACL3E,OAAA;cAAAsE,QAAA,eACAtE,OAAA;gBACE8E,SAAS,EAAC,UAAU;gBACpBE,UAAU,EAAErC,cAAe;gBAC3BsC,MAAM,EAAGrC,CAAC,IAAKE,UAAU,CAACF,CAAC,EAAEF,GAAG,CAAClC,EAAE,CAAE;gBAAA8D,QAAA,eAErCtE,OAAA;kBACEkD,IAAI,EAAC,MAAM;kBACXgC,MAAM,EAAC,uBAAuB;kBAC9BH,QAAQ,EAAGnC,CAAC,IAAKO,gBAAgB,CAACP,CAAC,CAACL,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,EAAEP,GAAG,CAAClC,EAAE;gBAAE;kBAAAgE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAC7D;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACH;UAAA,GAlCEjC,GAAG,CAAClC,EAAE;YAAAgE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAoCd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACR3E,OAAA;QAAQmF,OAAO,EAAE3D,MAAO;QAAA8C,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC5C3E,OAAA;QAAQmF,OAAO,EAAEvB,QAAS;QAAAU,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtC;EAEV,CAAC;EAGD,MAAMjB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,oBACE1D,OAAA;MAAAsE,QAAA,EACG7D,IAAI,CAACW,KAAK,CAAC,CAAC,CAAC,CAACG,QAAQ,CAACkB,GAAG,CAAE8B,OAAO,iBAClCvE,OAAA;QAAAsE,QAAA,gBACEtE,OAAA;UAAAsE,QAAA,EAAKC,OAAO,CAACrE;QAAI;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACvB3E,OAAA;UAAAsE,QAAA,EAAIC,OAAO,CAACzC;QAAW;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5B3E,OAAA;UAAAsE,QAAA,EAAK,qBAAoBC,OAAO,CAACxC,gBAAiB;QAAC;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxD3E,OAAA;UAAAsE,QAAA,EAAK,eAAcC,OAAO,CAACvC,eAAgB,IAAGuC,OAAO,CAACtC,eAAgB;QAAC;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5E3E,OAAA;UAAK4E,GAAG,EAAEL,OAAO,CAACL,kBAAmB;UAACW,GAAG,EAAEN,OAAO,CAACrE;QAAK;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA,GALnDJ,OAAO,CAAC/D,EAAE;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV,CAAC;EAED,MAAMhB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,oBACE3D,OAAA;MAAAsE,QAAA,EACG7D,IAAI,CAACW,KAAK,CAAC,CAAC,CAAC,CAACG,QAAQ,CAACkB,GAAG,CAAE8B,OAAO,iBAClCvE,OAAA;QAAAsE,QAAA,gBACEtE,OAAA;UAAAsE,QAAA,EAAKC,OAAO,CAACrE;QAAI;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACvB3E,OAAA;UAAAsE,QAAA,EAAIC,OAAO,CAACzC;QAAW;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5B3E,OAAA;UAAAsE,QAAA,EAAK,qBAAoBC,OAAO,CAACxC,gBAAiB;QAAC;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxD3E,OAAA;UAAAsE,QAAA,EAAK,eAAcC,OAAO,CAACvC,eAAgB,IAAGuC,OAAO,CAACtC,eAAgB;QAAC;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5E3E,OAAA;UAAK4E,GAAG,EAAEL,OAAO,CAACL,kBAAmB;UAACW,GAAG,EAAEN,OAAO,CAACrE;QAAK;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA,GALnDJ,OAAO,CAAC/D,EAAE;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV,CAAC;EACD,oBACE3E,OAAA;IAAAsE,QAAA,gBACEtE,OAAA;MAAAsE,QAAA,EAAI;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACjBlE,IAAI,gBACHT,OAAA;MAAAsE,QAAA,gBACEtE,OAAA;QAAAsE,QAAA,GAAI,gBAAc,EAAC7D,IAAI,CAACqD,YAAY,MAAAxD,aAAA,GAAIG,IAAI,CAAC2E,OAAO,cAAA9E,aAAA,uBAAZA,aAAA,CAAcJ,IAAI;MAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAChE3E,OAAA;QAAAsE,QAAA,GAAI,eAAa,EAAC7D,IAAI,CAACsD,WAAW,MAAAxD,YAAA,GAAIE,IAAI,CAAC4E,MAAM,cAAA9E,YAAA,uBAAXA,YAAA,CAAaL,IAAI;MAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC3D3E,OAAA;QAAK8E,SAAS,EAAC,UAAU;QAAAR,QAAA,EACpBrE,QAAQ,CAACwC,GAAG,CAAEuB,OAAO,iBACtBhE,OAAA;UAEImF,OAAO,EAAEA,CAAA,KAAM7B,kBAAkB,CAACU,OAAO,CAAC7D,KAAK,CAAE;UACjD2E,SAAS,EAAEnE,aAAa,KAAKqD,OAAO,CAAC7D,KAAK,GAAG,QAAQ,GAAG,EAAG;UAAAmE,QAAA,EAE1DN,OAAO,CAAC9D;QAAI,GAJR8D,OAAO,CAAC7D,KAAK;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACN3E,OAAA;QAAK8E,SAAS,EAAC,iBAAiB;QAAAR,QAAA,EAAEf,oBAAoB;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7D,gBAEN3E,OAAA;MAAAsE,QAAA,EAAG;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACtE,EAAA,CA9QID,QAAQ;EAAA,QACGR,SAAS;AAAA;AAAA0F,EAAA,GADpBlF,QAAQ;AAgRd,eAAeA,QAAQ;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}