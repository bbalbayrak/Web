{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\PQC\\\\editForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFormById } from './formapi';\nimport { segments } from './renderSegmentContent';\nimport { renderSegmentContent } from './renderSegmentContent';\nimport { initialFormState, fetchItems, handleFormChange, saveForm, handleDragOver } from './pqc_utils';\nimport { addRow, handleInputChange, handleDrop, handleFileSelect } from './rowDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormEdit = () => {\n  _s();\n  var _form$product, _form$vendor;\n  const {\n    id\n  } = useParams();\n  const [form, setForm] = useState(null);\n  const [activeSegment, setActiveSegment] = useState(1);\n  const [formSaved, setFormSaved] = useState(false);\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const formData = await getFormById(id);\n        setForm(formData);\n      } catch (error) {\n        // console.error('Error fetching form:', error);\n      }\n    };\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    if (formSaved) {\n      const fetchData = async () => {\n        try {\n          const formData = await getFormById(id);\n          setForm(formData);\n          setFormSaved(false);\n        } catch (error) {\n          // console.error('Error fetching form:', error);\n        }\n      };\n      fetchData();\n    }\n  }, [formSaved, id]);\n  useEffect(() => {\n    if (form) {\n      const finalPartMeasurementStep = form.steps.find(step => step.name === 'Final Part Measurement');\n      if (finalPartMeasurementStep) {\n        setRows(finalPartMeasurementStep.substeps);\n      }\n    }\n  }, [form]);\n  const handleSegmentClick = order => {\n    setActiveSegment(order);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-edit-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ITP Formu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), form ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Product Name: \", form.product_name || ((_form$product = form.product) === null || _form$product === void 0 ? void 0 : _form$product.name)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Vendor Name: \", form.vendor_name || ((_form$vendor = form.vendor) === null || _form$vendor === void 0 ? void 0 : _form$vendor.name)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segments\",\n        children: segments.map(segment => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSegmentClick(segment.order),\n          className: activeSegment === segment.order ? 'active' : '',\n          children: segment.name\n        }, segment.order, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment-content\",\n        children: renderSegmentContent({\n          activeSegment,\n          form,\n          rows,\n          handleInputChange: handleInputChange(rows, setRows),\n          handleDragOver,\n          handleDrop: handleDrop(rows, setRows),\n          handleFileSelect: handleFileSelect(rows, setRows),\n          addRow: addRow(rows, setRows),\n          saveForm: saveForm(form, rows)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Form y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(FormEdit, \"m5wRg0AM1ysE4Au4gGO4K00vI2o=\", false, function () {\n  return [useParams];\n});\n_c = FormEdit;\nexport default FormEdit;\nvar _c;\n$RefreshReg$(_c, \"FormEdit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getFormById","segments","renderSegmentContent","initialFormState","fetchItems","handleFormChange","saveForm","handleDragOver","addRow","handleInputChange","handleDrop","handleFileSelect","jsxDEV","_jsxDEV","FormEdit","_s","_form$product","_form$vendor","id","form","setForm","activeSegment","setActiveSegment","formSaved","setFormSaved","rows","setRows","fetchData","formData","error","finalPartMeasurementStep","steps","find","step","name","substeps","handleSegmentClick","order","className","children","fileName","_jsxFileName","lineNumber","columnNumber","product_name","product","vendor_name","vendor","map","segment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/PQC/editForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getFormById } from './formapi';\r\nimport { segments } from './renderSegmentContent';\r\nimport { renderSegmentContent } from './renderSegmentContent';\r\nimport { initialFormState, fetchItems, handleFormChange, saveForm, handleDragOver } from './pqc_utils';\r\nimport { addRow, handleInputChange, handleDrop, handleFileSelect } from './rowDetail';\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [form, setForm] = useState(null);\r\n  const [activeSegment, setActiveSegment] = useState(1);\r\n  const [formSaved, setFormSaved] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const formData = await getFormById(id);\r\n        setForm(formData);\r\n      } catch (error) {\r\n        // console.error('Error fetching form:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n  \r\n  useEffect(() => {\r\n    if (formSaved) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const formData = await getFormById(id);\r\n          setForm(formData);\r\n          setFormSaved(false);\r\n        } catch (error) {\r\n          // console.error('Error fetching form:', error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [formSaved, id]);\r\n  useEffect(() => {\r\n    if (form) {\r\n      const finalPartMeasurementStep = form.steps.find(\r\n        (step) => step.name === 'Final Part Measurement'\r\n      );\r\n      if (finalPartMeasurementStep) {\r\n        setRows(finalPartMeasurementStep.substeps);\r\n      }\r\n    }\r\n  }, [form]);\r\n\r\n  const handleSegmentClick = (order) => {\r\n    setActiveSegment(order);\r\n  };\r\n\r\n  return (\r\n    <div className='form-edit-main'>\r\n      <h1>ITP Formu</h1>\r\n      {form ? (\r\n        <div>\r\n          <h2>Product Name: {form.product_name || form.product?.name}</h2>\r\n          <h2>Vendor Name: {form.vendor_name || form.vendor?.name}</h2>\r\n            <div className=\"segments\">\r\n                {segments.map((segment) => (\r\n                <button key={segment.order} onClick={() => handleSegmentClick(segment.order)} className={activeSegment === segment.order ? 'active' : ''} >\r\n                    {segment.name}\r\n                </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"segment-content\">\r\n              {renderSegmentContent({\r\n                activeSegment,\r\n                form,\r\n                rows,\r\n                handleInputChange: handleInputChange(rows, setRows),\r\n                handleDragOver,\r\n                handleDrop: handleDrop(rows, setRows),\r\n                handleFileSelect: handleFileSelect(rows, setRows),\r\n                addRow: addRow(rows, setRows),\r\n                saveForm: saveForm(form, rows),\r\n              })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Form y√ºkleniyor...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default FormEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}