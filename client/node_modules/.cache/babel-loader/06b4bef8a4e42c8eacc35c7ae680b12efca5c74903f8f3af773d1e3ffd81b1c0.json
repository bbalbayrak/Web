{"ast":null,"code":"export const createWork = async workData => {\n  const API_URL = \"http://localhost:3001\";\n  const response = await fetch(`${API_URL}/works`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(workData)\n  });\n  if (!response.ok) {\n    throw new Error(`Error creating work: ${response.statusText}`);\n  }\n  return await response.json();\n};\nexport const createWorkStep = async workStepData => {\n  const API_URL = \"http://localhost:3001\";\n  const response = await fetch(`${API_URL}/worksteps`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(workStepData)\n  });\n  if (!response.ok) {\n    throw new Error(`Error creating workstep: ${response.statusText}`);\n  }\n  return await response.json();\n};","map":{"version":3,"names":["createWork","workData","API_URL","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","json","createWorkStep","workStepData"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/worksapi.js"],"sourcesContent":["export const createWork = async (workData) => {\r\n  const API_URL = \"http://localhost:3001\";\r\n  const response = await fetch(`${API_URL}/works`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(workData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Error creating work: ${response.statusText}`);\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const createWorkStep = async (workStepData) => {\r\n  const API_URL = \"http://localhost:3001\";\r\n  const response = await fetch(`${API_URL}/worksteps`, {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n      body: JSON.stringify(workStepData),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Error creating workstep: ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMC,OAAO,GAAG,uBAAuB;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,OAAQ,QAAO,EAAE;IAC/CG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,wBAAuBR,QAAQ,CAACS,UAAW,EAAC,CAAC;EAChE;EAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,EAAE;AAC9B,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,YAAY,IAAK;EACpD,MAAMb,OAAO,GAAG,uBAAuB;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,OAAQ,YAAW,EAAE;IACnDG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACCC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,YAAY;EACnC,CAAC,CAAC;EAEF,IAAI,CAACZ,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,4BAA2BR,QAAQ,CAACS,UAAW,EAAC,CAAC;EACpE;EAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,EAAE;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}