{"ast":null,"code":"import _slicedToArray from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{MapContainer,TileLayer,Marker,Popup,Polyline}from'react-leaflet';import{getAllLocations}from'./TransfersApi';import{LatLngBounds}from'leaflet';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TransfersDetail=function TransfersDetail(){var _useParams=useParams(),encodedName=_useParams.name;var name=decodeURIComponent(encodedName);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),locations=_useState2[0],setLocations=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filteredLocations=_useState4[0],setFilteredLocations=_useState4[1];var maxBounds=new LatLngBounds([-90,-180],// Güneybatı köşe koordinatları\n[90,180]// Kuzeydoğu köşe koordinatları\n);useEffect(function(){getAllLocations().then(function(response){if(response&&response.location){setLocations(response.location);}else{console.error(\"Response or response.location is null\");}}).catch(function(err){return console.error(err);});},[name]);useEffect(function(){if(locations.length){var filtered=locations.find(function(location){return location.name===name;});if(filtered){setFilteredLocations(filtered.locations);}}},[locations,name]);console.log(\"deneme31\",locations);return/*#__PURE__*/_jsxs(MapContainer,{center:[51.505,-0.09],zoom:1,minZoom:2,maxZoom:17,maxBounds:maxBounds// Harita sınırlarını ayarlayın\n,maxBoundsViscosity:1// Harita sınırlarına yapışkanlık (1: tam sınırlama)\n,style:{height:\"100vh\",width:\"100%\"},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),filteredLocations.map(function(location,index){return/*#__PURE__*/_jsx(Marker,{position:[location.atitude,location.longitude],children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:location.name}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:new Date(parseInt(location.timeStamp)).toLocaleString()})]})})},index);}),/*#__PURE__*/_jsx(Polyline,{positions:filteredLocations.map(function(loc){return[loc.atitude,loc.longitude];}),color:\"red\"})]});};export default TransfersDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","MapContainer","TileLayer","Marker","Popup","Polyline","getAllLocations","LatLngBounds","jsx","_jsx","jsxs","_jsxs","TransfersDetail","_useParams","encodedName","name","decodeURIComponent","_useState","_useState2","_slicedToArray","locations","setLocations","_useState3","_useState4","filteredLocations","setFilteredLocations","maxBounds","then","response","location","console","error","catch","err","length","filtered","find","log","center","zoom","minZoom","maxZoom","maxBoundsViscosity","style","height","width","children","url","attribution","map","index","position","atitude","longitude","Date","parseInt","timeStamp","toLocaleString","positions","loc","color"],"sources":["C:/Users/mtrce/portal-test/client/src/components/Transfers/TransfersDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport { getAllLocations } from './TransfersApi';\r\nimport { LatLngBounds } from 'leaflet';\r\n\r\nconst TransfersDetail = () => {\r\n  const { name: encodedName } = useParams();\r\n  const name = decodeURIComponent(encodedName);\r\n\r\n  const [locations, setLocations] = useState([]);\r\n  const [filteredLocations, setFilteredLocations] = useState([]);\r\n  const maxBounds = new LatLngBounds(\r\n    [-90, -180], // Güneybatı köşe koordinatları\r\n    [90, 180]    // Kuzeydoğu köşe koordinatları\r\n    \r\n  );\r\n  useEffect(() => {\r\n    getAllLocations()\r\n      .then(response => {\r\n        if (response && response.location) {\r\n          setLocations(response.location);\r\n        } else {\r\n          console.error(\"Response or response.location is null\");\r\n        }\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    if (locations.length) {\r\n      const filtered = locations.find((location) => location.name === name);\r\n      if (filtered) {\r\n        setFilteredLocations(filtered.locations);\r\n      }\r\n    }\r\n  }, [locations, name]);\r\n  console.log(\"deneme31\" , locations)\r\n  return (\r\n    <MapContainer\r\n      center={[51.505, -0.09]}\r\n      zoom={1}\r\n      minZoom={2}\r\n      maxZoom={17}\r\n      maxBounds={maxBounds} // Harita sınırlarını ayarlayın\r\n      maxBoundsViscosity={1} // Harita sınırlarına yapışkanlık (1: tam sınırlama)\r\n      style={{ height: \"100vh\", width: \"100%\" }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n\r\n{filteredLocations.map((location, index) => (\r\n  <Marker key={index} position={[location.atitude, location.longitude]}>\r\n    <Popup>\r\n      <div>\r\n        <strong>{location.name}</strong> <br />\r\n        <small>{new Date(parseInt(location.timeStamp)).toLocaleString()}</small>\r\n      </div>\r\n    </Popup>\r\n  </Marker>\r\n))}\r\n\r\n\r\n\r\n\r\n      <Polyline positions={filteredLocations.map(loc => [loc.atitude, loc.longitude,])} color='red' />\r\n\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default TransfersDetail;\r\n"],"mappings":"uHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,YAAY,CAAEC,SAAS,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,eAAe,CAChF,OAASC,eAAe,KAAQ,gBAAgB,CAChD,OAASC,YAAY,KAAQ,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvC,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,CAAS,CAC5B,IAAAC,UAAA,CAA8Bb,SAAS,EAAE,CAA3Bc,WAAW,CAAAD,UAAA,CAAjBE,IAAI,CACZ,GAAM,CAAAA,IAAI,CAAGC,kBAAkB,CAACF,WAAW,CAAC,CAE5C,IAAAG,SAAA,CAAkCnB,QAAQ,CAAC,EAAE,CAAC,CAAAoB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAC9B,IAAAI,UAAA,CAAkDxB,QAAQ,CAAC,EAAE,CAAC,CAAAyB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvDE,iBAAiB,CAAAD,UAAA,IAAEE,oBAAoB,CAAAF,UAAA,IAC9C,GAAM,CAAAG,SAAS,CAAG,GAAI,CAAAnB,YAAY,CAChC,CAAC,CAAC,EAAE,CAAE,CAAC,GAAG,CAAC,CAAE;AACb,CAAC,EAAE,CAAE,GAAG,CAAK;AAAA,CAEd,CACDR,SAAS,CAAC,UAAM,CACdO,eAAe,EAAE,CACdqB,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChB,GAAIA,QAAQ,EAAIA,QAAQ,CAACC,QAAQ,CAAE,CACjCR,YAAY,CAACO,QAAQ,CAACC,QAAQ,CAAC,CACjC,CAAC,IAAM,CACLC,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC,CACxD,CACF,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,GAAG,QAAI,CAAAH,OAAO,CAACC,KAAK,CAACE,GAAG,CAAC,GAAC,CACrC,CAAC,CAAE,CAAClB,IAAI,CAAC,CAAC,CAEVhB,SAAS,CAAC,UAAM,CACd,GAAIqB,SAAS,CAACc,MAAM,CAAE,CACpB,GAAM,CAAAC,QAAQ,CAAGf,SAAS,CAACgB,IAAI,CAAC,SAACP,QAAQ,QAAK,CAAAA,QAAQ,CAACd,IAAI,GAAKA,IAAI,GAAC,CACrE,GAAIoB,QAAQ,CAAE,CACZV,oBAAoB,CAACU,QAAQ,CAACf,SAAS,CAAC,CAC1C,CACF,CACF,CAAC,CAAE,CAACA,SAAS,CAAEL,IAAI,CAAC,CAAC,CACrBe,OAAO,CAACO,GAAG,CAAC,UAAU,CAAGjB,SAAS,CAAC,CACnC,mBACET,KAAA,CAACV,YAAY,EACXqC,MAAM,CAAE,CAAC,MAAM,CAAE,CAAC,IAAI,CAAE,CACxBC,IAAI,CAAE,CAAE,CACRC,OAAO,CAAE,CAAE,CACXC,OAAO,CAAE,EAAG,CACZf,SAAS,CAAEA,SAAW;AAAA,CACtBgB,kBAAkB,CAAE,CAAG;AAAA,CACvBC,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAO,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAC,QAAA,eAE1CrC,IAAA,CAACP,SAAS,EACR6C,GAAG,CAAC,oDAAoD,CACxDC,WAAW,CAAC,0EAA0E,EACtF,CAEPxB,iBAAiB,CAACyB,GAAG,CAAC,SAACpB,QAAQ,CAAEqB,KAAK,qBACrCzC,IAAA,CAACN,MAAM,EAAagD,QAAQ,CAAE,CAACtB,QAAQ,CAACuB,OAAO,CAAEvB,QAAQ,CAACwB,SAAS,CAAE,CAAAP,QAAA,cACnErC,IAAA,CAACL,KAAK,EAAA0C,QAAA,cACJnC,KAAA,QAAAmC,QAAA,eACErC,IAAA,WAAAqC,QAAA,CAASjB,QAAQ,CAACd,IAAI,EAAU,IAAC,cAAAN,IAAA,SAAM,cACvCA,IAAA,UAAAqC,QAAA,CAAQ,GAAI,CAAAQ,IAAI,CAACC,QAAQ,CAAC1B,QAAQ,CAAC2B,SAAS,CAAC,CAAC,CAACC,cAAc,EAAE,EAAS,GACpE,EACA,EANGP,KAAK,CAOT,EACV,CAAC,cAKIzC,IAAA,CAACJ,QAAQ,EAACqD,SAAS,CAAElC,iBAAiB,CAACyB,GAAG,CAAC,SAAAU,GAAG,QAAI,CAACA,GAAG,CAACP,OAAO,CAAEO,GAAG,CAACN,SAAS,CAAE,GAAE,CAACO,KAAK,CAAC,KAAK,EAAG,GAEnF,CAEnB,CAAC,CAED,cAAe,CAAAhD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}