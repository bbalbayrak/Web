{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProductSegment.css';\nimport { getFormByVendorIdAndProductId, getFormByFormId } from './worksapi';\nconst ProductSegment = _ref => {\n  _s();\n  let {\n    product,\n    workInfo\n  } = _ref;\n  const [showContent, setShowContent] = useState(false);\n  const [form, setForm] = useState(null);\n  const [work, setWork] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (workInfo) {\n        const formResponse = await getFormByVendorIdAndProductId(workInfo.data.vendor_id, product.id);\n        if (formResponse) {\n          const formDetails = await getFormByFormId(formResponse.form.id);\n          setForm(formDetails);\n        }\n      }\n    };\n    fetchData();\n  }, [product, workInfo]);\n\n  //   const handleToggleContent = () => {\n  //     setShowContent(!showContent);\n  //   };\n\n  //   const handleToggleSubsteps = (stepIndex) => {\n  //     const updatedSteps = form.steps.map((step, index) => {\n  //       if (index === stepIndex) {\n  //         return {\n  //           ...step,\n  //           showSubsteps: !step.showSubsteps,\n  //         };\n  //       }\n  //       return step;\n  //     });\n  //     setForm({ ...form, steps: updatedSteps });\n  //   };\n\n  //   return (\n  //     <div className=\"product-segment\">\n  //       <button onClick={handleToggleContent} className={showContent ? 'active' : ''}>\n  //         {product.name}\n  //       </button>\n  //       {showContent && (\n  //         <div className=\"segment-content\">\n  //           {form && (\n  //             <div>\n  //               <h4>Steps</h4>\n  //               {form.steps.map((step, index) => (\n  //                 <div key={step.name}>\n  //                     <button onClick={() => handleToggleSubsteps(index)}>\n  //                     {step.name}\n  //                     </button>\n  //                     {step.showSubsteps && (\n  //                     <div>\n  //                         {step.substeps.map((substep) => (\n  //                         <div key={substep.id}>\n  //                           <p>Technical Drawing Numbering: {substep.technical_drawing_numbering}</p>\n  //                           <p>Tools: {substep.tools}</p>\n  //                           <p>Description: {substep.description}</p>\n  //                           <p>Actual Dimension: {substep.actual_dimension}</p>\n  //                           <p>Lower Tolerance: {substep.lower_tolerance}</p>\n  //                           <p>Upper Tolerance: {substep.upper_tolerance}</p>\n  //                           {/* Daha fazla bilgi ekleyebilirsiniz */}\n  //                         </div>\n  //                       ))}\n  //                     </div>\n  //                   )}\n  //                 </div>\n  //               ))}\n  //             </div>\n  //           )}\n  //         </div>\n  //       )}\n  //     </div>\n  //   );\n};\n_s(ProductSegment, \"NVjTrNO59qF2dVa8uXr9zbmFtOc=\");\n_c = ProductSegment;\nexport default ProductSegment;\nvar _c;\n$RefreshReg$(_c, \"ProductSegment\");","map":{"version":3,"names":["React","useState","useEffect","getFormByVendorIdAndProductId","getFormByFormId","ProductSegment","_ref","_s","product","workInfo","showContent","setShowContent","form","setForm","work","setWork","fetchData","formResponse","data","vendor_id","id","formDetails","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/ProductSegment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ProductSegment.css';\r\nimport { getFormByVendorIdAndProductId, getFormByFormId } from './worksapi';\r\n\r\nconst ProductSegment = ({ product, workInfo }) => {\r\n  const [showContent, setShowContent] = useState(false);\r\n  const [form, setForm] = useState(null);\r\n  const [work, setWork] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (workInfo) {\r\n        const formResponse = await getFormByVendorIdAndProductId(\r\n          workInfo.data.vendor_id,\r\n          product.id\r\n        );\r\n  \r\n        if (formResponse) {\r\n          const formDetails = await getFormByFormId(formResponse.form.id);\r\n          setForm(formDetails);\r\n        }\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [product, workInfo]);\r\n\r\n//   const handleToggleContent = () => {\r\n//     setShowContent(!showContent);\r\n//   };\r\n  \r\n//   const handleToggleSubsteps = (stepIndex) => {\r\n//     const updatedSteps = form.steps.map((step, index) => {\r\n//       if (index === stepIndex) {\r\n//         return {\r\n//           ...step,\r\n//           showSubsteps: !step.showSubsteps,\r\n//         };\r\n//       }\r\n//       return step;\r\n//     });\r\n//     setForm({ ...form, steps: updatedSteps });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"product-segment\">\r\n//       <button onClick={handleToggleContent} className={showContent ? 'active' : ''}>\r\n//         {product.name}\r\n//       </button>\r\n//       {showContent && (\r\n//         <div className=\"segment-content\">\r\n//           {form && (\r\n//             <div>\r\n//               <h4>Steps</h4>\r\n//               {form.steps.map((step, index) => (\r\n//                 <div key={step.name}>\r\n//                     <button onClick={() => handleToggleSubsteps(index)}>\r\n//                     {step.name}\r\n//                     </button>\r\n//                     {step.showSubsteps && (\r\n//                     <div>\r\n//                         {step.substeps.map((substep) => (\r\n//                         <div key={substep.id}>\r\n//                           <p>Technical Drawing Numbering: {substep.technical_drawing_numbering}</p>\r\n//                           <p>Tools: {substep.tools}</p>\r\n//                           <p>Description: {substep.description}</p>\r\n//                           <p>Actual Dimension: {substep.actual_dimension}</p>\r\n//                           <p>Lower Tolerance: {substep.lower_tolerance}</p>\r\n//                           <p>Upper Tolerance: {substep.upper_tolerance}</p>\r\n//                           {/* Daha fazla bilgi ekleyebilirsiniz */}\r\n//                         </div>\r\n//                       ))}\r\n//                     </div>\r\n//                   )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n};\r\n\r\nexport default ProductSegment;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAC7B,SAASC,6BAA6B,EAAEC,eAAe,QAAQ,YAAY;AAE3E,MAAMC,cAAc,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC3C,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAGtCC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIP,QAAQ,EAAE;QACZ,MAAMQ,YAAY,GAAG,MAAMd,6BAA6B,CACtDM,QAAQ,CAACS,IAAI,CAACC,SAAS,EACvBX,OAAO,CAACY,EAAE,CACX;QAED,IAAIH,YAAY,EAAE;UAChB,MAAMI,WAAW,GAAG,MAAMjB,eAAe,CAACa,YAAY,CAACL,IAAI,CAACQ,EAAE,CAAC;UAC/DP,OAAO,CAACQ,WAAW,CAAC;QACtB;MACF;IACF,CAAC;IAEDL,SAAS,EAAE;EACb,CAAC,EAAE,CAACR,OAAO,EAAEC,QAAQ,CAAC,CAAC;;EAEzB;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC;AAACF,EAAA,CA/EIF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAiFpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}