{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\QMControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getWorkById, getProductById, postQRQuestions, createWorkStep, updateWorkStepStatus, getQRQuestionsByWorkId, updateQRQuestion } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QMControl = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [work, setWork] = useState(null);\n  const [qrQuestions, setQrQuestions] = useState([]);\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\n      setQrQuestions(qrQuestionsData.data);\n    };\n    fetchData();\n  }, [location]);\n  const handleSave = () => {\n    // Save işlemini gerçekleştirebilirsiniz\n  };\n  const handleInputChange = (index, value) => {\n    const newQRQuestions = [...qrQuestions];\n    newQRQuestions[index].input_text = value;\n    setQrQuestions(newQRQuestions);\n  };\n  const handleCheckboxChange = index => {\n    const newQRQuestions = [...qrQuestions];\n    newQRQuestions[index].checkbox = !newQRQuestions[index].checkbox;\n    setQrQuestions(newQRQuestions);\n  };\n  const handleSend = async () => {\n    try {\n      // QR sorularını güncelle\n      await Promise.all(qrQuestions.map(async question => {\n        await updateQRQuestion(question.id, {\n          ...question,\n          input_text: question.input_text,\n          checkbox: question.checkbox\n        });\n      }));\n\n      // Yeni bir work step oluştur\n      const workStepData = {\n        work_id: work.data.id,\n        step_name: 'Vendor Control',\n        timestamp: new Date().toISOString(),\n        state: 'Vendor Control',\n        status: 'Open'\n      };\n      const newWorkStep = await createWorkStep(workStepData);\n      await updateWorkStepStatus(step_id, 'Closed');\n      navigate(`/workorders`);\n    } catch (error) {\n      console.error('Error updating QR questions and creating work step:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), work && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Work Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Number: \", work.data.order_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Project Number: \", work.data.project_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product: \", work.data.product_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [qrQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `question-${index}`,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: `input-${index}`,\n          value: question.input_text,\n          onChange: e => handleInputChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: `checkbox-${index}`,\n          checked: question.checkbox,\n          onChange: () => handleCheckboxChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSave,\n        className: \"btn btn-primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSend,\n        className: \"btn btn-success\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(QMControl, \"hWI4vnUYS6rHOoPGL4McHYB4Fvo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QMControl;\nexport default QMControl;\nvar _c;\n$RefreshReg$(_c, \"QMControl\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getWorkById","getProductById","postQRQuestions","createWorkStep","updateWorkStepStatus","getQRQuestionsByWorkId","updateQRQuestion","jsxDEV","_jsxDEV","QMControl","_s","location","navigate","work","setWork","qrQuestions","setQrQuestions","searchParams","URLSearchParams","search","work_id","get","step_id","fetchData","workData","qrQuestionsData","data","handleSave","handleInputChange","index","value","newQRQuestions","input_text","handleCheckboxChange","checkbox","handleSend","Promise","all","map","question","id","workStepData","step_name","timestamp","Date","toISOString","state","status","newWorkStep","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","order_number","project_number","product_id","className","htmlFor","type","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/QMControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  getWorkById,\r\n  getProductById,\r\n  postQRQuestions,\r\n  createWorkStep,\r\n  updateWorkStepStatus,\r\n  getQRQuestionsByWorkId,\r\n  updateQRQuestion\r\n} from './worksapi';\r\n\r\nconst QMControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [work, setWork] = useState(null);\r\n  const [qrQuestions, setQrQuestions] = useState([]);\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\r\n      setQrQuestions(qrQuestionsData.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n\r\n  const handleSave = () => {\r\n    // Save işlemini gerçekleştirebilirsiniz\r\n  };\r\n  const handleInputChange = (index, value) => {\r\n    const newQRQuestions = [...qrQuestions];\r\n    newQRQuestions[index].input_text = value;\r\n    setQrQuestions(newQRQuestions); \r\n};\r\n\r\nconst handleCheckboxChange = (index) => {\r\n    const newQRQuestions = [...qrQuestions];\r\n    newQRQuestions[index].checkbox = !newQRQuestions[index].checkbox;\r\n    setQrQuestions(newQRQuestions); \r\n};\r\n  \r\n  const handleSend = async () => {\r\n    try {\r\n      // QR sorularını güncelle\r\n      await Promise.all(\r\n        qrQuestions.map(async (question) => {\r\n          await updateQRQuestion(question.id, {\r\n            ...question,\r\n            input_text: question.input_text,\r\n            checkbox: question.checkbox,\r\n          });\r\n        })\r\n      );\r\n  \r\n      // Yeni bir work step oluştur\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'Vendor Control',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'Vendor Control',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n  \r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      console.error('Error updating QR questions and creating work step:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>QM Control</h2>\r\n      {work && (\r\n        <div>\r\n          <h3>Work Details</h3>\r\n          <p>Order Number: {work.data.order_number}</p>\r\n          <p>Project Number: {work.data.project_number}</p>\r\n          <p>Product: {work.data.product_id}</p>\r\n          {/* Diğer iş detaylarını istediğiniz şekilde burada gösterebilirsiniz */}\r\n        </div>\r\n      )}\r\n      <form>\r\n        {qrQuestions.map((question, index) => (\r\n          <div key={question.id} className=\"form-group\">\r\n            <label htmlFor={`question-${index}`}>\r\n              {question.question}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id={`input-${index}`}\r\n              value={question.input_text}\r\n              onChange={(e) => handleInputChange(index, e.target.value)}\r\n            />\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id={`checkbox-${index}`}\r\n              checked={question.checkbox}\r\n              onChange={() => handleCheckboxChange(index)}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleSave} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\" onClick={handleSend} className=\"btn btn-success\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default QMControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}