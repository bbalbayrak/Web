{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtrce\\\\portal-test\\\\client\\\\src\\\\components\\\\FormsPage\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [odooid, setOdooid] = useState('');\n  const [customerId, setCustomerId] = useState('');\n  const [technicalDrawingFile, setTechnicalDrawingFile] = useState(null);\n  const [guideFile, setGuideFile] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('http://localhost:3001/customers');\n        setCustomers(data.data);\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    };\n    fetchCustomers();\n  }, []);\n  const handleSubmit = async e => {\n    // ...handleSubmit içeriği aynı kalıyor...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"M\\xFC\\u015Fteri \\u0130simleri:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: customerId,\n        onChange: e => setCustomerId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"M\\xFC\\u015Fteri se\\xE7in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: customer.id,\n          children: customer.name\n        }, customer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"9REOgsP2WMpFey32FMCaj8fQiOs=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UploadForm","_s","name","setName","odooid","setOdooid","customerId","setCustomerId","technicalDrawingFile","setTechnicalDrawingFile","guideFile","setGuideFile","response","setResponse","customers","setCustomers","fetchCustomers","data","get","error","console","handleSubmit","e","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","customer","id","_c","$RefreshReg$"],"sources":["C:/Users/mtrce/portal-test/client/src/components/FormsPage/UploadForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [odooid, setOdooid] = useState('');\r\n  const [customerId, setCustomerId] = useState('');\r\n  const [technicalDrawingFile, setTechnicalDrawingFile] = useState(null);\r\n  const [guideFile, setGuideFile] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCustomers = async () => {\r\n      try {\r\n        const { data } = await axios.get('http://localhost:3001/customers');\r\n        setCustomers(data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching customers:', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    // ...handleSubmit içeriği aynı kalıyor...\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ...form ve inputlar aynı kalıyor... */}\r\n        <label>\r\n          Müşteri İsimleri:\r\n          <select value={customerId} onChange={(e) => setCustomerId(e.target.value)}>\r\n            <option value=\"\">Müşteri seçin</option>\r\n            {customers.map((customer) => (\r\n              <option key={customer.id} value={customer.id}>\r\n                {customer.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      {/* ...form ve inputlar aynı kalıyor... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMoB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,iCAAiC,CAAC;QACnEH,YAAY,CAACE,IAAI,CAACA,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDH,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC;EAAA,CACD;EAED,oBACEvB,OAAA;IAAAwB,QAAA,eAEIxB,OAAA;MAAAwB,QAAA,GAAO,gCAEL,eAAAxB,OAAA;QAAQyB,KAAK,EAAElB,UAAW;QAACmB,QAAQ,EAAGH,CAAC,IAAKf,aAAa,CAACe,CAAC,CAACI,MAAM,CAACF,KAAK,CAAE;QAAAD,QAAA,gBACxExB,OAAA;UAAQyB,KAAK,EAAC,EAAE;UAAAD,QAAA,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,EACtChB,SAAS,CAACiB,GAAG,CAAEC,QAAQ,iBACtBjC,OAAA;UAA0ByB,KAAK,EAAEQ,QAAQ,CAACC,EAAG;UAAAV,QAAA,EAC1CS,QAAQ,CAAC9B;QAAI,GADH8B,QAAQ,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAEV,CAAC;AAAC7B,EAAA,CA3CID,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}