{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\Certificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { createWorkStep, updateWorkStepStatus } from './worksapi';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Certificate = _ref => {\n  _s();\n  let {\n    workId,\n    productId,\n    stepId\n  } = _ref;\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  const handleSend = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('certificate_file', file);\n      formData.append('work_id', workId);\n      formData.append('product_id', productId);\n      formData.append('step_id', stepId);\n      try {\n        await axios.post('/certificates', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // Update current work step status to 'Closed'\n    try {\n      await updateWorkStepStatus(stepId, 'Closed');\n    } catch (error) {\n      console.error(`Error updating work step status: ${error.message}`);\n    }\n\n    // Create new work step with name \"QR Certificate\"\n    try {\n      const newWorkStepData = {\n        name: 'QR Certificate',\n        work_id: workId,\n        status: 'Open'\n      };\n      await createWorkStep(newWorkStepData);\n    } catch (error) {\n      console.error(`Error creating new work step: ${error.message}`);\n    }\n    navigate('/workorders');\n  };\n  const handleContinueWithoutSending = () => {\n    navigate('/workorders');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: \"btn btn-primary\",\n      children: \"G\\xF6nder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleContinueWithoutSending,\n      className: \"btn btn-secondary\",\n      children: \"G\\xF6ndermeden Devam Et\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Certificate, \"a8hUmGYItl0fyIx8Tvn6au4ZieE=\", false, function () {\n  return [useNavigate];\n});\n_c = Certificate;\nexport default Certificate;\nvar _c;\n$RefreshReg$(_c, \"Certificate\");","map":{"version":3,"names":["React","useState","axios","createWorkStep","updateWorkStepStatus","useNavigate","jsxDEV","_jsxDEV","Certificate","_ref","_s","workId","productId","stepId","file","setFile","navigate","handleSend","formData","FormData","append","post","headers","error","console","message","newWorkStepData","name","work_id","status","handleContinueWithoutSending","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/Certificate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { createWorkStep, updateWorkStepStatus } from './worksapi';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Certificate = ({ workId, productId, stepId }) => {\r\n  const [file, setFile] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSend = async () => {\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('certificate_file', file);\r\n      formData.append('work_id', workId);\r\n      formData.append('product_id', productId);\r\n      formData.append('step_id', stepId);\r\n  \r\n      try {\r\n        await axios.post('/certificates', formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  \r\n    // Update current work step status to 'Closed'\r\n    try {\r\n      await updateWorkStepStatus(stepId, 'Closed');\r\n    } catch (error) {\r\n      console.error(`Error updating work step status: ${error.message}`);\r\n    }\r\n  \r\n    // Create new work step with name \"QR Certificate\"\r\n    try {\r\n      const newWorkStepData = {\r\n        name: 'QR Certificate',\r\n        work_id: workId,\r\n        status: 'Open',\r\n      };\r\n      await createWorkStep(newWorkStepData);\r\n    } catch (error) {\r\n      console.error(`Error creating new work step: ${error.message}`);\r\n    }\r\n  \r\n    navigate('/workorders');\r\n  };\r\n\r\n  const handleContinueWithoutSending = () => {\r\n    navigate('/workorders');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Certificate</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleSend} className=\"btn btn-primary\">\r\n        Gönder\r\n      </button>\r\n      <button onClick={handleContinueWithoutSending} className=\"btn btn-secondary\">\r\n        Göndermeden Devam Et\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificate;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}