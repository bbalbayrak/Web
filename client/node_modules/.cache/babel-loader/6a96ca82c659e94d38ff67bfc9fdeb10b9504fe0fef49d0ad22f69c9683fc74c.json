{"ast":null,"code":"import axios from 'axios';\nconst FORMS_API_URL = 'http://localhost:3001/forms';\nexport const getFormstable = async () => {\n  try {\n    const response = await axios.get(FORMS_API_URL);\n    return response.data.data;\n  } catch (error) {\n    console.error('Error fetching forms:', error);\n    throw error;\n  }\n};\nconst FORMS_API_URL2 = 'http://localhost:3001/allforms';\nexport const getFormById = async id => {\n  try {\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching form:', error);\n    throw error;\n  }\n};\nconst saveForm = async () => {\n  const postData = {\n    id: form.id,\n    product_name: form.product_name,\n    vendor_name: form.vendor_name,\n    steps: segments.map((segment, index) => ({\n      name: segment.name,\n      order: segment.order,\n      substeps: index === 1 ? rows : [] // Final Part Measurement segment için rows, diğerleri için boş array\n    }))\n  };\n};","map":{"version":3,"names":["axios","FORMS_API_URL","getFormstable","response","get","data","error","console","FORMS_API_URL2","getFormById","id","saveForm","postData","form","product_name","vendor_name","steps","segments","map","segment","index","name","order","substeps","rows"],"sources":["C:/Users/mtrce/portal-test/client/src/components/ITPForms/formapi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst FORMS_API_URL = 'http://localhost:3001/forms';\r\n\r\nexport const getFormstable = async () => {\r\n  try {\r\n    const response = await axios.get(FORMS_API_URL);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Error fetching forms:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst FORMS_API_URL2 = 'http://localhost:3001/allforms';\r\n\r\nexport const getFormById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching form:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst saveForm = async () => {\r\n  const postData = {\r\n    id: form.id,\r\n    product_name: form.product_name,\r\n    vendor_name: form.vendor_name,\r\n    steps: segments.map((segment, index) => ({\r\n      name: segment.name,\r\n      order: segment.order,\r\n      substeps: index === 1 ? rows : [], // Final Part Measurement segment için rows, diğerleri için boş array\r\n    })),\r\n  }}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG,6BAA6B;AAEnD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,aAAa,CAAC;IAC/C,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAME,cAAc,GAAG,gCAAgC;AAEvD,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEI,cAAe,IAAGE,EAAG,EAAC,CAAC;IAC3D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMK,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAC3B,MAAMC,QAAQ,GAAG;IACfF,EAAE,EAAEG,IAAI,CAACH,EAAE;IACXI,YAAY,EAAED,IAAI,CAACC,YAAY;IAC/BC,WAAW,EAAEF,IAAI,CAACE,WAAW;IAC7BC,KAAK,EAAEC,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,MAAM;MACvCC,IAAI,EAAEF,OAAO,CAACE,IAAI;MAClBC,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBC,QAAQ,EAAEH,KAAK,KAAK,CAAC,GAAGI,IAAI,GAAG,EAAE,CAAE;IACrC,CAAC,CAAC;EACJ,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}