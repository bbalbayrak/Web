{"ast":null,"code":"import { createOrUpdateForm } from './formapi';\nimport { segments } from './renderSegmentContent';\nexport const initialFormState = {\n  product_id: null,\n  vendor_id: null,\n  steps: segments.map((segment, index) => ({\n    name: segment.name,\n    order: segment.order,\n    substeps: []\n  }))\n};\nexport const fetchItems = async (getter, setter) => {\n  try {\n    const response = await getter();\n    setter(response.data);\n  } catch (error) {\n    // console.error(`Error fetching items: ${error}`);\n  }\n};\nexport const handleFormChange = (form, setForm) => e => {\n  setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n};\nexport const handleDragOver = e => {\n  e.preventDefault();\n};\nexport const saveForm = (form, rows) => async () => {\n  console.log(\"FFFFF\", form);\n  console.log(\"XxXxXxXxX\", rows);\n  const postData = {\n    ...(form.id && {\n      id: form.id\n    }),\n    id: form.id,\n    product_id: form.product_id,\n    vendor_id: form.vendor_id,\n    steps: segments.map((segment, index) => ({\n      name: segment.name,\n      order: segment.order,\n      substeps: index === 1 ? rows.map(row => {\n        const {\n          id,\n          technical_drawing_numbering,\n          tools,\n          description,\n          actual_dimension,\n          lower_tolerance,\n          upper_tolerance,\n          sample_quantity,\n          example_visual_url,\n          row_number\n        } = row;\n        return {\n          ...(id && {\n            id\n          }),\n          technical_drawing_numbering,\n          tools,\n          description,\n          actual_dimension,\n          lower_tolerance,\n          upper_tolerance,\n          sample_quantity,\n          example_visual_url,\n          row_number\n        };\n      }) : []\n    }))\n  };\n  try {\n    console.log(\"postData:\", postData);\n    await createOrUpdateForm(postData);\n  } catch (error) {\n    throw new Error(`Error saving form: ${error}`);\n  }\n};","map":{"version":3,"names":["createOrUpdateForm","segments","initialFormState","product_id","vendor_id","steps","map","segment","index","name","order","substeps","fetchItems","getter","setter","response","data","error","handleFormChange","form","setForm","e","target","value","handleDragOver","preventDefault","saveForm","rows","console","log","postData","id","row","technical_drawing_numbering","tools","description","actual_dimension","lower_tolerance","upper_tolerance","sample_quantity","example_visual_url","row_number","Error"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/PQC/pqc_utils.js"],"sourcesContent":["import { createOrUpdateForm } from './formapi';\r\nimport { segments } from './renderSegmentContent';\r\n\r\nexport const initialFormState = {\r\n    product_id: null,\r\n    vendor_id: null,\r\n    steps: segments.map((segment, index) => ({\r\n      name: segment.name,\r\n      order: segment.order,\r\n      substeps: [],\r\n    })),\r\n  };\r\n  \r\n  export const fetchItems = async (getter, setter) => {\r\n    try {\r\n      const response = await getter();\r\n      setter(response.data);\r\n    } catch (error) {\r\n      // console.error(`Error fetching items: ${error}`);\r\n    }\r\n  };\r\n  \r\n  export const handleFormChange = (form, setForm) => e => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  export const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  \r\n  export const saveForm = (form, rows) => async () => {\r\n    console.log(\"FFFFF\", form)\r\n    console.log(\"XxXxXxXxX\",rows);\r\n    const postData = {\r\n      ...(form.id && { id: form.id }),\r\n      id: form.id,\r\n      product_id: form.product_id,\r\n      vendor_id: form.vendor_id,\r\n      steps: segments.map((segment, index) => ({\r\n        name: segment.name,\r\n        order: segment.order,\r\n        substeps: index === 1 ? rows.map(row => {\r\n          const {\r\n            id,\r\n            technical_drawing_numbering,\r\n            tools,\r\n            description,\r\n            actual_dimension,\r\n            lower_tolerance,\r\n            upper_tolerance,\r\n            sample_quantity,\r\n            example_visual_url,\r\n            row_number\r\n          } = row;\r\n          return {\r\n            ...(id && { id }),\r\n            technical_drawing_numbering,\r\n            tools,\r\n            description,\r\n            actual_dimension,\r\n            lower_tolerance,\r\n            upper_tolerance,\r\n            sample_quantity,\r\n            example_visual_url,\r\n            row_number\r\n          };\r\n        }) : [],\r\n      })),\r\n    };\r\n\r\n    try {\r\n      console.log(\"postData:\", postData)\r\n      await createOrUpdateForm(postData);\r\n    } catch (error) {\r\n      throw new Error(`Error saving form: ${error}`);\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,WAAW;AAC9C,SAASC,QAAQ,QAAQ,wBAAwB;AAEjD,OAAO,MAAMC,gBAAgB,GAAG;EAC5BC,UAAU,EAAE,IAAI;EAChBC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAEJ,QAAQ,CAACK,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,MAAM;IACvCC,IAAI,EAAEF,OAAO,CAACE,IAAI;IAClBC,KAAK,EAAEH,OAAO,CAACG,KAAK;IACpBC,QAAQ,EAAE;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,EAAE;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;EAAA;AAEJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAKC,CAAC,IAAI;EACtDD,OAAO,CAAC;IAAE,GAAGD,IAAI;IAAE,CAACE,CAAC,CAACC,MAAM,CAACb,IAAI,GAAGY,CAAC,CAACC,MAAM,CAACC;EAAM,CAAC,CAAC;AACvD,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIH,CAAC,IAAK;EACnCA,CAAC,CAACI,cAAc,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACP,IAAI,EAAEQ,IAAI,KAAK,YAAY;EAClDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEV,IAAI,CAAC;EAC1BS,OAAO,CAACC,GAAG,CAAC,WAAW,EAACF,IAAI,CAAC;EAC7B,MAAMG,QAAQ,GAAG;IACf,IAAIX,IAAI,CAACY,EAAE,IAAI;MAAEA,EAAE,EAAEZ,IAAI,CAACY;IAAG,CAAC,CAAC;IAC/BA,EAAE,EAAEZ,IAAI,CAACY,EAAE;IACX5B,UAAU,EAAEgB,IAAI,CAAChB,UAAU;IAC3BC,SAAS,EAAEe,IAAI,CAACf,SAAS;IACzBC,KAAK,EAAEJ,QAAQ,CAACK,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,MAAM;MACvCC,IAAI,EAAEF,OAAO,CAACE,IAAI;MAClBC,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBC,QAAQ,EAAEH,KAAK,KAAK,CAAC,GAAGmB,IAAI,CAACrB,GAAG,CAAC0B,GAAG,IAAI;QACtC,MAAM;UACJD,EAAE;UACFE,2BAA2B;UAC3BC,KAAK;UACLC,WAAW;UACXC,gBAAgB;UAChBC,eAAe;UACfC,eAAe;UACfC,eAAe;UACfC,kBAAkB;UAClBC;QACF,CAAC,GAAGT,GAAG;QACP,OAAO;UACL,IAAID,EAAE,IAAI;YAAEA;UAAG,CAAC,CAAC;UACjBE,2BAA2B;UAC3BC,KAAK;UACLC,WAAW;UACXC,gBAAgB;UAChBC,eAAe;UACfC,eAAe;UACfC,eAAe;UACfC,kBAAkB;UAClBC;QACF,CAAC;MACH,CAAC,CAAC,GAAG;IACP,CAAC,CAAC;EACJ,CAAC;EAED,IAAI;IACFb,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;IAClC,MAAM9B,kBAAkB,CAAC8B,QAAQ,CAAC;EACpC,CAAC,CAAC,OAAOb,KAAK,EAAE;IACd,MAAM,IAAIyB,KAAK,CAAE,sBAAqBzB,KAAM,EAAC,CAAC;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}