{"ast":null,"code":"import { uploadImageToAzure } from \"./formapi\";\nexport const addRow = (rows, setRows) => () => {\n  console.log(\"rowDetail: \", rows);\n  const newRow = {\n    row_number: rows.length + 1,\n    name: '',\n    technical_drawing_numbering: '',\n    tools: '',\n    description: '',\n    actual_dimension: '',\n    lower_tolerance: '',\n    upper_tolerance: '',\n    sample_quantity: '',\n    example_visual_url: ''\n  };\n  setRows([...rows, newRow]);\n};\nexport const handleInputChange = (rows, setRows) => (e, rowNumber, key) => {\n  const newRows = rows.map(row => {\n    if (row.row_number === rowNumber) {\n      return {\n        ...row,\n        [key]: e.target.value\n      };\n    } else {\n      return row;\n    }\n  });\n  setRows(newRows);\n};\nexport const handleDrop = (rows, setRows) => (e, rowId) => {\n  e.preventDefault();\n  const file = e.dataTransfer.files[0];\n  if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\n    handleFileUpload(rows, setRows)(file, rowId);\n  } else {\n    alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\n  }\n};\nexport const handleFileSelect = (rows, setRows) => (e, rowId) => {\n  const file = e.target.files[0];\n  if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\n    handleFileUpload(rows, setRows)(file, rowId);\n  } else {\n    alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\n  }\n};\nexport const handleFileUpload = (rows, setRows) => async (file, rowId) => {\n  try {\n    console.log(\"handleFileUpload called\");\n    console.log(`Uploading file: ${file.name}`);\n    const imageUrl = await uploadImageToAzure(file);\n    console.log(`Uploaded file URL: ${imageUrl}`);\n    setRows(rows.map(row => row.row_number === rowId ? {\n      ...row,\n      example_visual_url: imageUrl\n    } : row));\n  } catch (error) {\n    console.error(`Error uploading file for row ${rowId}:`, error.message, error);\n  }\n};","map":{"version":3,"names":["uploadImageToAzure","addRow","rows","setRows","console","log","newRow","row_number","length","name","technical_drawing_numbering","tools","description","actual_dimension","lower_tolerance","upper_tolerance","sample_quantity","example_visual_url","handleInputChange","e","rowNumber","key","newRows","map","row","target","value","handleDrop","rowId","preventDefault","file","dataTransfer","files","type","handleFileUpload","alert","handleFileSelect","imageUrl","error","message"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/PQC/rowDetail.js"],"sourcesContent":["import { uploadImageToAzure } from \"./formapi\";\r\n\r\n  export const addRow = (rows, setRows) => () => {\r\n    console.log(\"rowDetail: \",rows)\r\n    const newRow = {\r\n      row_number: rows.length + 1,\r\n      name: '',\r\n      technical_drawing_numbering: '',\r\n      tools: '',\r\n      description: '',\r\n      actual_dimension: '',\r\n      lower_tolerance: '',\r\n      upper_tolerance: '',\r\n      sample_quantity: '',\r\n      example_visual_url: '',\r\n    };\r\n    setRows([...rows, newRow]);\r\n  };\r\n  \r\n  export const handleInputChange = (rows, setRows) => (e, rowNumber, key) => {\r\n    const newRows = rows.map(row => {\r\n      if (row.row_number === rowNumber) {\r\n        return { ...row, [key]: e.target.value };\r\n      } else {\r\n        return row;\r\n      }\r\n    });\r\n    setRows(newRows);\r\n  };\r\n\r\n  export const handleDrop = (rows, setRows) => (e, rowId) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n      handleFileUpload(rows, setRows)(file, rowId);\r\n    } else {\r\n      alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n    }\r\n  };\r\n\r\n  export const handleFileSelect = (rows, setRows) => (e, rowId) => {\r\n    const file = e.target.files[0];\r\n    if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {\r\n      handleFileUpload(rows, setRows)(file, rowId);\r\n    } else {\r\n      alert('Lütfen sadece PNG veya JPEG dosyaları yükleyin.');\r\n    }\r\n  };\r\n\r\n  export const handleFileUpload = (rows, setRows) => async (file, rowId) => {\r\n    try {\r\n      console.log(\"handleFileUpload called\");\r\n      console.log(`Uploading file: ${file.name}`);\r\n      const imageUrl = await uploadImageToAzure(file);\r\n      console.log(`Uploaded file URL: ${imageUrl}`);\r\n      setRows(rows.map(row => row.row_number === rowId ? {...row, example_visual_url: imageUrl} : row));\r\n    } catch (error) {\r\n      console.error(`Error uploading file for row ${rowId}:`, error.message, error);\r\n    }\r\n  };\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}