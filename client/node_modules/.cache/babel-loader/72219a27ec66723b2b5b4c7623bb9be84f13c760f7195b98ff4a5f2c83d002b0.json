{"ast":null,"code":"import axios from 'axios';\nconst FORMS_API_URL = 'http://localhost:3001/forms';\nexport const getFormstable = async () => {\n  try {\n    const response = await axios.get(FORMS_API_URL);\n    return response.data.data;\n  } catch (error) {\n    console.error('Error fetching forms:', error);\n    throw error;\n  }\n};\nconst FORMS_API_URL2 = 'http://localhost:3001/allforms';\nexport const getFormById = async id => {\n  try {\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching form:', error);\n    throw error;\n  }\n};\nexport const createOrUpdateForm = async formData => {\n  const apiUrl = 'http://localhost:3001/forms';\n  const promises = formData.steps.map(async step => {\n    if (step.substeps.length > 0) {\n      step.substeps = await Promise.all(step.substeps.map(async substep => {\n        if (substep.id) {\n          const response = await fetch(`${apiUrl}/${substep.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(substep)\n          });\n          return await response.json();\n        } else {\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(substep)\n          });\n          return await response.json();\n        }\n      }));\n    }\n  });\n  await Promise.all(promises);\n};","map":{"version":3,"names":["axios","FORMS_API_URL","getFormstable","response","get","data","error","console","FORMS_API_URL2","getFormById","id","createOrUpdateForm","formData","apiUrl","promises","steps","map","step","substeps","length","Promise","all","substep","fetch","method","headers","body","JSON","stringify","json"],"sources":["C:/Users/mtrce/portal-test/client/src/components/ITPForms/formapi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst FORMS_API_URL = 'http://localhost:3001/forms';\r\n\r\nexport const getFormstable = async () => {\r\n  try {\r\n    const response = await axios.get(FORMS_API_URL);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Error fetching forms:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst FORMS_API_URL2 = 'http://localhost:3001/allforms';\r\n\r\nexport const getFormById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${FORMS_API_URL2}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching form:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createOrUpdateForm = async (formData) => {\r\n  const apiUrl = 'http://localhost:3001/forms';\r\n\r\n  const promises = formData.steps.map(async (step) => {\r\n    if (step.substeps.length > 0) {\r\n      step.substeps = await Promise.all(step.substeps.map(async (substep) => {\r\n        if (substep.id) {\r\n          const response = await fetch(`${apiUrl}/${substep.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(substep),\r\n          });\r\n          return await response.json();\r\n        } else {\r\n          const response = await fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(substep),\r\n          });\r\n          return await response.json();\r\n        }\r\n      }));\r\n    }\r\n  });\r\n\r\n  await Promise.all(promises);\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG,6BAA6B;AAEnD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,aAAa,CAAC;IAC/C,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAME,cAAc,GAAG,gCAAgC;AAEvD,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEI,cAAe,IAAGE,EAAG,EAAC,CAAC;IAC3D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,MAAMC,MAAM,GAAG,6BAA6B;EAE5C,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,KAAK,CAACC,GAAG,CAAC,MAAOC,IAAI,IAAK;IAClD,IAAIA,IAAI,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MAC5BF,IAAI,CAACC,QAAQ,GAAG,MAAME,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,QAAQ,CAACF,GAAG,CAAC,MAAOM,OAAO,IAAK;QACrE,IAAIA,OAAO,CAACZ,EAAE,EAAE;UACd,MAAMP,QAAQ,GAAG,MAAMoB,KAAK,CAAE,GAAEV,MAAO,IAAGS,OAAO,CAACZ,EAAG,EAAC,EAAE;YACtDc,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;UAC9B,CAAC,CAAC;UACF,OAAO,MAAMnB,QAAQ,CAAC0B,IAAI,EAAE;QAC9B,CAAC,MAAM;UACL,MAAM1B,QAAQ,GAAG,MAAMoB,KAAK,CAACV,MAAM,EAAE;YACnCW,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;UAC9B,CAAC,CAAC;UACF,OAAO,MAAMnB,QAAQ,CAAC0B,IAAI,EAAE;QAC9B;MACF,CAAC,CAAC,CAAC;IACL;EACF,CAAC,CAAC;EAEF,MAAMT,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}