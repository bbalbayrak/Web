{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/mtrce/portal-test/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';var API_URL=\"https://portal-test.yenaengineering.nl/api\";export var getAllInspectionPlans=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"\".concat(API_URL,\"/inspectionplans\"));case 3:response=_context.sent;console.log(response.data);return _context.abrupt(\"return\",response.data);case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);throw _context.t0;case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function getAllInspectionPlans(){return _ref.apply(this,arguments);};}();// Açık durumdaki Muayene Planlarını almak için endpoint\nexport var getOpenInspectionPlans=function getOpenInspectionPlans(){return axios.get(\"\".concat(API_URL,\"/inspectionplans/open\")).then(function(response){return response.data;}).catch(function(err){throw err;});};// Kapalı durumdaki Muayene Planlarını almak için endpoint\nexport var getClosedInspectionPlans=function getClosedInspectionPlans(){return axios.get(\"\".concat(API_URL,\"/inspectionplans/closed\")).then(function(response){return response.data;}).catch(function(err){throw err;});};// Bir Muayene Planını silmek için endpoint\nexport var deleteInspectionPlan=function deleteInspectionPlan(id){return axios.delete(\"\".concat(API_URL,\"/inspectionplans/\").concat(id)).then(function(response){return response.data;}).catch(function(err){throw err;});};// Bir Muayene Planını güncellemek için endpoint\nexport var updateInspectionPlan=function updateInspectionPlan(id,updateData){return axios.put(\"\".concat(API_URL,\"/inspectionplans/\").concat(id),updateData).then(function(response){return response.data;}).catch(function(err){throw err;});};","map":{"version":3,"names":["axios","API_URL","getAllInspectionPlans","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","sent","console","log","data","abrupt","t0","stop","apply","arguments","getOpenInspectionPlans","then","catch","err","getClosedInspectionPlans","deleteInspectionPlan","id","delete","updateInspectionPlan","updateData","put"],"sources":["C:/Users/mtrce/portal-test/client/src/components/InspectionPlan/inspectionapi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = \"https://portal-test.yenaengineering.nl/api\";\r\n\r\nexport const getAllInspectionPlans = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/inspectionplans`);\r\n      console.log(response.data)\r\n      return response.data;\r\n    } catch (error) {\r\n      // console.error('Error fetching forms:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n// Açık durumdaki Muayene Planlarını almak için endpoint\r\nexport const getOpenInspectionPlans = () => {\r\n  return axios.get(`${API_URL}/inspectionplans/open`)\r\n    .then(response => response.data)\r\n    .catch(err => { throw err; });\r\n};\r\n\r\n// Kapalı durumdaki Muayene Planlarını almak için endpoint\r\nexport const getClosedInspectionPlans = () => {\r\n  return axios.get(`${API_URL}/inspectionplans/closed`)\r\n    .then(response => response.data)\r\n    .catch(err => { throw err; });\r\n};\r\n\r\n// Bir Muayene Planını silmek için endpoint\r\nexport const deleteInspectionPlan = (id) => {\r\n  return axios.delete(`${API_URL}/inspectionplans/${id}`)\r\n    .then(response => response.data)\r\n    .catch(err => { throw err; });\r\n};\r\n\r\n// Bir Muayene Planını güncellemek için endpoint\r\nexport const updateInspectionPlan = (id, updateData) => {\r\n  return axios.put(`${API_URL}/inspectionplans/${id}`, updateData)\r\n    .then(response => response.data)\r\n    .catch(err => { throw err; });\r\n};\r\n"],"mappings":"8PAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,OAAO,CAAG,4CAA4C,CAE5D,MAAO,IAAM,CAAAC,qBAAqB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,QAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAER,CAAAb,KAAK,CAACc,GAAG,IAAAC,MAAA,CAAId,OAAO,qBAAmB,QAAxDO,QAAQ,CAAAG,QAAA,CAAAK,IAAA,CACdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACW,IAAI,CAAC,QAAAR,QAAA,CAAAS,MAAA,UACnBZ,QAAQ,CAACW,IAAI,SAAAR,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAU,EAAA,CAAAV,QAAA,mBAAAA,QAAA,CAAAU,EAAA,0BAAAV,QAAA,CAAAW,IAAA,MAAAf,OAAA,gBAKvB,kBATU,CAAAL,qBAAqBA,CAAA,SAAAC,IAAA,CAAAoB,KAAA,MAAAC,SAAA,OAS/B,CAEH;AACA,MAAO,IAAM,CAAAC,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAA,CAAS,CAC1C,MAAO,CAAAzB,KAAK,CAACc,GAAG,IAAAC,MAAA,CAAId,OAAO,0BAAwB,CAChDyB,IAAI,CAAC,SAAAlB,QAAQ,QAAI,CAAAA,QAAQ,CAACW,IAAI,GAAC,CAC/BQ,KAAK,CAAC,SAAAC,GAAG,CAAI,CAAE,KAAM,CAAAA,GAAG,CAAE,CAAC,CAAC,CACjC,CAAC,CAED;AACA,MAAO,IAAM,CAAAC,wBAAwB,CAAG,QAA3B,CAAAA,wBAAwBA,CAAA,CAAS,CAC5C,MAAO,CAAA7B,KAAK,CAACc,GAAG,IAAAC,MAAA,CAAId,OAAO,4BAA0B,CAClDyB,IAAI,CAAC,SAAAlB,QAAQ,QAAI,CAAAA,QAAQ,CAACW,IAAI,GAAC,CAC/BQ,KAAK,CAAC,SAAAC,GAAG,CAAI,CAAE,KAAM,CAAAA,GAAG,CAAE,CAAC,CAAC,CACjC,CAAC,CAED;AACA,MAAO,IAAM,CAAAE,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAIC,EAAE,CAAK,CAC1C,MAAO,CAAA/B,KAAK,CAACgC,MAAM,IAAAjB,MAAA,CAAId,OAAO,sBAAAc,MAAA,CAAoBgB,EAAE,EAAG,CACpDL,IAAI,CAAC,SAAAlB,QAAQ,QAAI,CAAAA,QAAQ,CAACW,IAAI,GAAC,CAC/BQ,KAAK,CAAC,SAAAC,GAAG,CAAI,CAAE,KAAM,CAAAA,GAAG,CAAE,CAAC,CAAC,CACjC,CAAC,CAED;AACA,MAAO,IAAM,CAAAK,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAIF,EAAE,CAAEG,UAAU,CAAK,CACtD,MAAO,CAAAlC,KAAK,CAACmC,GAAG,IAAApB,MAAA,CAAId,OAAO,sBAAAc,MAAA,CAAoBgB,EAAE,EAAIG,UAAU,CAAC,CAC7DR,IAAI,CAAC,SAAAlB,QAAQ,QAAI,CAAAA,QAAQ,CAACW,IAAI,GAAC,CAC/BQ,KAAK,CAAC,SAAAC,GAAG,CAAI,CAAE,KAAM,CAAAA,GAAG,CAAE,CAAC,CAAC,CACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}