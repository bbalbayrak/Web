{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlperenAlihanEr\\\\portal-test\\\\client\\\\src\\\\components\\\\Works\\\\VendorControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getWorkById, getQRQuestionsByWorkId } from './worksapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VendorControl = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const work_id = searchParams.get('work_id');\n  const step_id = searchParams.get('step_id');\n  const [work, setWork] = useState(null);\n  const [qrQuestions, setQRQuestions] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const workData = await getWorkById(work_id);\n      setWork(workData);\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\n      setQRQuestions(qrQuestionsData.data);\n    };\n    fetchData();\n  }, [work_id]);\n  const handleSend = async () => {\n    try {\n      // Yeni bir work step oluşturun\n      const workStepData = {\n        work_id: work.data.id,\n        step_name: 'QM Control',\n        timestamp: new Date().toISOString(),\n        state: 'QM Control',\n        status: 'Open'\n      };\n      const newWorkStep = await createWorkStep(workStepData);\n      await updateWorkStepStatus(step_id, 'Closed');\n      navigate(`/workorders`);\n    } catch (error) {\n      console.error('Error sending QR questions:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vendor Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: qrQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check d-inline-block\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: `checkbox-${index}`,\n            checked: question.checkbox_vendor || false,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label d-inline-block\",\n          htmlFor: `checkbox-${index}`,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: `input-${index}`,\n          value: question.input_text_vendor || '',\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSend,\n      className: \"btn btn-primary\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(VendorControl, \"CMhP16gh9lQZ8ou55EK6anhhPH8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = VendorControl;\nexport default VendorControl;\nvar _c;\n$RefreshReg$(_c, \"VendorControl\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getWorkById","getQRQuestionsByWorkId","jsxDEV","_jsxDEV","VendorControl","_s","location","navigate","searchParams","URLSearchParams","search","work_id","get","step_id","work","setWork","qrQuestions","setQRQuestions","fetchData","workData","qrQuestionsData","data","handleSend","workStepData","id","step_name","timestamp","Date","toISOString","state","status","newWorkStep","createWorkStep","updateWorkStepStatus","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","type","checked","checkbox_vendor","readOnly","htmlFor","value","input_text_vendor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlperenAlihanEr/portal-test/client/src/components/Works/VendorControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { getWorkById, getQRQuestionsByWorkId } from './worksapi';\r\n\r\n\r\nconst VendorControl = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const work_id = searchParams.get('work_id');\r\n  const step_id = searchParams.get('step_id');\r\n  \r\n  const [work, setWork] = useState(null);\r\n  const [qrQuestions, setQRQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const workData = await getWorkById(work_id);\r\n      setWork(workData);\r\n\r\n      const qrQuestionsData = await getQRQuestionsByWorkId(work_id);\r\n      setQRQuestions(qrQuestionsData.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, [work_id]);\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      // Yeni bir work step oluşturun\r\n      const workStepData = {\r\n        work_id: work.data.id,\r\n        step_name: 'QM Control',\r\n        timestamp: new Date().toISOString(),\r\n        state: 'QM Control',\r\n        status: 'Open',\r\n      };\r\n  \r\n      const newWorkStep = await createWorkStep(workStepData);\r\n      \r\n      await updateWorkStepStatus(step_id, 'Closed');\r\n  \r\n      navigate(`/workorders`);\r\n    } catch (error) {\r\n      console.error('Error sending QR questions:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page-container\">\r\n      <h2>Vendor Control</h2>\r\n      <form>\r\n        {qrQuestions.map((question, index) => (\r\n          <div key={index} className=\"form-group\">\r\n            <div className=\"form-check d-inline-block\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id={`checkbox-${index}`}\r\n                checked={question.checkbox_vendor || false}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <label className=\"form-check-label d-inline-block\" htmlFor={`checkbox-${index}`}>\r\n              {question.question}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id={`input-${index}`}\r\n              value={question.input_text_vendor || ''}\r\n              readOnly\r\n            />\r\n          </div>\r\n        ))}\r\n      </form>\r\n      <button type=\"button\" onClick={handleSend} className=\"btn btn-primary\">\r\n      Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VendorControl;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,WAAW,EAAEC,sBAAsB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,YAAY,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;EACzD,MAAMC,OAAO,GAAGH,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAC3C,MAAMC,OAAO,GAAGL,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAE3C,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMnB,WAAW,CAACW,OAAO,CAAC;MAC3CI,OAAO,CAACI,QAAQ,CAAC;MAEjB,MAAMC,eAAe,GAAG,MAAMnB,sBAAsB,CAACU,OAAO,CAAC;MAC7DM,cAAc,CAACG,eAAe,CAACC,IAAI,CAAC;IACtC,CAAC;IAEDH,SAAS,EAAE;EACb,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,YAAY,GAAG;QACnBZ,OAAO,EAAEG,IAAI,CAACO,IAAI,CAACG,EAAE;QACrBC,SAAS,EAAE,YAAY;QACvBC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnCC,KAAK,EAAE,YAAY;QACnBC,MAAM,EAAE;MACV,CAAC;MAED,MAAMC,WAAW,GAAG,MAAMC,cAAc,CAACT,YAAY,CAAC;MAEtD,MAAMU,oBAAoB,CAACpB,OAAO,EAAE,QAAQ,CAAC;MAE7CN,QAAQ,CAAE,aAAY,CAAC;IACzB,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACE/B,OAAA;IAAKiC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClClC,OAAA;MAAAkC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBtC,OAAA;MAAAkC,QAAA,EACGrB,WAAW,CAAC0B,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC/BzC,OAAA;QAAiBiC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACrClC,OAAA;UAAKiC,SAAS,EAAC,2BAA2B;UAAAC,QAAA,eACxClC,OAAA;YACE0C,IAAI,EAAC,UAAU;YACfT,SAAS,EAAC,kBAAkB;YAC5BZ,EAAE,EAAG,YAAWoB,KAAM,EAAE;YACxBE,OAAO,EAAEH,QAAQ,CAACI,eAAe,IAAI,KAAM;YAC3CC,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACE,eACNtC,OAAA;UAAOiC,SAAS,EAAC,iCAAiC;UAACa,OAAO,EAAG,YAAWL,KAAM,EAAE;UAAAP,QAAA,EAC7EM,QAAQ,CAACA;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACZ,eACRtC,OAAA;UACE0C,IAAI,EAAC,MAAM;UACXT,SAAS,EAAC,cAAc;UACxBZ,EAAE,EAAG,SAAQoB,KAAM,EAAE;UACrBM,KAAK,EAAEP,QAAQ,CAACQ,iBAAiB,IAAI,EAAG;UACxCH,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACR;MAAA,GAnBMG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAqBhB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,eACPtC,OAAA;MAAQ0C,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAE9B,UAAW;MAACc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAEvE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAACpC,EAAA,CA5EID,aAAa;EAAA,QACAL,WAAW,EACXD,WAAW;AAAA;AAAAuD,EAAA,GAFxBjD,aAAa;AA8EnB,eAAeA,aAAa;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}